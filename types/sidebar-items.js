window.SIDEBAR_ITEMS = {"enum":[["BlockErrorKind",""],["BlockRemoverErrorKind",""],["CollectionErrorType",""],["DigestError",""],["HeaderBuilderError","Error type for HeaderBuilder"],["PrimaryMessage",""],["PrimaryWorkerMessage","The messages sent by the primary to its workers."],["ReconfigureNotification","Message to reconfigure worker tasks. This message must be sent by a trusted source."],["RetrievalResult",""],["WorkerMessage","Unsolicited messages exchanged between workers."],["WorkerPrimaryError",""],["WorkerPrimaryMessage","The messages sent by the workers to their primary."]],"fn":[["serialized_batch_digest","Hashes a serialized batch message without deserializing it into a batch."]],"macro":[["bail",""],["ensure",""],["try_fut_and_permit",""]],"mod":[["bounded_future_queue",""],["error",""],["metered_channel",""]],"struct":[["Batch",""],["BatchDigest",""],["BatchMessage",""],["BlockError",""],["BlockRemoverError",""],["Certificate",""],["CertificateDigest",""],["CertificateDigestProto",""],["Collection",""],["CollectionError",""],["CollectionRetrievalResult",""],["ConfigurationClient",""],["ConfigurationServer",""],["ConsensusStore","The persistent storage of the sequencer."],["Empty","Empty message for when we donâ€™t have anything to return"],["GetCollectionsRequest",""],["GetCollectionsResponse",""],["GetPrimaryAddressResponse",""],["Header",""],["HeaderBuilder","Builder for `Header`."],["HeaderDigest",""],["MultiAddrProto",""],["NewEpochRequest",""],["NewNetworkInfoRequest",""],["NodeReadCausalRequest",""],["NodeReadCausalResponse",""],["PrimaryToPrimaryClient",""],["PrimaryToPrimaryServer",""],["PrimaryToWorkerClient",""],["PrimaryToWorkerServer",""],["ProposerClient",""],["ProposerServer",""],["PublicKeyProto",""],["ReadCausalRequest",""],["ReadCausalResponse",""],["RemoveCollectionsRequest",""],["RoundsRequest",""],["RoundsResponse",""],["TransactionProto",""],["TransactionsClient",""],["TransactionsServer",""],["ValidatorClient","The consensus to mempool interface for validator actions."],["ValidatorData",""],["ValidatorServer","The consensus to mempool interface for validator actions."],["Vote",""],["VoteDigest",""],["WorkerBatchRequest","Used by workers to request batches from other workers."],["WorkerBatchResponse","Used by workers to provide batches to other workers."],["WorkerInfoResponse",""],["WorkerToPrimaryClient",""],["WorkerToPrimaryServer",""],["WorkerToWorkerClient",""],["WorkerToWorkerServer",""]],"trait":[["Configuration","Generated trait containing gRPC methods that should be implemented for use with ConfigurationServer."],["PrimaryToPrimary","Generated trait containing RPC methods that should be implemented for use with PrimaryToPrimaryServer."],["PrimaryToWorker","Generated trait containing RPC methods that should be implemented for use with PrimaryToWorkerServer."],["Proposer","Generated trait containing gRPC methods that should be implemented for use with ProposerServer."],["Transactions","Generated trait containing gRPC methods that should be implemented for use with TransactionsServer."],["Validator","Generated trait containing gRPC methods that should be implemented for use with ValidatorServer."],["WorkerToPrimary","Generated trait containing RPC methods that should be implemented for use with WorkerToPrimaryServer."],["WorkerToWorker","Generated trait containing RPC methods that should be implemented for use with WorkerToWorkerServer."]],"type":[["BlockRemoverResult",""],["BlockResult",""],["Round","The round number."],["SequenceNumber","A global sequence number assigned to every certificate."],["ShutdownToken","Shutdown token dropped when a task is properly shut down."],["StoreResult","Convenience type to propagate store errors."],["Transaction",""]]};