name: Benchmark

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  bench:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: cache-id
      with:
        path: ${{ runner.temp }}/benchmark-cache-directory
        key: ${{ runner.os }}-benchmark-cache-v1.0
    - uses: airvzxf/cache-anything-new-action@v1.0.1
      with:
        script: 'install.sh'
        is_cached: ${{ steps.cache-id.outputs.cache-hit }}
        cache: ${{ runner.temp }}/benchmark-cache-directory
        snapshot: '/'
        exclude: '/boot /data /dev /mnt /proc /run /sys'
    - name: Install python dependencies
      run: |
        if [ -f benchmark/requirements.txt ]; then pip install -r benchmark/requirements.txt; fi
    - uses: actions-rs/toolchain@v1
    # Enable caching of the 'librocksdb-sys' crate by additionally caching the
    # 'librocksdb-sys' src directory which is managed by cargo
    - uses: bmwill/rust-cache@v1 # Fork of 'Swatinem/rust-cache' which allows caching additional paths
      with:
        path: ~/.cargo/registry/src/**/librocksdb-sys-*
    - name: prepare artifact directory
      run: |
        mkdir -p artifacts
        echo '# Bench results' > artifacts/bench_results.md
    - name: build benchmarks
      run: cd benchmark && fab local | tail -n 31 | tee -a ../artifacts/bench_results.md
    - name: finish the benchmark results
      run: |
          cat >> artifacts/bench_results.md <<EOF
          <details>
          <summary>PR to merge $GITHUB_HEAD_REF $GITHUB_SHA -> $GITHUB_BASE_REF</summary>
          </details>
          EOF
    - name: escape benchmark results
      id: get-comment-body
      run: |
        body=$(cat artifacts/bench_results.md)
        body="${body//'%'/'%25'}"
        body="${body//$'\n'/'%0A'}"
        body="${body//$'\r'/'%0D'}"
        echo ::set-output name=body::$body
    - name: Create commit comment
      uses: peter-evans/commit-comment@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        body: ${{ steps.get-comment-body.outputs.body }}
