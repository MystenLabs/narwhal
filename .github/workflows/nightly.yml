name: nightly

on:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  beta:
    name: Run test on the beta channel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          components: clippy
          override: true
      # See '.cargo/config' for list of enabled/disappled clippy lints
      - name: cargo clippy
        run: cargo xclippy -D warnings
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  release:
    name: build release binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --all-features --release --profile=release
