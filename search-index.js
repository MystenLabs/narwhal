var searchIndex = JSON.parse('{\
"demo_client":{"doc":"","t":[17,17,5,5,0,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,0,0,0,0,0,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,0,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,10,10,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,16,8,3,3,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11],"n":["BLOCK_GAS_LIMIT","PRIMARY_0_PUBLIC_KEY","get_total_transaction_count_and_size","main","narwhal","println_and_into_inner","BincodeEncodedPayload","CertificateDigest","Collection","CollectionError","CollectionRetrievalResult","Empty","GetCollectionsRequest","GetCollectionsResponse","MultiAddr","NewEpochRequest","NewNetworkInfoRequest","NodeReadCausalRequest","NodeReadCausalResponse","PrimaryAddresses","PublicKey","ReadCausalRequest","ReadCausalResponse","RemoveCollectionsRequest","RoundsRequest","RoundsResponse","Transaction","ValidatorData","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collection_error","collection_id","collection_ids","collection_ids","collection_ids","collection_ids","collection_retrieval_result","configuration_client","configuration_server","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","digest","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","epoch_number","epoch_number","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","newest_round","oldest_round","payload","primary_addresses","primary_to_primary","primary_to_primary_client","primary_to_primary_server","primary_to_worker_client","primary_to_worker_server","proposer_client","proposer_server","public_key","public_key","public_key","result","retrieval_result","round","set_error","stake_weight","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction","transactions","transactions_client","transactions_server","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validator_client","validator_server","validators","validators","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","worker_to_primary","worker_to_primary_client","worker_to_primary_server","worker_to_worker_client","worker_to_worker_server","CollectionError","CollectionErrorType","CollectionNotFound","CollectionTimeout","borrow","borrow_mut","clone","clone_into","cmp","default","eq","equivalent","fmt","from","from_i32","get_hash","hash","into","into_request","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Collection","Error","RetrievalResult","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","0","0","ConfigurationClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","new_epoch","new_network_info","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Configuration","ConfigurationServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","new_epoch","new_network_info","poll_ready","poll_ready","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","PrimaryToPrimaryClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","PrimaryToPrimary","PrimaryToPrimaryServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","PrimaryToWorkerClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","PrimaryToWorker","PrimaryToWorkerServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","ProposerClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","node_read_causal","rounds","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Proposer","ProposerServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","node_read_causal","poll_ready","poll_ready","rounds","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","TransactionsClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","submit_transaction","submit_transaction_stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Transactions","TransactionsServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","submit_transaction","submit_transaction_stream","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","ValidatorClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_collections","inner","into","into_request","new","read_causal","remove_collections","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Validator","ValidatorServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","get_collections","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","read_causal","remove_collections","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","WorkerToPrimaryClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","WorkerToPrimary","WorkerToPrimaryServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","WorkerToWorkerClient","accept_gzip","borrow","borrow_mut","client_batch_request","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","ClientBatchRequestStream","WorkerToWorker","WorkerToWorkerServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","client_batch_request","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["demo_client","","","","","","demo_client::narwhaldemo_client::narwhal::collection_error","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::collection_retrieval_result","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::collection_retrieval_result::RetrievalResult","","demo_client::narwhal::configuration_client","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::configuration_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_primary_client","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_primary_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_worker_client","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_worker_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::proposer_client","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::proposer_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::transactions_client","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::transactions_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::validator_client","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::validator_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_primary_client","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_primary_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_worker_client","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_worker_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","DEMO CONSTANTS","","","","","A bincode encoded payload. This is intended to be used in …","","","","","Empty message for when we don’t have anything to return","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>CollectionError</code>.","A collection for which a sequence of related collections …","List of collections to be retrieved.","List of collections to be removed.","Resulting sequence of collections from DAG walk.","Resulting sequence of collections from DAG walk.","Nested message and enum types in <code>CollectionRetrievalResult</code>.","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>error</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The collection for which this error refers to","The collection’s id","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","","","","TODO: Revisit this for spec compliance. List of retrieval …","","","Sets <code>error</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transactions that are part of the collection","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>CollectionErrorType</code>, or <code>None</code> if <code>value</code> …","","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>CollectionErrorType</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Signals a new epoch","Signals a change in networking info","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Signals a new epoch","Signals a change in networking info","","","","","","","","","","","","","","","The primary-to-primary interface","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a message","","","","","","","","Generated trait containing gRPC methods that should be …","The primary-to-primary interface","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a message","","","","","","","","","","","","The primary-to-worker interface","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a message","","","","","","","","Generated trait containing gRPC methods that should be …","The primary-to-worker interface","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a message","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Returns the read_causal obtained by starting the DAG walk …","","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the read_causal obtained by starting the DAG walk …","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Submit a Transactions","Submit a Transactions","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Submit a Transactions","Submit a Transactions","","","","","","","","","","","","The consensus to mempool interface for validator actions.","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","Returns collection contents for each requested collection.","","Calls <code>U::from(self)</code>.","","","Returns collections along a DAG walk with a well-defined …","Expunges collections from the mempool.","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","The consensus to mempool interface for validator actions.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns collection contents for each requested collection.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns collections along a DAG walk with a well-defined …","Expunges collections from the mempool.","","","","","","","","","","","","","The worker-to-primary interface","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a message","","","","","","","","Generated trait containing gRPC methods that should be …","The worker-to-primary interface","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a message","","","","","","","","","","","","The worker-to-worker interface","Enable decompressing responses with <code>gzip</code>.","","","requests a number of batches that the service then streams …","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a worker message","","","","","","","","Server streaming response type for the ClientBatchRequest …","Generated trait containing gRPC methods that should be …","The worker-to-worker interface","","","","","","","","","requests a number of batches that the service then streams …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a worker message","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,14,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,0,20,17,19,21,25,0,0,0,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,26,27,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,11,11,9,9,10,11,12,13,14,15,16,1,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,27,28,29,29,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,11,16,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,23,23,28,15,12,0,0,0,0,0,0,15,22,24,18,1,24,11,15,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,17,18,19,20,21,22,23,24,25,29,10,16,0,0,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,0,0,26,27,9,10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,12,0,0,0,0,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,92,93,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,56,0,0,0,54,56,54,56,54,54,54,56,54,56,54,56,54,56,54,54,54,56,54,56,54,54,55,55,54,54,54,56,54,56,54,56,54,56,54,56,54,54,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,65,0,0,0,63,65,63,65,63,63,63,65,63,65,63,65,63,65,63,63,63,65,63,65,63,63,63,63,63,64,65,63,65,63,65,63,65,63,65,63,63,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,69,0,0,0,67,69,67,69,67,67,67,69,67,69,67,69,67,69,67,67,67,69,67,69,67,67,67,67,67,68,69,67,69,67,69,67,69,67,69,67,67,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,73,0,0,0,71,73,71,73,71,71,71,73,71,73,71,73,71,73,71,71,71,73,71,73,71,71,72,71,71,72,71,73,71,73,71,73,71,73,71,73,71,71,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,78,0,0,0,76,78,76,78,76,76,76,78,76,78,76,78,76,78,76,76,76,78,76,78,76,76,76,76,76,77,77,78,76,78,76,78,76,78,76,78,76,76,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,83,0,0,0,81,83,81,83,81,81,81,83,81,83,81,83,81,83,81,81,82,81,83,81,83,81,81,81,81,82,82,81,83,81,83,81,83,81,83,81,83,81,81,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,87,0,0,0,85,87,85,87,85,85,85,87,85,87,85,87,85,87,85,85,85,87,85,87,85,85,85,85,85,86,87,85,87,85,87,85,87,85,87,85,85,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,91,90,0,0,0,89,91,89,91,89,89,89,90,91,89,91,89,91,89,91,89,89,89,91,89,91,89,89,89,89,89,90,91,89,91,89,91,89,91,89,91,89,89],"f":[0,0,[[[2,[1]]]],[[],[[5,[[4,[3]]]]]],0,[[[5,[6,7]]],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9],[10],[11],[12],[13],[14],[15],[16],[1],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[1,1],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],16],[[],1],[[],17],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],0,[9,30],[10,30],[11,30],[12,30],[13,30],[14,30],[15,30],[16,30],[1,30],[17,30],[18,30],[19,30],[20,30],[21,30],[22,30],[23,30],[24,30],[25,30],[26,30],[27,30],[28,30],[29,30],0,0,[[9,9],31],[[10,10],31],[[11,11],31],[[12,12],31],[[13,13],31],[[14,14],31],[[15,15],31],[[16,16],31],[[1,1],31],[[17,17],31],[[18,18],31],[[19,19],31],[[20,20],31],[[21,21],31],[[22,22],31],[[23,23],31],[[24,24],31],[[25,25],31],[[26,26],31],[[27,27],31],[[28,28],31],[[29,29],31],[11,32],0,[[9,33],34],[[9,33],34],[[10,33],34],[[11,33],34],[[12,33],34],[[13,33],34],[[14,33],34],[[15,33],34],[[16,33],34],[[1,33],34],[[17,33],34],[[17,33],34],[[18,33],34],[[18,33],34],[[19,33],34],[[19,33],34],[[20,33],34],[[20,33],34],[[21,33],34],[[21,33],34],[[22,33],34],[[22,33],34],[[23,33],34],[[23,33],34],[[24,33],34],[[24,33],34],[[25,33],34],[[25,33],34],[[26,33],34],[[27,33],34],[[28,33],34],[[29,33],34],[[29,33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,32]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[32,32],[[]],[[32,32],38],[[],32],[[32,32],31],[[],31],[[32,33],34],[[]],[39,[[8,[32]]]],[[],40],[32],[[]],[[],35],[39,31],[[32,32],[[8,[38]]]],[[]],[[],5],[[],5],[[],37],[[]],0,0,0,[[]],[[]],[41,41],[[]],[41],[41,30],[[41,41],31],[[41,33],34],[[]],[[]],[[],35],[[8,42,43,44],[[5,[45]]]],[[]],[[],5],[[],5],[[],37],[[]],0,0,0,[46,46],[[]],[[]],[[[46,[47]]],[[46,[47]]]],[[]],[[],[[5,[[46,[48]],49]]]],[[[46,[50]],33],34],[[]],0,[[]],[[],35],[[],46],[[46,[51,[27]]],[[5,[[6,[29]],7]]]],[[46,[51,[26]]],[[5,[[6,[29]],7]]]],[46,46],[[]],[[],5],[[],5],[[],37],[[]],[[],[[46,[52]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[53],[[54,53]],[[[56,[55]]],[[56,[55]]]],[[[54,[55]]],[[54,[55]]]],[[]],[[]],[[[56,[50]],33],34],[[[54,[[0,[50,55]]]],33],34],[[]],[[]],[[[57,[55]]],[[54,[55]]]],0,[[]],[[]],[[],35],[[],35],[55,[[54,[55]]]],[[[35,[27]]],[[59,[[4,[58]]]]]],[[[35,[26]]],[[59,[[4,[58]]]]]],[60,[[61,[5]]]],[[54,60],[[61,[5]]]],0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[55,[[52,[[54,[55]]]]]],0,[62,62],[[]],[[]],[[[62,[47]]],[[62,[47]]]],[[]],[[],[[5,[[62,[48]],49]]]],[[[62,[50]],33],34],[[]],0,[[]],[[],35],[[],62],[62,62],[[62,[51,[28]]],[[5,[[6,[29]],7]]]],[[]],[[],5],[[],5],[[],37],[[]],[[],[[62,[52]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[63,53]],[53],[[[65,[64]]],[[65,[64]]]],[[[63,[64]]],[[63,[64]]]],[[]],[[]],[[[65,[50]],33],34],[[[63,[[0,[50,64]]]],33],34],[[]],[[]],[[[57,[64]]],[[63,[64]]]],0,[[]],[[]],[[],35],[[],35],[64,[[63,[64]]]],[[63,60],[[61,[5]]]],[60,[[61,[5]]]],0,[[[35,[28]]],[[59,[[4,[58]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[64,[[52,[[63,[64]]]]]],0,[66,66],[[]],[[]],[[[66,[47]]],[[66,[47]]]],[[]],[[],[[5,[[66,[48]],49]]]],[[[66,[50]],33],34],[[]],0,[[]],[[],35],[[],66],[66,66],[[66,[51,[28]]],[[5,[[6,[29]],7]]]],[[]],[[],5],[[],5],[[],37],[[]],[[],[[66,[52]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[53],[[67,53]],[[[69,[68]]],[[69,[68]]]],[[[67,[68]]],[[67,[68]]]],[[]],[[]],[[[69,[50]],33],34],[[[67,[[0,[50,68]]]],33],34],[[]],[[]],[[[57,[68]]],[[67,[68]]]],0,[[]],[[]],[[],35],[[],35],[68,[[67,[68]]]],[60,[[61,[5]]]],[[67,60],[[61,[5]]]],0,[[[35,[28]]],[[59,[[4,[58]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[68,[[52,[[67,[68]]]]]],0,[70,70],[[]],[[]],[[[70,[47]]],[[70,[47]]]],[[]],[[],[[5,[[70,[48]],49]]]],[[[70,[50]],33],34],[[]],0,[[]],[[],35],[[],70],[[70,[51,[24]]],[[5,[[6,[25]],7]]]],[[70,[51,[22]]],[[5,[[6,[23]],7]]]],[70,70],[[]],[[],5],[[],5],[[],37],[[]],[[],[[70,[52]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[53],[[71,53]],[[[73,[72]]],[[73,[72]]]],[[[71,[72]]],[[71,[72]]]],[[]],[[]],[[[73,[50]],33],34],[[[71,[[0,[50,72]]]],33],34],[[]],[[]],[[[57,[72]]],[[71,[72]]]],0,[[]],[[]],[[],35],[[],35],[72,[[71,[72]]]],[[[35,[24]]],[[59,[[4,[58]]]]]],[60,[[61,[5]]]],[[71,60],[[61,[5]]]],[[[35,[22]]],[[59,[[4,[58]]]]]],0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[72,[[52,[[71,[72]]]]]],0,[74,74],[[]],[[]],[[[74,[47]]],[[74,[47]]]],[[]],[[],[[5,[[74,[48]],49]]]],[[[74,[50]],33],34],[[]],0,[[]],[[],35],[[],74],[74,74],[[74,[51,[10]]],[[5,[[6,[29]],7]]]],[[74,75],[[5,[[6,[29]],7]]]],[[]],[[],5],[[],5],[[],37],[[]],[[],[[74,[52]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[76,53]],[53],[[[78,[77]]],[[78,[77]]]],[[[76,[77]]],[[76,[77]]]],[[]],[[]],[[[78,[50]],33],34],[[[76,[[0,[50,77]]]],33],34],[[]],[[]],[[[57,[77]]],[[76,[77]]]],0,[[]],[[]],[[],35],[[],35],[77,[[76,[77]]]],[[76,60],[[61,[5]]]],[60,[[61,[5]]]],0,[[[35,[10]]],[[59,[[4,[58]]]]]],[[[35,[[79,[10]]]]],[[59,[[4,[58]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[77,[[52,[[76,[77]]]]]],0,[80,80],[[]],[[]],[[[80,[47]]],[[80,[47]]]],[[]],[[],[[5,[[80,[48]],49]]]],[[[80,[50]],33],34],[[]],[[80,[51,[17]]],[[5,[[6,[18]],7]]]],0,[[]],[[],35],[[],80],[[80,[51,[20]]],[[5,[[6,[21]],7]]]],[[80,[51,[19]]],[[5,[[6,[29]],7]]]],[80,80],[[]],[[],5],[[],5],[[],37],[[]],[[],[[80,[52]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[53],[[81,53]],[[[83,[82]]],[[83,[82]]]],[[[81,[82]]],[[81,[82]]]],[[]],[[]],[[[83,[50]],33],34],[[[81,[[0,[50,82]]]],33],34],[[]],[[]],[[[57,[82]]],[[81,[82]]]],[[[35,[17]]],[[59,[[4,[58]]]]]],0,[[]],[[]],[[],35],[[],35],[82,[[81,[82]]]],[[81,60],[[61,[5]]]],[60,[[61,[5]]]],[[[35,[20]]],[[59,[[4,[58]]]]]],[[[35,[19]]],[[59,[[4,[58]]]]]],0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[82,[[52,[[81,[82]]]]]],0,[84,84],[[]],[[]],[[[84,[47]]],[[84,[47]]]],[[]],[[],[[5,[[84,[48]],49]]]],[[[84,[50]],33],34],[[]],0,[[]],[[],35],[[],84],[84,84],[[84,[51,[28]]],[[5,[[6,[29]],7]]]],[[]],[[],5],[[],5],[[],37],[[]],[[],[[84,[52]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[53],[[85,53]],[[[87,[86]]],[[87,[86]]]],[[[85,[86]]],[[85,[86]]]],[[]],[[]],[[[87,[50]],33],34],[[[85,[[0,[50,86]]]],33],34],[[]],[[]],[[[57,[86]]],[[85,[86]]]],0,[[]],[[]],[[],35],[[],35],[86,[[85,[86]]]],[[85,60],[[61,[5]]]],[60,[[61,[5]]]],0,[[[35,[28]]],[[59,[[4,[58]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[86,[[52,[[85,[86]]]]]],0,[88,88],[[]],[[]],[[88,[51,[28]]],[[5,[[6,[[79,[28]]]],7]]]],[[[88,[47]]],[[88,[47]]]],[[]],[[],[[5,[[88,[48]],49]]]],[[[88,[50]],33],34],[[]],0,[[]],[[],35],[[],88],[88,88],[[88,[51,[28]]],[[5,[[6,[29]],7]]]],[[]],[[],5],[[],5],[[],37],[[]],[[],[[88,[52]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[53],[[89,53]],[[[35,[28]]],[[59,[[4,[58]]]]]],[[[91,[90]]],[[91,[90]]]],[[[89,[90]]],[[89,[90]]]],[[]],[[]],[[[91,[50]],33],34],[[[89,[[0,[50,90]]]],33],34],[[]],[[]],[[[57,[90]]],[[89,[90]]]],0,[[]],[[]],[[],35],[[],35],[90,[[89,[90]]]],[60,[[61,[5]]]],[[89,60],[[61,[5]]]],0,[[[35,[28]]],[[59,[[4,[58]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],37],[[],37],[[]],[[]],[90,[[52,[[89,[90]]]]]]],"p":[[3,"CollectionRetrievalResult"],[3,"Vec"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"Response"],[3,"Status"],[4,"Option"],[3,"CertificateDigest"],[3,"Transaction"],[3,"CollectionError"],[3,"PrimaryAddresses"],[3,"MultiAddr"],[3,"PublicKey"],[3,"ValidatorData"],[3,"Collection"],[3,"GetCollectionsRequest"],[3,"GetCollectionsResponse"],[3,"RemoveCollectionsRequest"],[3,"ReadCausalRequest"],[3,"ReadCausalResponse"],[3,"RoundsRequest"],[3,"RoundsResponse"],[3,"NodeReadCausalRequest"],[3,"NodeReadCausalResponse"],[3,"NewNetworkInfoRequest"],[3,"NewEpochRequest"],[3,"BincodeEncodedPayload"],[3,"Empty"],[15,"usize"],[15,"bool"],[4,"CollectionErrorType"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"String"],[3,"TypeId"],[4,"Ordering"],[15,"i32"],[15,"u64"],[4,"RetrievalResult"],[15,"u32"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[3,"ConfigurationClient"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"Debug"],[8,"IntoRequest"],[3,"InterceptedService"],[3,"Request"],[3,"ConfigurationServer"],[8,"Configuration"],[3,"_Inner"],[3,"Arc"],[8,"Future"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"PrimaryToPrimaryClient"],[3,"PrimaryToPrimaryServer"],[8,"PrimaryToPrimary"],[3,"_Inner"],[3,"PrimaryToWorkerClient"],[3,"PrimaryToWorkerServer"],[8,"PrimaryToWorker"],[3,"_Inner"],[3,"ProposerClient"],[3,"ProposerServer"],[8,"Proposer"],[3,"_Inner"],[3,"TransactionsClient"],[8,"IntoStreamingRequest"],[3,"TransactionsServer"],[8,"Transactions"],[3,"_Inner"],[3,"Streaming"],[3,"ValidatorClient"],[3,"ValidatorServer"],[8,"Validator"],[3,"_Inner"],[3,"WorkerToPrimaryClient"],[3,"WorkerToPrimaryServer"],[8,"WorkerToPrimary"],[3,"_Inner"],[3,"WorkerToWorkerClient"],[3,"WorkerToWorkerServer"],[8,"WorkerToWorker"],[3,"_Inner"],[13,"Collection"],[13,"Error"]]},\
"narwhal_config":{"doc":"","t":[12,3,3,3,4,4,3,13,6,8,13,8,13,13,13,13,13,3,3,6,6,6,13,3,6,3,3,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,11,12,12,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,5],"n":["0","Authority","BlockSynchronizerParameters","Committee","CommitteeUpdateError","ConfigError","ConsensusAPIGrpcParameters","DifferentStake","Epoch","Export","ExportError","Import","ImportError","MissingFromUpdate","NotInCommittee","NotInCommittee","NotInWorkerCache","Parameters","PrometheusMetricsParameters","SharedCommittee","SharedWorkerCache","Stake","UnknownWorker","WorkerCache","WorkerId","WorkerIndex","WorkerInfo","all_workers","authorities","authorities","batch_size","block_synchronizer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificates_synchronize_timeout","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_api_grpc","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","epoch","epoch","epoch","epoch","eq","eq","eq","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","gc_depth","get_collections_timeout","handler_certificate_deliver_timeout","hash","header_size","import","initialize","initialize","initialize","initialize","into","into","into","into","into","into","into","into","into","into","into","keys","leader","max_batch_delay","max_concurrent_requests","max_header_delay","name","network_diff","network_diff","network_key","network_key","others_primaries","others_workers","our_workers","payload_availability_timeout","payload_synchronize_timeout","primary","primary_address","prometheus_metrics","provide","provide","quorum_threshold","range_synchronize_timeout","remove_collections_timeout","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","socket_addr","socket_addr","stake","stake","sync_retry_delay","sync_retry_nodes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","tracing","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_primary_network_info","utils","validity_threshold","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","worker","worker_address","workers","0","0","0","0","0","0","file","file","message","message","get_available_port"],"q":["narwhal_confignarwhal_config::CommitteeUpdateError","","","narwhal_config::ConfigError","","","","","","","narwhal_config::utils"],"d":["","","","","","","","","The epoch number.","","","","","","","","","Holds all the node properties. An example is provided to …","","","","","","","","","","Returns the addresses of all known workers.","","The authorities of epoch.","The preferred batch size. The workers seal a batch of …","The parameters for the block synchronizer","","","","","","","","","","","","","","","","","","","","","","","The timeout configuration when requesting certificates …","","","","","","","","","","","","","","","","","","","","","","","The parameters for the Consensus API gRPC server","","","","","","","","","","","","","","Returns the current epoch.","Returns the current epoch.","The epoch number for workers","The epoch number of this committee","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The depth of the garbage collection (Denominated in number …","The timeout configuration when requesting batches from …","When a certificate is fetched on the fly from peers, it is …","","The preferred header size. The primary creates a new …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the keys in the committee","Returns a leader node as a weighted choice seeded by the …","The delay after which the workers seal a batch of …","The maximum number of concurrent requests for messages …","The maximum delay that the primary waits between …","The public key of this worker.","Return the network addresses that are present in the …","Return the network addresses that are present in the …","","Network key of the primary.","Return all the network addresses in the committee.","Returns the addresses of all workers with a specific id …","Returns the addresses of all our workers.","The timeout configuration when for when we ask the other …","Timeout when has requested the payload for a certificate …","Returns the primary address of the target primary.","The network address of the primary.","Properties for the prometheus metrics","","","Returns the stake required to reach a quorum (2f+1).","The timeout configuration for synchronizing certificate …","The timeout configuration when removing batches from …","","","","","","","","","","Returns the number of authorities.","Socket address the server should be listening to.","Socket address the server should be listening to.","Return the stake of a specific authority.","The voting power of this authority.","The delay after which the synchronizer retries to send …","Determine with how many nodes to sync when re-trying to …","","","","","","","","","","","","","","","","Address to receive client transactions (WAN).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the networking information of some of the …","","Returns the stake required to reach availability (f+1).","","","","","","","","","","","","Returns the addresses of a specific worker (<code>id</code>) of a …","Address to receive messages from other workers (WAN) and …","The authority to worker index.","","","","","","","","","","","Return an ephemeral, available port. On unix systems, the …"],"i":[10,0,0,0,0,0,0,19,0,0,16,0,16,19,16,19,16,0,0,0,0,0,16,0,0,0,0,1,3,3,5,5,16,19,5,6,7,8,9,10,1,11,3,16,19,5,6,7,8,9,10,1,11,3,8,5,6,7,8,5,6,7,8,9,10,1,11,3,5,6,7,8,9,10,1,11,3,5,5,6,7,8,5,6,7,8,9,10,1,11,3,1,3,1,3,9,11,3,34,16,16,19,19,5,6,7,8,9,10,10,1,1,11,3,3,20,16,19,5,6,7,8,9,10,1,11,3,5,7,8,9,5,35,5,6,7,8,16,19,5,6,7,8,9,10,1,11,3,3,3,5,5,5,9,1,3,3,11,3,1,1,8,8,3,11,5,16,19,3,8,7,5,6,7,8,9,10,1,11,3,3,6,7,3,11,5,5,5,6,7,8,9,10,1,11,3,16,19,10,1,3,5,9,16,19,5,6,7,8,9,10,1,11,3,16,19,5,6,7,8,9,10,1,11,3,16,19,5,6,7,8,9,10,1,11,3,3,0,3,16,19,5,6,7,8,9,10,1,11,3,1,9,1,36,37,38,39,40,41,42,43,42,43,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[1,1],[11,11],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],6],[[],7],[[],8],[[],[[12,[5]]]],[[],[[12,[6]]]],[[],[[12,[7]]]],[[],[[12,[8]]]],[[],[[12,[9]]]],[[],[[12,[10]]]],[[],[[12,[1]]]],[[],[[12,[11]]]],[[],[[12,[3]]]],[1,13],[3,13],0,0,[[9,9],14],[[11,11],14],[[3,3],14],[15,[[12,[16]]]],[[16,17],18],[[16,17],18],[[19,17],18],[[19,17],18],[[5,17],18],[[6,17],18],[[7,17],18],[[8,17],18],[[9,17],18],[[10,17],18],[[10,17],18],[[1,17],18],[[1,17],18],[[11,17],18],[[3,17],18],[[3,17],18],[1,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[9],0,[15,[[12,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[2,[21]]]],[[3,22],21],0,0,0,0,[[1,[2,[21]]],[[24,[23]]]],[[3,3],[[24,[23]]]],[[3,21],[[12,[25,16]]]],0,[[3,21],2],[[1,21,26],2],[[1,21],[[12,[[2,[9]],16]]]],0,0,[[3,21],[[12,[23,16]]]],0,0,[27],[27],[3,28],0,0,[5,12],[6,12],[7,12],[8,12],[9,12],[10,12],[1,12],[11,12],[3,12],[3,29],0,0,[[3,21],28],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[5],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[3,[32,[21]]],[[12,[[2,[19]]]]]],0,[3,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,21,26],[[12,[9,16]]]],0,0,0,0,0,0,0,0,0,0,0,0,[15,33]],"p":[[3,"WorkerCache"],[3,"Vec"],[3,"Committee"],[8,"Iterator"],[3,"Parameters"],[3,"PrometheusMetricsParameters"],[3,"ConsensusAPIGrpcParameters"],[3,"BlockSynchronizerParameters"],[3,"WorkerInfo"],[3,"WorkerIndex"],[3,"Authority"],[4,"Result"],[6,"Epoch"],[15,"bool"],[15,"str"],[4,"ConfigError"],[3,"Formatter"],[6,"Result"],[4,"CommitteeUpdateError"],[6,"SharedWorkerCache"],[6,"PublicKey"],[15,"u64"],[3,"Multiaddr"],[3,"HashSet"],[6,"NetworkPublicKey"],[6,"WorkerId"],[3,"Demand"],[6,"Stake"],[15,"usize"],[3,"String"],[3,"TypeId"],[3,"BTreeMap"],[15,"u16"],[8,"Export"],[8,"Import"],[13,"NotInCommittee"],[13,"MissingFromUpdate"],[13,"DifferentStake"],[13,"NotInCommittee"],[13,"NotInWorkerCache"],[13,"UnknownWorker"],[13,"ImportError"],[13,"ExportError"]]},\
"narwhal_consensus":{"doc":"","t":[2,3,17,11,11,0,12,11,11,0,12,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,11,11,3,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,3,8,3,6,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,10,11,11,11,11,11,11,11,11,10,11,11,3,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,3,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11],"n":["Consensus","ConsensusOutput","DEFAULT_CHANNEL_SIZE","borrow","borrow_mut","bullshark","certificate","clone","clone_into","consensus","consensus_index","dag","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","into_request","metrics","serialize","to_owned","try_from","try_into","tusk","type_id","vzip","Bullshark","borrow","borrow_mut","committee","deref","deref_mut","drop","from","gc_depth","init","into","into_request","into_request","new","process_certificate","store","try_from","try_into","type_id","update_committee","vzip","Consensus","ConsensusProtocol","ConsensusState","Dag","borrow","borrow","borrow_mut","borrow_mut","construct_dag_from_cert_store","dag","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_request","into_request","into_request","into_request","last_committed","last_committed_round","metrics","new","new_from_store","process_certificate","spawn","try_from","try_from","try_into","try_into","type_id","type_id","update","update_committee","vzip","vzip","Dag","DagInvariantViolation","NoCertificateForCoordinates","OutOfCertificates","ValidatorDagError","borrow","borrow","borrow_mut","borrow_mut","contains","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","has_ever_contained","init","init","insert","into","into","into_request","into_request","into_request","into_request","new","node_read_causal","notify_read","provide","read_causal","remove","rounds","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","1","ChannelMetrics","ConsensusMetrics","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","consensus_dag_rounds","dag_size_bytes","default","default","deref","deref","deref_mut","deref_mut","drop","drop","external_consensus_dag_size","external_consensus_dag_vertices_elements","fmt","fmt","from","from","init","init","initialize","initialize","into","into","into_request","into_request","into_request","into_request","last_committed_round","new","new","recovered_consensus_output","recovered_consensus_state","to_owned","to_owned","try_from","try_from","try_into","try_into","tx_sequence","type_id","type_id","vzip","vzip","Tusk","borrow","borrow_mut","committee","deref","deref_mut","drop","from","gc_depth","init","into","into_request","into_request","new","process_certificate","store","try_from","try_into","type_id","update_committee","vzip"],"q":["narwhal_consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_consensus::bullshark","","","","","","","","","","","","","","","","","","","","","narwhal_consensus::consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_consensus::dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_consensus::dag::ValidatorDagError","","","","narwhal_consensus::metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_consensus::tusk","","","","","","","","","","","","","","","","","","","",""],"d":["","The output format of the consensus.","The default channel size used in the consensus and …","","","","The sequenced certificate.","","","","The (global) index associated with this certificate.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The committee information.","","","","Returns the argument unchanged.","The depth of the garbage collector.","","Calls <code>U::from(self)</code>.","","","Create a new Bullshark consensus instance.","","Persistent storage to safe ensure crash-recovery.","","","","","","","Describe how to sequence input certificates.","The state that needs to be persisted for crash-recovery.","The representation of the DAG in memory.","","","","","","Keeps the latest committed certificate (and its parents) …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The last committed round.","Metrics handler","","","","","","","","","","","Update and clean up internal state base on committed …","","","","The publicly exposed Dag handle, to which one can send …","","","","Represents the errors that can be encountered in this …","","","","","Returns whether the node is still in the Dag as a strong …","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns whether the dag has ever contained a node with the …","","","Inserts a Certificate in the Dag.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns a breadth first traversal of the Dag, starting …","Returns the certificate for the digest by waiting until it …","","Returns a breadth first traversal of the Dag, starting …","Removes certificates from the Dag, reclaiming memory in …","Returns the oldest and newest rounds for which a validator …","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of rounds for which the Dag holds certificates …","The approximate size in memory (including heap …","","","","","","","","","The number of elements in the dag (external consensus)","The number of elements from the vertices secondary index …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The last committed round from consensus","","","The number of certificates from consensus that were …","The number of times the consensus state was restored from …","","","","","","","occupancy of the channel from the <code>Consensus</code> to …","","","","","","","","The committee information.","","","","Returns the argument unchanged.","The depth of the garbage collector.","","Calls <code>U::from(self)</code>.","","","Create a new Tusk consensus instance.","","Persistent storage to safe ensure crash-recovery.","","","","",""],"i":[0,0,0,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,14,43,14,43,14,14,14,43,14,43,14,43,14,43,14,43,14,43,14,14,43,43,14,14,14,14,14,44,43,14,43,14,43,14,43,14,44,14,43,0,32,32,32,0,29,32,29,32,29,29,32,29,32,29,32,32,32,29,32,32,29,29,32,29,29,32,29,29,32,32,29,29,29,32,29,29,29,32,32,29,32,29,32,29,32,29,32,45,46,47,46,0,0,21,40,21,40,21,40,21,40,21,40,21,21,21,40,21,40,21,40,21,40,21,21,21,40,21,40,21,40,21,40,21,40,21,21,40,40,21,21,40,21,21,21,40,21,40,21,40,40,21,40,21,40,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42],"f":[0,0,0,[[]],[[]],0,0,[1,1],[[]],0,0,0,[2],[2],[[],[[3,[1]]]],[2],[[1,4],5],[[]],[[],2],[[]],[[],6],[[],7],0,[1,3],[[]],[[],3],[[],3],0,[[],8],[[]],0,[[]],[[]],0,[2],[2],[2],[[]],0,[[],2],[[]],[[],6],[[],7],[[9,[11,[10]],12],13],[[13,14,15,16],[[18,[[17,[1]]]]]],0,[[],3],[[],3],[[],8],[[13,9],18],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[19,12,12],20],0,[2],[2],[2],[2],[2],[2],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],6],[[],7],[[],6],[[],7],0,0,0,[[[17,[16]],[11,[21]]],14],[[[17,[16]],[11,[21]],[23,[22,12]],19,12],14],[[14,15,16],[[18,[[17,[1]]]]]],[[9,[11,[10]],19,[25,[24]],[26,[16]],[27,[16]],[27,[1]],[11,[21]],12],28],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[14,16,12]],[9,18],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[29,30],31],[2],[2],[2],[2],[2],[2],[[32,4],5],[[32,4],5],[[]],[33,32],[[]],[[29,30],31],[[],2],[[],2],[[29,16],[[3,[32]]]],[[]],[[]],[[],6],[[],7],[[],6],[[],7],[[9,[26,[16]],[11,[21]]]],[[29,22,12],[[3,[[17,[30]],32]]]],[[29,30],[[3,[16,32]]]],[34],[[29,30],[[3,[[17,[30]],32]]]],[[29,35],[[3,[32]]]],[[29,22],[[3,[[36,[12]],32]]]],[32,[[38,[37]]]],[[],39],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[40,40],[[]],[[]],0,0,[[],21],[[],40],[2],[2],[2],[2],[2],[2],0,0,[[21,4],5],[[40,4],5],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],6],[[],7],[[],6],[[],7],0,[41,21],[41,40],0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],0,[[],8],[[],8],[[]],[[]],0,[[]],[[]],0,[2],[2],[2],[[]],0,[[],2],[[]],[[],7],[[],6],[[9,[11,[10]],12],42],[[42,14,15,16],[[18,[[17,[1]]]]]],0,[[],3],[[],3],[[],8],[[42,9],18],[[]]],"p":[[3,"ConsensusOutput"],[15,"usize"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"Request"],[3,"TypeId"],[3,"Committee"],[3,"ConsensusStore"],[3,"Arc"],[6,"Round"],[3,"Bullshark"],[3,"ConsensusState"],[6,"SequenceNumber"],[3,"Certificate"],[3,"Vec"],[6,"StoreResult"],[3,"CertificateStore"],[6,"Dag"],[3,"ConsensusMetrics"],[6,"PublicKey"],[3,"HashMap"],[4,"ReconfigureNotification"],[3,"Receiver"],[3,"Receiver"],[3,"Sender"],[3,"JoinHandle"],[3,"Dag"],[3,"CertificateDigest"],[15,"bool"],[4,"ValidatorDagError"],[4,"NodeDagError"],[3,"Demand"],[8,"IntoIterator"],[3,"RangeInclusive"],[8,"Error"],[4,"Option"],[3,"String"],[3,"ChannelMetrics"],[3,"Registry"],[3,"Tusk"],[3,"Consensus"],[8,"ConsensusProtocol"],[13,"OutOfCertificates"],[13,"NoCertificateForCoordinates"],[13,"DagInvariantViolation"]]},\
"narwhal_crypto":{"doc":"","t":[6,6,6,6,6,6,6,0,8,8,17,8,3,8,18,18,18,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,10,10,10,11,10,11,11,11,10,10,11,10,11,11,11,11,10,11,10,11,11,11,10,11,10,11,11,11,11,11,10,11,10,11,11],"n":["AggregateSignature","KeyPair","NetworkKeyPair","NetworkPublicKey","PrivateKey","PublicKey","Signature","traits","AggregateAuthenticator","Authenticator","DEFAULT_DOMAIN","EncodeDecodeBase64","Error","KeyPair","LENGTH","LENGTH","LENGTH","PrivKey","PrivKey","PrivKey","PrivKey","PubKey","PubKey","PubKey","PubKey","Sig","Sig","Sig","Sig","Signer","SigningKey","ToFromBytes","VerifyingKey","add_aggregate","add_signature","aggregate","as_bytes","batch_verify","borrow","borrow_mut","clear","copy","decode_base64","default","encode_base64","fmt","fmt","from","from","from_bytes","from_source","generate","initialize","into","new","private","provide","public","sign","source","to_string","try_from","try_into","try_sign","type_id","verify","verify_batch_empty_fail","vzip"],"q":["narwhal_crypto","","","","","","","","narwhal_crypto::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Type aliases selecting the signature algorithm for the …","","","Trait impl’d by aggregated signatures in asymmetric …","Trait impl’d by signatures in asymmetric cryptography.","","Cryptographic material with an immediate conversion …","Signature errors.","Trait impl’d by a public / private key pair in …","","","","","","","","","","","","","","","","Sign the provided message bytestring using <code>Self</code> (e.g. a …","Trait impl’d by private (secret) keys in asymmetric …","Trait impl’d by concrete types that represent digital …","Trait impl’d by public keys in asymmetric cryptography.","","","Parse a key from its byte representation","Borrow a byte slice representing the serialized form of …","","","","","","","","","","","","Returns the argument unchanged.","Parse a key from its byte representation","Create a new error with an associated source.","","","Calls <code>U::from(self)</code>.","Create a new error with no associated source","","","","Sign the given message and return a digital signature","","","","","Attempt to sign the given message, returning a digital …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,18,19,17,19,20,21,18,19,20,21,17,18,20,21,0,0,0,0,21,21,21,22,21,1,1,1,20,23,1,23,1,1,1,1,22,1,20,1,1,1,20,1,20,24,1,1,1,1,24,1,21,17,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],[[2,[1]]]],[[[4,[3]]],[[2,[1]]]],[[]],[[[4,[5,3]]],[[2,[1]]]],[[]],[[]],[[]],[[]],[6,[[2,[7]]]],[[],1],[[],8],[[1,9],[[2,[10]]]],[[1,9],[[2,[10]]]],[[[12,[11,3]]],1],[[]],[[],[[2,[1]]]],[[[13,[[12,[11,3]]]]],1],[[]],[[]],[[]],[[],1],[[]],[14],[[]],[[]],[1,[[15,[11]]]],[[],8],[[],2],[[],2],[[],[[2,[1]]]],[[],16],[[],[[2,[1]]]],[[],[[2,[7]]]],[[]]],"p":[[3,"Error"],[4,"Result"],[3,"Global"],[3,"Vec"],[8,"ExactSizeIterator"],[15,"str"],[3,"Report"],[3,"String"],[3,"Formatter"],[3,"Error"],[8,"Error"],[3,"Box"],[8,"Into"],[3,"Demand"],[4,"Option"],[3,"TypeId"],[8,"VerifyingKey"],[8,"SigningKey"],[8,"Authenticator"],[8,"KeyPair"],[8,"AggregateAuthenticator"],[8,"ToFromBytes"],[8,"EncodeDecodeBase64"],[8,"Signer"]]},\
"narwhal_dag":{"doc":"","t":[3,3,6,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Node","NodeRef","WeakNodeRef","bfs","bft","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from_pointee","get_hash","hash","init","init","into","into","is_compressible","is_leaf","make_compressible","new","new_leaf","node_dag","parents","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","Bft","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_iter","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","next","to_owned","try_from","try_into","type_id","vzip","Affiliated","DroppedDigest","NodeDag","NodeDagError","UnknownDigests","bft","borrow","borrow","borrow_mut","borrow_mut","clear","compressible","contains","contains_live","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fmt","from","from","get","get_weak","has_head","head_digests","init","init","initialize","into","into","make_compressible","new","parents","provide","size","to_string","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","vzip","vzip","0","0"],"q":["narwhal_dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_dag::bft","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_dag::node_dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_dag::node_dag::NodeDagError",""],"d":["The Dag node, aka vertex.","Reference-counted pointers to a Node","Non reference-counted pointers to a Node","Returns a Breadth-first search of the DAG, as an iterator …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a NodeRef pointing at the Node passed as argument","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the node compressible?","Is the node parent-less?","Make the node compressible. Returns true if the node was …","Create a new DAG inner node that contains the given value …","Create a new DAG leaf node that contains the given value.","","Compress the path from this node to the next …","","","","","","","","Return the value payload of the node","","","Breadth-First Traversal (or Level Order Traversal).","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a <code>Bft</code>, where <code>root</code> is the starting <code>Node</code>.","","","","","","","A trait marking the minimum information we need to sort …","","The Dag data structure This consists morally of two tables …","","","Performs a breadth-first traversal of the Dag starting at …","","","","","","Whether the current value should be marked as compressible …","Returns whether the vertex pointed to by the hash passed …","Returns whether the vertex pointed to by the hash passed …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a weak reference to the requested vertex. This …","Returns whether the vertex pointed to by the hash passed …","Returns an iterator over the digests of the heads of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Marks the node passed as argument as compressible, leaving …","Creates a new Node dag","Hash pointers to the parents of the current value","","Returns the number of elements (nodes) stored","","","","Inserts a node in the Dag from the provided value","","","","","","","",""],"i":[0,0,0,0,0,4,9,4,9,4,4,4,4,9,4,9,4,9,4,9,4,9,4,4,4,9,4,4,4,4,9,4,9,9,9,9,9,9,0,9,4,4,9,4,9,4,9,9,4,9,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,22,0,0,22,21,21,22,21,22,21,20,21,21,21,21,22,21,22,21,22,22,21,22,22,21,22,21,21,21,21,21,22,21,21,22,21,21,20,22,21,22,21,22,21,21,22,21,22,21,22,26,27],"f":[0,0,0,[[[4,[[0,[1,2,3]]]]],5],0,[[]],[[]],[[]],[[]],[4,4],[[]],[6],[4],[6],[6],[6],[6],[6],[[4,4],7],[[[9,[8]],[9,[8]]],7],[[[4,[3]],10],11],[[[9,[3]],10],11],[[]],[[[12,[9]]],4],[9,4],[[]],[9,4],[[],13],[4],[[],6],[[],6],[[]],[[]],[9,7],[9,7],[9,7],[[7,[14,[4]]],9],[7,9],0,[[[9,[[0,[1,2,3]]]]],[[14,[[4,[[0,[1,2,3]]]]]]]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[9],[[]],[[]],0,[[]],[[]],[[[18,[17,17,17]]],[[18,[17,17,17]]]],[[]],[6],[6],[6],[[[18,[3,3,3]],10],11],[[]],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[18,19],[[]],[[],15],[[],15],[[],16],[[]],0,0,0,0,0,[[[21,[[0,[20,1,2,3]]]]],[[15,[5,22]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[[21,[20]]],7],[[[21,[20]]],7],[[],[[21,[20]]]],[6],[6],[6],[6],[6],[6],[[22,22],7],[[[21,[[0,[3,20]]]],10],11],[[22,10],11],[[22,10],11],[[]],[[]],[[[21,[20]]],[[15,[[4,[20]],22]]]],[[[21,[20]]],[[15,[[23,[20]],22]]]],[[[21,[20]]],[[15,[7,22]]]],[[[21,[20]]],5],[[],6],[[],6],[[]],[[]],[[]],[[[21,[20]]],[[15,[7,22]]]],[[],[[21,[20]]]],[[],14],[24],[[[21,[[0,[20,1,2,3]]]]],6],[[],25],[[],15],[[],15],[[[21,[20]],20],[[15,[22]]]],[[],15],[[],15],[[],16],[[],16],[[]],[[]],0,0],"p":[[8,"Sync"],[8,"Send"],[8,"Debug"],[3,"NodeRef"],[8,"Iterator"],[15,"usize"],[15,"bool"],[8,"PartialEq"],[3,"Node"],[3,"Formatter"],[6,"Result"],[3,"Arc"],[15,"u64"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[3,"Bft"],[4,"Option"],[8,"Affiliated"],[3,"NodeDag"],[4,"NodeDagError"],[6,"WeakNodeRef"],[3,"Demand"],[3,"String"],[13,"UnknownDigests"],[13,"DroppedDigest"]]},\
"narwhal_executor":{"doc":"","t":[13,13,3,8,3,13,13,13,13,13,6,6,13,4,6,13,13,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["ClientExecutionError","ClosedChannel","ExecutionIndices","ExecutionState","Executor","ExecutorConnectionDropped","NodeExecutionError","OnlyOneConsensusClientPermitted","PayloadRetrieveError","SerializationError","SerializedTransaction","SerializedTransactionDigest","StoreError","SubscriberError","SubscriberResult","UnexpectedProtocolMessage","UnexpectedWorkerId","bail","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","ensure","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","get_restored_consensus_output","handle_consensus_transaction","init","init","init","initialize","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","load_execution_indices","next_batch_index","next_certificate_index","next_transaction_index","partial_cmp","provide","serialize","source","spawn","to_owned","to_owned","to_string","try_from","try_from","try_from","try_fut_and_permit","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","1"],"q":["narwhal_executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_executor::SubscriberError","","","","","","",""],"d":["","","The state of the subscriber keeping track of the …","","A client subscribing to the consensus output and executing …","","","","","","Convenience type representing a serialized transaction.","Convenience type representing a serialized transaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Execute the transaction and atomically persist the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Load the last consensus index from storage.","The index of the last batch we executed (used for …","The index of the latest consensus message we processed …","The index of the last transaction we executed (used for …","","","","","Spawn a new client subscriber.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,0,0,1,1,1,1,1,0,0,1,0,0,1,1,0,37,1,2,37,1,2,2,1,2,1,2,2,2,37,1,2,37,1,2,2,37,1,2,0,2,2,1,1,2,37,1,1,1,2,0,38,37,1,2,2,37,1,2,37,37,1,1,2,2,38,2,2,2,2,1,2,1,37,1,2,1,37,1,2,0,37,1,2,37,1,2,37,1,2,39,40,41,42,43,44,45,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[2,2],3],[[],2],[4],[4],[4],[4],[4],[4],[[],[[5,[2]]]],[4],[4],[4],0,[[2,2],6],[[],6],[[1,7],8],[[1,7],8],[[2,7],8],[[]],[9,1],[[[11,[10]]],1],[[]],[[]],[[[13,[12]],14],[[5,[[16,[15]],1]]]],[[15,2,[16,[17]]],[[19,[[11,[18]]]]]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[],20],[[],21],[[],21],[[],20],[[],21],[[],20],[[],[[19,[[11,[18]]]]]],0,0,0,[[2,2],[[22,[3]]]],[23],[2,5],[1,[[22,[24]]]],[[25,[27,[26]],28,29,30,[31,[15]],32,[16,[15]]],[[34,[[16,[33]]]]]],[[]],[[]],[[],35],[[],5],[[],5],[[],5],0,[[],5],[[],5],[[],5],[[],36],[[],36],[[],36],[[]],[[]],[[]],0,0,0,0,0,0,0,0],"p":[[4,"SubscriberError"],[3,"ExecutionIndices"],[4,"Ordering"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"StoreError"],[4,"ErrorKind"],[3,"Box"],[3,"ConsensusStore"],[3,"Arc"],[3,"CertificateStore"],[3,"ConsensusOutput"],[3,"Vec"],[15,"u8"],[8,"Future"],[3,"Pin"],[3,"Request"],[3,"Request"],[4,"Option"],[3,"Demand"],[8,"Error"],[6,"PublicKey"],[3,"P2pNetwork"],[3,"Receiver"],[6,"SharedWorkerCache"],[3,"Committee"],[3,"Sender"],[3,"Receiver"],[3,"Registry"],[3,"JoinHandle"],[6,"SubscriberResult"],[3,"String"],[3,"TypeId"],[3,"Executor"],[8,"ExecutionState"],[13,"ClosedChannel"],[13,"StoreError"],[13,"PayloadRetrieveError"],[13,"UnexpectedWorkerId"],[13,"SerializationError"],[13,"NodeExecutionError"],[13,"ClientExecutionError"]]},\
"narwhal_network":{"doc":"","t":[3,3,18,18,18,18,18,8,8,17,3,8,8,16,16,16,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,0,5,11,11,11,11,10,11,11,12,12,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BoundedExecutor","CancelOnDropHandler","DEFAULT_INITIAL_RETRY_INTERVAL","DEFAULT_MAX_RETRY_INTERVAL","DEFAULT_RETRYING_MAX_ELAPSED_TIME","DEFAULT_RETRY_DELAY_RAND_FACTOR","DEFAULT_RETRY_INTERVAL_MULTIPLIER","Lucky","LuckyNetwork","MAX_TASK_CONCURRENCY","P2pNetwork","PrimaryToWorkerRpc","ReliableNetwork","Response","Response","Response","RetryConfig","UnreliableNetwork","available_capacity","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","cleanup","clear","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","init","init","initial_retry_interval","initialize","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lucky_broadcast","max_retry_interval","metrics","multiaddr_to_address","new","new","new_for_single_address","poll","request_batch","request_batch","retry","retry_delay_multiplier","retry_delay_rand_factor","retrying_max_elapsed_time","rng","rng","send","send","send","send","send","send","spawn","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","try_spawn","type_id","type_id","type_id","type_id","unreliable_broadcast","unreliable_broadcast","unreliable_send","unreliable_send","unreliable_send","unreliable_send","unreliable_send","unreliable_send","unreliable_send","vzip","vzip","vzip","vzip","MetricsMakeCallbackHandler","MetricsResponseHandler","NetworkMetrics","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","make_handler","new","new","on_error","on_response","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["narwhal_network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_network::metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","This adapter will make a <code>tokio::task::JoinHandle</code> abort its …","Default for <code>RetryConfig::max_retry_interval</code> (500 ms).","Default for <code>RetryConfig::max_retry_interval</code> (15 s).","Default for <code>RetryConfig::retrying_max_elapsed_time</code> (30 s).","Default for <code>RetryConfig::retry_delay_rand_factor</code> (0.3).","Default for <code>RetryConfig::retry_delay_multiplier</code> (x1.5).","","","","","","","","","","Retry configurations for establishing connections and …","","Returns the executor available capacity for running tasks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The initial retry interval.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Pick a few addresses at random (specified by <code>nodes</code>) and …","The maximum value of the back off period. Once the retry …","","","","Create a new <code>BoundedExecutor</code> from an existing tokio <code>Handle</code> …","","","","","","The value to multiply the current interval with for each …","The randomization factor to use for creating a range …","The maximum elapsed time after instantiating","","","","","","","","","Spawn a <code>Future</code> on the <code>BoundedExecutor</code>. This function is …","","","","","","","","","","","","Try to spawn a <code>Future</code> on the <code>BoundedExecutor</code>. If the …","","","","","Broadcasts a message to all <code>peers</code> passed as an argument. …","Broadcasts a message to all <code>peers</code> passed as an argument. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,9,9,9,9,9,0,0,0,0,0,0,42,43,44,0,0,1,8,1,9,10,8,1,9,10,44,44,8,9,1,9,1,9,9,8,1,9,10,8,1,9,10,8,1,9,10,10,1,9,10,8,1,9,10,8,1,9,10,9,9,8,1,9,10,10,8,8,1,1,9,9,10,10,43,9,0,0,8,1,8,10,45,8,9,9,9,9,46,8,44,8,8,8,8,8,1,1,9,8,1,9,10,8,1,9,10,10,1,8,1,9,10,42,42,42,8,8,8,8,8,8,8,1,9,10,0,0,0,38,36,37,38,36,37,36,37,36,37,38,36,37,38,36,37,38,38,36,37,38,36,37,38,36,37,38,36,37,38,38,36,36,37,37,37,36,37,38,38,36,37,38,36,37,38,36,37,38,36,37,38,36,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[7,[[6,[5]]]]]],[[[4,[3]]],[[7,[[6,[5]]]]]],[8],[[]],[1,1],[9,9],[[]],[[]],[[],9],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[10],[2],[[1,11],12],[[9,11],12],[[[10,[13]],11],12],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],15],[[],15],[[],14],[[],14],[[],15],[[],15],[[],14],[[[4,[3]],2],[[4,[[17,[[18,[[17,[16]]]]]]]]]],0,0,[19,[[17,[20]]]],[21,8],[[2,22],1],[[3,20],8],[[[7,[10]],23],24],[[3,25],[[7,[[6,[5]]]]]],[[8,3,25],[[7,[[6,[5]]]]]],[9,5],0,0,0,[[],26],[8,26],[3,[[7,[[6,[5]]]]]],[[8,3,27],[[7,[[6,[5]]]]]],[[8,3,28],[[7,[[6,[5]]]]]],[[8,3,29],[[7,[[6,[5]]]]]],[[8,3,30],[[7,[[6,[5]]]]]],[[8,3,31],[[7,[[6,[5]]]]]],[1,18],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[7,23],24],[1,[[32,[18,0]]]],[[],33],[[],33],[[],33],[[],33],[[[4,[3]]],[[4,[[17,[[18,[[17,[16]]]]]]]]]],[[[4,[3]]],[[4,[[17,[[18,[[17,[16]]]]]]]]]],[3,[[17,[[18,[[17,[16]]]]]]]],[[8,3,27],[[17,[[18,[[17,[16]]]]]]]],[[8,3,31],[[17,[[18,[[17,[16]]]]]]]],[[8,3,28],[[17,[[18,[[17,[16]]]]]]]],[[8,3,34],[[17,[[18,[[17,[16]]]]]]]],[[8,3,30],[[17,[[18,[[17,[16]]]]]]]],[[8,3,29],[[17,[[18,[[17,[[16,[35]]]]]]]]]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[38],[2],[2],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],14],[[],15],[[],15],[[],14],[[],14],[[],15],[[37,15]],[[39,39,40],36],[[[41,[36]]],37],[38],[[38,16]],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],33],[[]],[[]],[[]]],"p":[[3,"BoundedExecutor"],[15,"usize"],[6,"NetworkPublicKey"],[3,"Vec"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"P2pNetwork"],[3,"RetryConfig"],[3,"CancelOnDropHandler"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Request"],[3,"Request"],[3,"Response"],[6,"Result"],[3,"JoinHandle"],[3,"Multiaddr"],[4,"Address"],[3,"Network"],[3,"Handle"],[3,"Context"],[4,"Poll"],[3,"BatchDigest"],[3,"SmallRng"],[4,"WorkerPrimaryMessage"],[4,"PrimaryWorkerMessage"],[3,"WorkerBatchRequest"],[4,"WorkerMessage"],[4,"PrimaryMessage"],[4,"Result"],[3,"TypeId"],[3,"WorkerSynchronizeMessage"],[3,"WorkerBatchResponse"],[3,"NetworkMetrics"],[3,"MetricsMakeCallbackHandler"],[3,"MetricsResponseHandler"],[15,"str"],[3,"Registry"],[3,"Arc"],[8,"UnreliableNetwork"],[8,"LuckyNetwork"],[8,"ReliableNetwork"],[8,"PrimaryToWorkerRpc"],[8,"Lucky"]]},\
"narwhal_node":{"doc":"","t":[18,3,3,12,11,11,11,11,12,12,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,0,12,11,0,11,11,12,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CHANNEL_CAPACITY","Node","NodeStorage","batch_store","borrow","borrow","borrow_mut","borrow_mut","certificate_store","consensus_store","deref","deref","deref_mut","deref_mut","drop","drop","execution_state","from","from","header_store","init","init","into","into","into_request","into_request","into_request","into_request","metrics","payload_store","reopen","restarter","spawn_primary","spawn_workers","temp_batch_store","try_from","try_from","try_into","try_into","type_id","type_id","vote_digest_store","vzip","vzip","SimpleExecutionState","borrow","borrow_mut","deref","deref_mut","drop","from","handle_consensus_transaction","init","into","into_request","into_request","load_execution_indices","new","try_from","try_into","type_id","vzip","primary_metrics_registry","start_prometheus_server","worker_metrics_registry","NodeRestarter","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","into_request","try_from","try_into","type_id","vzip","watch"],"q":["narwhal_node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_node::execution_state","","","","","","","","","","","","","","","","","","narwhal_node::metrics","","","narwhal_node::restarter","","","","","","","","","","","","","","",""],"d":["The default channel capacity.","High level functions to spawn the primary and the workers.","All the data stores of the node.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Open or reopen all the storage of the node.","","Spawn a new primary. Optionally also spawn the consensus …","Spawn a specified number of workers.","","","","","","","","","","","A simple/dumb execution engine.","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","every time the committee changes.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[34,0,0,6,6,34,6,34,6,6,6,34,6,34,6,34,0,6,34,6,6,34,6,34,6,6,34,34,0,6,6,0,34,34,6,6,34,6,34,6,34,6,6,34,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35],"f":[0,0,0,0,[[]],[[]],[[]],[[]],0,0,[1],[1],[1],[1],[1],[1],0,[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[],2],[[],3],[[],3],[[],2],0,0,[[[5,[4]]],6],0,[[7,8,9,10,6,11,12,13,14],[[17,[[16,[15]]]]]],[[18,16,9,10,6,11,14],[[16,[15]]]],0,[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],0,[[]],[[]],0,[[]],[[]],[1],[1],[1],[[]],[[21,22,23,[16,[24]]],[[27,[[26,[25]]]]]],[[],1],[[]],[[],2],[[],3],[21,[[27,[[26,[25]]]]]],[[[28,[[16,[24]]]]],21],[[],19],[[],19],[[],20],[[]],[18,14],[[29,14],15],[[30,18],14],0,[[]],[[]],[1],[1],[1],[[]],[[],1],[[]],[[],2],[[],3],[[],19],[[],19],[[],20],[[]],[[7,8,16,31,10,32,13,11,33,14]]],"p":[[15,"usize"],[3,"Request"],[3,"Request"],[3,"Path"],[8,"AsRef"],[3,"NodeStorage"],[6,"KeyPair"],[6,"NetworkKeyPair"],[6,"SharedCommittee"],[6,"SharedWorkerCache"],[3,"Parameters"],[15,"bool"],[3,"Arc"],[3,"Registry"],[3,"JoinHandle"],[3,"Vec"],[6,"SubscriberResult"],[6,"PublicKey"],[4,"Result"],[3,"TypeId"],[3,"SimpleExecutionState"],[3,"ConsensusOutput"],[3,"ExecutionIndices"],[15,"u8"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Sender"],[3,"Multiaddr"],[6,"WorkerId"],[3,"Committee"],[3,"PathBuf"],[3,"Receiver"],[3,"Node"],[3,"NodeRestarter"]]},\
"narwhal_primary":{"doc":"","t":[13,4,2,3,4,3,17,2,13,18,18,18,3,13,3,13,3,13,2,18,18,18,4,13,2,6,3,3,4,13,13,13,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,6,3,4,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,3,4,8,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,4,13,13,3,3,4,13,3,3,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["Asynchronous","BlockCommand","BlockHeader","BlockRemover","BlockRemoverCommand","BlockWaiter","CHANNEL_CAPACITY","CertificatesResponse","Cleanup","DESC_COMMITTED_CERTS","DESC_GET_BLOCK_COMMANDS","DESC_NEW_CERTS","DeleteBatchMessage","DeleteBatches","EndpointMetrics","GetBlock","GetBlockResponse","GetBlocks","MockBlockSynchronizer","NAME_COMMITTED_CERTS","NAME_GET_BLOCK_COMMANDS","NAME_NEW_CERTS","NetworkModel","PartiallySynchronous","PayloadAvailabilityResponse","PayloadToken","Primary","PrimaryChannelMetrics","PrimaryWorkerMessage","Reconfigure","RemoveBlocks","RequestBatch","batches","block_synchronizer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","ids","init","init","init","init","init","init","init","init","init","init","init","initialize","initialize","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","new","on_request","on_response","replace_registered_committed_certificates_metric","replace_registered_get_block_commands_metric","replace_registered_new_certificates_metric","serialize","spawn","spawn","spawn","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_availability_responses","tx_batch_removal","tx_batches","tx_block_removal_commands","tx_block_synchronizer_commands","tx_certificates_loopback","tx_committed_certificates","tx_get_block_commands","tx_headers","tx_headers_loopback","tx_helper_requests","tx_new_certificates","tx_others_digests","tx_our_digests","tx_parents","tx_primary_messages","tx_reconfigure","tx_state_handler","tx_sync_certificates","tx_sync_headers","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","id","ids","sender","sender","ids","sender","0","0","0","0","BlockHeader","BlockSynchronizeResult","BlockSynchronizer","Command","NoResponse","SyncError","SynchronizeBlockHeaders","SynchronizeBlockPayload","SynchronizeRange","Timeout","block_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fetched_from_storage","fmt","fmt","fmt","fmt","from","from","from","from","handler","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mock","provide","responses","run","spawn","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","block_ids","certificates","respond_to","respond_to","respond_to","block_id","block_id","BlockDeliveryTimeout","BlockNotFound","BlockSynchronizerHandler","Error","Handler","Internal","PayloadSyncError","block_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_and_synchronize_block_headers","get_and_synchronize_block_headers","get_block_headers","get_block_headers","init","init","into","into","into_request","into_request","into_request","into_request","new","provide","synchronize_block_payloads","synchronize_block_payloads","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","block_id","block_id","block_id","block_id","error","MockBlockSynchronizer","assert_expectations","borrow","borrow_mut","deref","deref_mut","drop","expect_synchronize_block_headers","expect_synchronize_block_payload","from","init","into","into_request","into_request","new","try_from","try_into","type_id","vzip","0","AvailabilityResponse","Certificate","CertificateDigest","CertificateDigestsResponse","CertificatesResponse","CertificatesResponseError","Payload","PayloadAvailabilityResponse","RequestID","ValidationError","available_block_ids","block_ids","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_ids","certificates","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_iter","from_iter","get_hash","hash","init","init","init","init","init","init","initialize","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","partial_cmp","provide","request_id","request_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_certificates","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","invalid_certificates","name"],"q":["narwhal_primarynarwhal_primary::BlockCommand","","","","narwhal_primary::BlockRemoverCommand","","narwhal_primary::PrimaryWorkerMessage","","","","narwhal_primary::block_synchronizer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_primary::block_synchronizer::Command","","","","","narwhal_primary::block_synchronizer::SyncError","","narwhal_primary::block_synchronizer::handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_primary::block_synchronizer::handler::Error","","","","","narwhal_primary::block_synchronizer::mock","","","","","","","","","","","","","","","","","","","narwhal_primary::block_synchronizer::responses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_primary::block_synchronizer::responses::AvailabilityResponse","","","narwhal_primary::block_synchronizer::responses::CertificatesResponseError",""],"d":["","","","BlockRemover is responsible for removing blocks identified …","","BlockWaiter is responsible for fetching the block data …","The default channel capacity for each channel of the …","","The primary indicates a round update.","","","","","Delete the batches, dictated from the provided vector of …","","GetBlock dictates retrieving the block data (vector of …","","GetBlocks will initiate the process of retrieving the …","","","","","The network model in which the primary operates.","","","","","","The messages sent by the primary to its workers.","Reconfigure the worker.","","The primary requests a batch from the worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","occupancy of the channel from the …","occupancy of the channel from the …","occupancy of the channel from the …","occupancy of the channel from the <code>primary::ConsensusAPIGrpc</code>…","occupancy of the channel from the …","occupancy of the channel from the …","occupancy of the channel from the <code>Consensus</code> to the …","occupancy of the channel from the <code>primary::ConsensusAPIGrpc</code>…","occupancy of the channel from the <code>primary::Proposer</code> to the …","occupancy of the channel from the <code>primary::HeaderWaiter</code> to …","occupancy of the channel from the …","occupancy of the channel from the <code>primary::Core</code> to the …","occupancy of the channel from the …","occupancy of the channel from the …","occupancy of the channel from the <code>primary::Core</code> to the …","occupancy of the channel from the …","occupancy of the channel from the reconfigure notification …","occupancy of the channel from the …","occupancy of the channel from the <code>primary::Synchronizer</code> to …","occupancy of the channel from the <code>primary::Synchronizer</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A request to synchronize and output the block headers This …","A request to synchronize the payload (batches) of the …","A request to have this authority catch up with others on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","It designates whether the requested quantity (either the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper struct to allow us access the block_synchronizer …","The errors returned by the Handler. It translates also the …","Handler defines an interface to allow us access the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","It retrieves the requested blocks via the …","The method will return a separate result for each …","It retrieves the requested blocks via the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Synchronizes the block payload for the provided …","","","","","","","","","","","","","","","","","A mock helper for the BlockSynchronizer to help us mock …","Asserts that all the expectations have been fulfilled and …","","","","","","A simple method that allow us to mock responses for the …","A method that allow us to mock responses for the …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This method does two things:","","","","","","","","","","",""],"i":[51,0,0,0,0,0,0,0,1,5,5,5,0,1,0,13,0,13,0,5,5,5,0,51,0,0,0,0,0,1,11,1,3,0,79,80,1,51,81,11,2,13,3,4,5,79,80,1,51,81,11,2,13,3,4,5,2,4,1,2,3,4,5,1,2,3,4,5,2,4,79,80,1,51,81,11,2,13,3,4,5,79,80,1,51,81,11,2,13,3,4,5,1,79,80,1,51,81,11,2,13,3,4,5,3,3,1,11,2,13,3,79,80,1,51,81,11,2,13,3,4,5,3,2,79,80,1,51,81,11,2,13,3,4,5,2,4,79,80,1,51,81,11,2,13,3,4,5,79,79,80,80,1,1,51,51,81,81,11,11,2,2,13,13,3,3,4,4,5,5,4,5,4,4,5,5,5,1,79,80,81,1,2,3,4,5,79,80,1,51,81,11,2,13,3,4,5,79,80,1,51,81,11,2,13,3,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,79,80,1,51,81,11,2,13,3,4,5,79,80,1,51,81,11,2,13,3,4,5,82,83,82,83,84,84,85,86,87,88,0,0,0,0,56,0,59,59,59,56,56,61,58,59,56,61,58,59,56,58,58,56,58,56,61,58,59,56,61,58,59,56,61,58,59,56,58,58,59,56,56,61,58,59,56,0,61,58,59,56,61,58,59,56,61,61,58,58,59,59,56,56,0,56,0,61,61,58,56,56,61,58,59,56,61,58,59,56,61,58,59,56,61,58,59,56,89,90,91,89,90,92,93,63,63,0,0,0,63,63,63,66,63,66,63,63,63,66,63,66,63,66,63,63,63,66,63,43,66,43,66,66,63,66,63,66,66,63,63,66,63,43,66,63,63,66,63,66,63,66,63,66,63,94,95,96,97,97,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,72,0,62,62,0,0,0,62,0,0,75,71,71,72,71,73,74,62,75,72,71,73,74,62,75,74,73,72,72,71,73,74,62,75,72,71,73,74,62,75,72,72,72,71,73,74,62,75,72,71,73,74,62,75,72,71,73,74,62,75,72,75,72,72,72,71,73,74,62,75,75,72,71,73,74,62,75,71,73,74,72,72,72,72,72,71,73,74,62,75,72,72,71,73,74,62,75,72,72,71,71,73,73,74,74,62,62,75,75,72,72,75,71,73,72,71,73,74,62,75,72,75,72,71,73,74,62,75,72,71,73,74,62,75,72,71,73,74,62,75,73,72,71,73,74,62,75,98,99,100,101,101],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[],2],[[],4],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[1]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[3,3],8],[[],8],[[1,9],[[7,[10]]]],[[11,9],12],[[2,9],12],[[13,9],12],[[3,9],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],15],[[],14],[[],15],[[],15],[[],14],[[],15],[[],14],[[],15],[[],14],[[],15],[[],14],[[],14],[[],15],[[],15],[[],14],[[],15],[[],14],[[],15],[[],14],[[],14],[[],15],[16,4],[16,5],[[4,17]],[[4,17,18,19,20]],[[5,16,[23,[[22,[21]]]]]],[[5,16,[23,[[22,[21]]]]]],[[5,16,[23,[[22,[21]]]]]],[1,7],[[24,25,26,27,[30,[28,29]],[30,[31]],[34,[[33,[32]]]],35,[37,[36]],[38,[11]],[38,[[7,[2,2]]]],[40,[39]]],41],[[24,25,26,[37,[36]],[38,[13]],[38,[[7,[42,0]]]],[33,[[0,[43,44,45]]]],35],41],[[24,46,47,48,26,49,[30,[28,29]],27,[30,[31]],[30,[24,50]],[40,[39]],[38,[39]],[40,[13]],[38,[13]],[34,[[33,[32]]]],51,[52,[36]],[40,[39]],16,[34,[[53,[35]]]]],[[54,[41]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[58,58],[56,56],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[58,9],12],[[59,9],12],[[56,9],12],[[56,9],12],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[],15],[[],14],[[],14],[[],15],[[],14],[[],15],[[],15],[[],14],0,[60],0,[61],[[24,25,26,[37,[36]],[38,[59]],[38,[62]],35,[30,[31]],27,49],41],[[]],[[]],[[],17],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],55],[[],55],[[],55],[[],55],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,57],[[]],[[]],[[]],[[]],[63,63],[[]],[6],[6],[6],[6],[6],[6],[[63,9],12],[[63,9],12],[[]],[[]],[[[54,[57]]],[[65,[[23,[64]]]]]],[[66,[54,[57]]],[[65,[[23,[64]]]]]],[[[54,[57]]],[[65,[[23,[64]]]]]],[[66,[54,[57]]],[[65,[[23,[64]]]]]],[[],6],[[],6],[[]],[[]],[[],15],[[],14],[[],15],[[],14],[[[40,[59]],[40,[67]],27,18],66],[60],[[[54,[39]]],[[65,[[23,[64]]]]]],[[66,[54,[39]]],[[65,[[23,[64]]]]]],[[]],[[],17],[[],7],[[],7],[[],7],[[],7],[[],55],[[],55],[[]],[[]],0,0,0,0,0,0,[68],[[]],[[]],[6],[6],[6],[[68,[54,[57]],[54,[[69,[58]]]],70]],[[68,[54,[57]],[54,[[69,[58]]]],70]],[[]],[[],6],[[]],[[],14],[[],15],[[[38,[59]]],68],[[],7],[[],7],[[],55],[[]],0,0,0,0,0,0,0,0,0,0,0,[71,[[54,[57]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[72,72],[71,71],[73,73],[74,74],[62,62],[75,75],[[]],[[]],[[]],[[]],[[]],[[]],[[72,72],76],[[],72],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[72,72],8],[[75,75],8],[[],8],[[72,9],12],[[72,9],[[7,[10]]]],[[71,9],12],[[73,9],12],[[74,9],12],[[62,9],12],[[75,9],12],[[75,9],12],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[77,72],[77,72],[[],78],[72],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],14],[[],15],[[],14],[[],14],[[],15],[[],15],[[],14],[[],15],[[],14],[[],15],[[],14],[[],72],[[72,72],[[34,[76]]]],[60],[71,72],[73,72],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[73,25,26],[[7,[[54,[39]],75]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0],"p":[[4,"PrimaryWorkerMessage"],[3,"DeleteBatchMessage"],[3,"GetBlockResponse"],[3,"EndpointMetrics"],[3,"PrimaryChannelMetrics"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"BlockRemoverCommand"],[6,"Result"],[4,"BlockCommand"],[3,"Request"],[3,"Request"],[3,"Registry"],[3,"String"],[3,"Duration"],[15,"u16"],[4,"Code"],[3,"AtomicI64"],[3,"GenericGauge"],[3,"Box"],[6,"PublicKey"],[3,"Committee"],[6,"SharedWorkerCache"],[3,"CertificateStore"],[3,"HeaderDigest"],[3,"Header"],[3,"Store"],[6,"PayloadToken"],[3,"Dag"],[3,"Arc"],[4,"Option"],[3,"P2pNetwork"],[4,"ReconfigureNotification"],[3,"Receiver"],[3,"Receiver"],[3,"Certificate"],[3,"Sender"],[3,"JoinHandle"],[3,"BatchMessage"],[8,"Handler"],[8,"Send"],[8,"Sync"],[6,"KeyPair"],[6,"NetworkKeyPair"],[6,"SharedCommittee"],[3,"Parameters"],[3,"RoundVoteDigestPair"],[4,"NetworkModel"],[3,"Sender"],[3,"Sender"],[3,"Vec"],[3,"TypeId"],[4,"SyncError"],[3,"CertificateDigest"],[3,"BlockHeader"],[4,"Command"],[3,"Demand"],[3,"BlockSynchronizer"],[4,"AvailabilityResponse"],[4,"Error"],[8,"Future"],[3,"Pin"],[3,"BlockSynchronizerHandler"],[4,"PrimaryMessage"],[3,"MockBlockSynchronizer"],[6,"BlockSynchronizeResult"],[15,"u32"],[3,"PayloadAvailabilityResponse"],[3,"RequestID"],[3,"CertificatesResponse"],[3,"CertificateDigestsResponse"],[4,"CertificatesResponseError"],[4,"Ordering"],[8,"IntoIterator"],[15,"u64"],[3,"BlockRemover"],[3,"BlockWaiter"],[3,"Primary"],[13,"GetBlock"],[13,"GetBlocks"],[13,"RemoveBlocks"],[13,"Cleanup"],[13,"Reconfigure"],[13,"RequestBatch"],[13,"DeleteBatches"],[13,"SynchronizeBlockHeaders"],[13,"SynchronizeBlockPayload"],[13,"SynchronizeRange"],[13,"NoResponse"],[13,"Timeout"],[13,"BlockNotFound"],[13,"Internal"],[13,"BlockDeliveryTimeout"],[13,"PayloadSyncError"],[13,"CertificateDigest"],[13,"Certificate"],[13,"Payload"],[13,"ValidationError"]]},\
"narwhal_storage":{"doc":"","t":[3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CertificateStore","CertificateToken","after_round","borrow","borrow_mut","clear","clone","clone_into","delete","delete_all","deref","deref_mut","drop","from","init","into","into_request","into_request","is_empty","last_round","last_round_number","new","notify_read","read","read_all","to_owned","try_from","try_into","type_id","vzip","write","write_all"],"q":["narwhal_storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The main storage when we have to deal with certificates. …","A type alias used as the value part on the secondary …","Retrieves all the certificates with round &gt;= the provided …","","","Clears both the main storage of the certificates and the …","","","Deletes a single certificate by its digest.","Deletes multiple certificates in an atomic way.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Checks whether the storage is empty. The main storage is …","Retrieves the certificates of the last round","Retrieves the latest round number of certificates in store.","","Waits to get notified until the requested certificate …","Retrieves a certificate from the store. If not found then …","Retrieves multiple certificates by their provided ids. The …","","","","","","Inserts a certificate to the store","Inserts multiple certificates in the storage. This is an …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[[1,2],[[5,[[4,[3]]]]]],[[]],[[]],[1,5],[1,1],[[]],[[1,6],5],[[1,7],5],[8],[8],[8],[[]],[[],8],[[]],[[],9],[[],10],[1,11],[1,[[5,[[4,[3]]]]]],[1,[[12,[2]]]],[[[13,[6,3]],[13,[14]]],1],[[1,6],[[5,[3]]]],[[1,6],[[5,[[12,[3]]]]]],[[1,7],[[5,[[4,[[12,[3]]]]]]]],[[]],[[],15],[[],15],[[],16],[[]],[[1,3],5],[[1,7],5]],"p":[[3,"CertificateStore"],[6,"Round"],[3,"Certificate"],[3,"Vec"],[6,"StoreResult"],[3,"CertificateDigest"],[8,"IntoIterator"],[15,"usize"],[3,"Request"],[3,"Request"],[15,"bool"],[4,"Option"],[3,"DBMap"],[6,"CertificateToken"],[4,"Result"],[3,"TypeId"]]},\
"narwhal_test_utils":{"doc":"","t":[3,3,17,17,3,17,17,3,3,17,3,3,3,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,14,14,14,5,14,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11],"n":["AuthorityFixture","Builder","CERTIFICATES_CF","CERTIFICATE_ID_BY_ROUND_CF","CommitteeFixture","HEADERS_CF","PAYLOAD_CF","PrimaryToPrimaryMockServer","PrimaryToWorkerMockServer","VOTES_CF","WorkerFixture","WorkerToPrimaryMockServer","WorkerToWorkerMockServer","add_authority","address","authorities","authority","batch","batch_with_transactions","batches","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","bump_epoch","certificate","clear","clone","clone_into","cluster","committee","committee_size","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","ensure_test_environment","fixture_batch_with_transactions","fixture_payload","from","from","from","from","from","from","from","from","header","header","header_builder","headers","headers_round","info","init","init","init","init","init","init","init","init","initialize","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keypair","keypair","make_certificates","make_certificates_with_epoch","make_consensus_store","make_optimal_certificates","make_optimal_signed_certificates","make_signed_certificates","mock_certificate","mock_certificate_with_epoch","mock_signed_certificate","network_keypair","network_public_key","new","number_of_workers","open_batch_store","public_key","random_key","random_network","randomize_ports","request_batch","request_batches","rng","send_message","send_message","send_message","send_message","shared_worker_cache","spawn","spawn","spawn","spawn","synchronize","temp_dir","test_channel","test_committed_certificates_channel","test_get_block_commands","test_network","test_new_certificates_channel","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","worker","worker_cache","worker_index","worker_info","worker_keypairs","AuthorityDetails","Cluster","PrimaryNodeDetails","WorkerNodeDetails","assert_progress","authorities","authority","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","committee_shared","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","id","id","id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_running","is_running","key_pair","metric","name","network_key_pair","new","new","new_configuration_client","new_proposer_client","new_transactions_client","primary","registry","restart","setup_tracing","start","start","start_all_workers","start_node","start_primary","start_worker","stop_all","stop_node","stop_primary","stop_worker","to_owned","to_owned","to_owned","transactions_address","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_transaction_confirmation","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","worker","worker_cache_shared","worker_transaction_addresses"],"q":["narwhal_test_utilsnarwhal_test_utils::cluster","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Add a new authority to the commit by randoming generating …","","","","Batches","","generate multiple fixture batches. The number of generated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Headers, Votes, Certificates","","","","","","","","","","","","","Keys, Committee","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The authority details hold all the necessary structs and …","","","","This method asserts the progress of the cluster. …","Returns all the running authorities. Any authority that:","Returns the authority identified by the provided id. Will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","This method returns whether the node is still running or …","This method returns whether the node is still running or …","","Returns the metric - if exists - identified by the …","","","Initialises a new cluster by the provided parameters. The …","","Creates a new configuration client that connects to the …","Creates a new proposer client that connects to the …","This method returns a new client to send transactions to …","Returns the current primary node running as a clone. If …","","Will restart the node with the current setup that has been …","","Starts a cluster by the defined number of authorities. The …","Starts the node’s primary and workers. If the …","","Starts the authority node by the defined id - if not …","Starts the primary node. If the preserve_store value is …","Starts the worker node by the provided id. If worker is …","Stops all the nodes (primary &amp; workers).","This method stops the authority (both the primary and the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the worker with the provided id. If not found then …","","Helper method to return transaction addresses of all the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,50,43,48,11,1,2,25,14,50,43,48,11,1,2,25,14,11,1,1,1,11,14,14,0,1,11,11,50,43,48,11,1,2,25,14,50,43,48,11,1,2,25,14,50,43,48,11,1,2,25,14,0,0,0,50,43,48,11,1,2,25,14,1,2,2,1,1,25,50,43,48,11,1,2,25,14,11,50,43,48,11,1,2,25,14,50,50,43,43,48,48,11,11,1,1,2,2,25,25,14,14,2,25,0,0,0,0,0,0,0,0,0,2,2,11,11,0,2,0,0,11,43,48,11,50,43,48,14,1,50,43,48,14,43,0,0,0,0,0,0,14,0,50,43,48,11,1,2,25,14,50,43,48,11,1,2,25,14,50,43,48,11,1,2,25,14,2,1,50,43,48,11,1,2,25,14,2,1,2,50,2,0,0,0,0,64,64,64,64,68,69,67,64,68,69,67,68,69,67,68,69,67,64,64,68,69,67,64,68,69,67,64,68,69,67,64,68,69,67,68,69,67,64,68,69,67,64,68,69,67,64,64,68,68,69,69,67,67,68,69,68,68,67,68,64,67,67,67,67,67,69,67,0,64,67,67,64,67,67,67,64,67,67,68,69,67,69,64,68,69,67,64,68,69,67,68,64,68,69,67,64,68,69,67,67,64,67],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,3],[1,4],[2,5],[[],6],[7,6],[7,[[8,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[[0,[9,10]]]]],1],[[],11],[1],[[1,12],13],[[]],[14,14],[[]],0,[1,15],[[11,16],11],[[],11],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[17,6],[18,[[21,[19,20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,12],[[2,15],12],[[2,15],22],[1,[[8,[12]]]],[[1,23,24]],[25,26],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],28],[[],28],[[],27],[[],28],[[],27],[[],28],[[],27],[[],27],[[],28],[[],27],[[],28],[[],28],[[],27],[[],27],[[],28],[2,29],[25,30],[[15,[31,[23]],24,32]],[[15,[31,[23]],33,24]],[34,[[36,[35]]]],[[15,[31,[23]],24]],[[[31,[23]],24,15]],[[[31,[23]],24,15,32]],[[15,37,23,[24,[38]]]],[[15,37,23,33,[24,[38]]]],[[37,23,[24,[38]],15]],[2,30],[2,39],[[],11],[[11,16],11],[[],[[40,[19,6]]]],[2,37],[[],29],[[],41],[[11,42],11],[[43,[27,[44]]],[[47,[[46,[45]]]]]],[[48,[27,[49]]],[[47,[[46,[45]]]]]],[[11,[0,[9,10]]],[[11,[[0,[9,10]]]]]],[[50,[27,[51]]],[[47,[[46,[45]]]]]],[[43,[27,[52]]],[[47,[[46,[45]]]]]],[[48,[27,[53]]],[[47,[[46,[45]]]]]],[[14,[27,[54]]],[[47,[[46,[45]]]]]],[1,55],[[30,3]],[[30,3]],[[30,3]],[[30,3]],[[43,[27,[56]]],[[47,[[46,[45]]]]]],[[],57],0,0,0,[[30,3],41],0,[[]],[[],58],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[2,12],61],[[1,12],[[8,[61]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,20],25],[1,62],[2,63],[[50,27],[[47,[[46,[45]]]]]],[2,[[8,[30]]]],0,0,0,0,[[64,65,65],[[66,[7,65]]]],[64,[[8,[67]]]],[[64,7],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,68],[69,69],[67,67],[[]],[[]],[[]],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],0,0,0,[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[],28],[[],27],[[],27],[[],28],[[],27],[[],28],[[],27],[[],28],[68,42],[69,42],0,[[68,70],[[72,[71]]]],0,0,[[[72,[73]],42],64],[[7,29,30,[8,[30]],73,74,55,42],67],[67,[[76,[75]]]],[67,[[77,[75]]]],[[67,20],[[78,[75]]]],[67,68],0,[[67,42,79]],[[],80],[[64,[72,[7]],[72,[7]],[72,[79]]]],[[67,42,[72,[7]]]],[[67,42]],[[64,7,42,[72,[7]]]],[[67,42]],[[67,20,42]],[67],[[64,7]],[67],[[67,20]],[[]],[[]],[[]],0,[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],0,[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[67,20],69],0,[67,[[8,[3]]]]],"p":[[3,"CommitteeFixture"],[3,"AuthorityFixture"],[3,"Multiaddr"],[8,"Iterator"],[3,"Authority"],[3,"Batch"],[15,"usize"],[3,"Vec"],[8,"RngCore"],[8,"CryptoRng"],[3,"Builder"],[3,"Header"],[3,"Certificate"],[3,"PrimaryToPrimaryMockServer"],[3,"Committee"],[3,"NonZeroUsize"],[15,"u32"],[15,"u8"],[3,"BatchDigest"],[6,"WorkerId"],[3,"IndexMap"],[3,"HeaderBuilder"],[6,"Round"],[3,"BTreeSet"],[3,"WorkerFixture"],[3,"WorkerInfo"],[3,"Request"],[3,"Request"],[6,"KeyPair"],[6,"NetworkKeyPair"],[3,"RangeInclusive"],[15,"f64"],[6,"Epoch"],[3,"Path"],[3,"ConsensusStore"],[3,"Arc"],[6,"PublicKey"],[3,"CertificateDigest"],[6,"NetworkPublicKey"],[3,"Store"],[3,"Network"],[15,"bool"],[3,"PrimaryToWorkerMockServer"],[3,"RequestBatchRequest"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"WorkerToWorkerMockServer"],[3,"WorkerBatchRequest"],[3,"WorkerToPrimaryMockServer"],[4,"WorkerPrimaryMessage"],[4,"PrimaryWorkerMessage"],[4,"WorkerMessage"],[4,"PrimaryMessage"],[6,"SharedWorkerCache"],[3,"WorkerSynchronizeMessage"],[3,"PathBuf"],[6,"Transaction"],[4,"Result"],[3,"TypeId"],[3,"Vote"],[3,"WorkerCache"],[3,"WorkerIndex"],[3,"Cluster"],[15,"u64"],[3,"HashMap"],[3,"AuthorityDetails"],[3,"PrimaryNodeDetails"],[3,"WorkerNodeDetails"],[15,"str"],[3,"Metric"],[4,"Option"],[3,"Parameters"],[6,"SharedCommittee"],[3,"Channel"],[3,"ConfigurationClient"],[3,"ProposerClient"],[3,"TransactionsClient"],[3,"Duration"],[3,"TelemetryGuards"]]},\
"narwhal_types":{"doc":"","t":[12,12,3,13,3,13,3,13,3,4,13,3,4,6,6,3,13,3,3,13,13,13,13,13,13,3,13,3,13,4,13,3,13,8,3,3,3,13,13,4,3,13,13,13,13,3,3,3,3,13,3,4,3,13,3,13,3,3,3,3,13,13,13,13,4,8,3,3,8,3,3,4,8,3,3,3,3,3,13,13,4,3,13,3,3,13,13,4,6,3,3,3,6,13,6,13,6,13,6,3,8,3,3,13,13,13,8,3,3,3,3,13,3,3,3,3,4,4,4,3,8,3,3,8,3,3,11,11,11,11,12,11,11,11,12,12,14,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,12,10,11,12,11,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,10,11,11,11,11,10,11,10,11,10,11,12,12,11,11,12,12,12,12,10,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,11,11,11,11,12,10,11,10,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,6,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","Batch","Batch","BatchDigest","BatchError","BatchMessage","BatchTimeout","BlockError","BlockErrorKind","BlockNotFound","BlockRemoverError","BlockRemoverErrorKind","BlockRemoverResult","BlockResult","Certificate","Certificate","CertificateDigest","CertificateDigestProto","CertificatesBatchRequest","CertificatesBatchResponse","CertificatesRangeRequest","CertificatesRangeResponse","CertificatesRequest","Cleanup","Collection","Collection","CollectionError","CollectionError","CollectionErrorType","CollectionNotFound","CollectionRetrievalResult","CollectionTimeout","Configuration","ConfigurationClient","ConfigurationServer","ConsensusStore","DeleteBatches","DeletedBatches","DigestError","Empty","Error","Error","ErrorWhileDeletingBatches","Failed","GetCollectionsRequest","GetCollectionsResponse","GetPrimaryAddressResponse","Header","Header","HeaderBuilder","HeaderBuilderError","HeaderDigest","InvalidArgumentError","MultiAddrProto","NewEpoch","NewEpochRequest","NewNetworkInfoRequest","NodeReadCausalRequest","NodeReadCausalResponse","OthersBatch","OurBatch","PayloadAvailabilityRequest","PayloadAvailabilityResponse","PrimaryMessage","PrimaryToPrimary","PrimaryToPrimaryClient","PrimaryToPrimaryServer","PrimaryToWorker","PrimaryToWorkerClient","PrimaryToWorkerServer","PrimaryWorkerMessage","Proposer","ProposerClient","ProposerServer","PublicKeyProto","ReadCausalRequest","ReadCausalResponse","Reconfigure","Reconfigure","ReconfigureNotification","RemoveCollectionsRequest","RequestBatch","RequestBatchRequest","RequestBatchResponse","RequestedBatch","RequestedBatchNotFound","RetrievalResult","Round","RoundVoteDigestPair","RoundsRequest","RoundsResponse","SequenceNumber","Shutdown","ShutdownToken","StorageFailure","StoreResult","Timeout","Transaction","TransactionProto","Transactions","TransactionsClient","TransactionsServer","UninitializedField","UpdateCommittee","ValidationError","Validator","ValidatorClient","ValidatorData","ValidatorServer","Vote","Vote","VoteDigest","WorkerBatchRequest","WorkerBatchResponse","WorkerInfoResponse","WorkerMessage","WorkerPrimaryError","WorkerPrimaryMessage","WorkerSynchronizeMessage","WorkerToPrimary","WorkerToPrimaryClient","WorkerToPrimaryServer","WorkerToWorker","WorkerToWorkerClient","WorkerToWorkerServer","accept_gzip","accept_gzip","accept_gzip","accept_gzip","address","arbitrary_with","as_ref","author","author","author","bail","batch","batch","batches","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_future_queue","build","bytes","call","call","call","call","call","call","call","call","call","call","call","call","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","collection_id","collection_ids","collection_ids","collection_ids","collection_ids","compressible","connect","connect","connect","connect","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","digest","digest","digest","digests","digests","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_hex","encode_hex_upper","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","ensure","epoch","epoch","epoch","epoch","epoch_number","epoch_number","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","error","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arc","from_arc","from_arc","from_arc","from_arc","from_arc","from_arc","from_arc","from_i32","genesis","get_collections","get_collections","get_hash","get_hash","get_hash","get_hash","get_hash","get_primary_address","get_primary_address","hash","hash","hash","hash","hash","header","id","id","id","id","id","id","id","ids","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_valid","merge","metered_channel","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_epoch","new_epoch","new_network_info","new_network_info","new_unsigned","new_with_signer","newest_round","node_read_causal","node_read_causal","oldest_round","origin","origin","parents","parents","parents","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","primary_address","primary_address","provide","provide","provide","public_key","public_key","public_key","read_causal","read_causal","read_last_committed","read_last_consensus_index","read_sequenced_certificates","remove_collections","remove_collections","request_batch","request_batch","request_batches","request_batches","result","retrieval_result","round","round","round","round","round","round","rounds","rounds","send_gzip","send_gzip","send_gzip","send_gzip","send_message","send_message","send_message","send_message","send_message","send_message","send_message","send_message","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_batch_digest","set_error","signature","signature","signature","signed_authorities","size_of","size_of","size_of","size_of","size_of","stake_weight","submit_transaction","submit_transaction","submit_transaction_stream","submit_transaction_stream","synchronize","synchronize","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction","transactions","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_fut_and_permit","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validators","validators","verify","verify","verify","vote_digest","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_payload_batch","worker_info","worker_info","workers","write_consensus_state","0","0","0","0","0","0","0","1","certificate_ids","certificate_ids","certificate_ids","certificates","from","from","from","max_rounds","payload_availability","range_start","requestor","requestor","requestor","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","BoundedFuturesOrdered","BoundedFuturesUnordered","UnorderedPermit","available_permits","available_permits","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","is_empty","len","len","push","push","push","push_with_permit","reserve","try_from","try_from","try_from","try_into","try_into","try_into","try_next","try_next","type_id","type_id","type_id","vzip","vzip","vzip","with_capacity","with_capacity","AuthorityReuse","CertificateRequiresQuorum","ClosedChannel","DagError","DagResult","HeaderRequiresQuorum","InvalidBitmap","InvalidEpoch","InvalidHeaderId","InvalidSignature","MalformedHeader","SerializationError","ShuttingDown","StoreError","TooOld","UnexpectedVote","UnknownAuthority","VoteTooOld","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","init","into","into_request","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","1","1","2","2","expected","received","Permit","Receiver","ReceiverStream","Sender","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","channel","clone","clone_into","close","close","closed","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","gauge","init","init","init","init","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","is_closed","new","new","poll_discover","poll_next","poll_recv","recv","reserve","send","send","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","try_recv","try_reserve","try_send","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["narwhal_typesnarwhal_types::DigestError","narwhal_types::HeaderBuilderError","","narwhal_types::PrimaryMessage","","","","","","","","","","","","","","","","","","narwhal_types::PrimaryWorkerMessage","","","","narwhal_types::ReconfigureNotification","","narwhal_types::RetrievalResult","","narwhal_types::WorkerMessage","narwhal_types::WorkerPrimaryError","","narwhal_types::WorkerPrimaryMessage","","","","","","","","","narwhal_types::bounded_future_queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_types::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_types::error::DagError","","","","","","","","","","","","","","","","","","narwhal_types::metered_channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Used by workers to send a new batch.","","","","","","","","","","","","","","","","","","","","","The primary indicates a round update.","","","","","","","","","Generated trait containing gRPC methods that should be …","","","The persistent storage of the sequencer.","Delete the batches, dictated from the provided vector of …","When batches are successfully deleted, this message is …","","Empty message for when we don’t have anything to return","An error has been returned by worker","","","","","","","","","Builder for <code>Header</code>.","Error type for HeaderBuilder","","","","Indicate the committee has changed. This happens at epoch …","","","","","The worker indicates it received a batch’s digest from …","The worker indicates it sealed a new batch.","","","","Generated trait containing RPC methods that should be …","","","Generated trait containing RPC methods that should be …","","","The messages sent by the primary to its workers.","Generated trait containing gRPC methods that should be …","","","","","","Reconfigure the worker.","Reconfiguration message sent by the executor (usually upon …","Message to reconfigure worker tasks. This message must be …","","The primary requests a batch from the worker","Used by primary to ask worker for the request.","","The worker sends a requested batch","","","The round number.","","","","A global sequence number assigned to every certificate.","Indicate a shutdown.","Shutdown token dropped when a task is properly shut down.","","Convenience type to propagate store errors.","","","","Generated trait containing gRPC methods that should be …","","","Uninitialized field","Update some network information of the committee.","Custom validation error","Generated trait containing gRPC methods that should be …","The consensus to mempool interface for validator actions.","","The consensus to mempool interface for validator actions.","","","","Used by workers to request batches from other workers.","Used by workers to provide batches to other workers.","","Unsolicited messages exchanged between workers.","","The messages sent by the workers to their primary.","Used by the primary to request that the worker sync the …","Generated trait containing RPC methods that should be …","","","Generated trait containing RPC methods that should be …","","","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear the storecollection for which a sequence of related collections …","List of collections to be retrieved.","List of collections to be removed.","Resulting sequence of collections from DAG walk.","Resulting sequence of collections from DAG walk.","","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …eturns the enum value of <code>error</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Converts an <code>i32</code> to a <code>CollectionErrorType</code>, or <code>None</code> if <code>value</code> …","","Returns collection contents for each requested collection.","Returns collection contents for each requested collection.","","","","","","Retrieve multiaddr of narwhal primary","Retrieve multiaddr of narwhal primary","","","","","","","","","","","","The collection for which this error refers to","The collection’s id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>CollectionErrorType</code>.","","","Create a new consensus store structure by using already …","","","","","","","","","","","","","","","","","","","","","","Signals a new epoch","Signals a new epoch","Signals a change in networking info","Signals a change in networking info","","","","Returns the read_causal obtained by starting the DAG walk …","Returns the read_causal obtained by starting the DAG walk …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns collections along a DAG walk with a well-defined …","Returns collections along a DAG walk with a well-defined …","Load the last committed round of each validator.","Load the last (ie. the highest) consensus index associated …","Load the certificate digests sequenced at a specific …","Expunges collections from the mempool.","Expunges collections from the mempool.","","","","","TODO: Revisit this for spec compliance. List of retrieval …","","","","","","The latest round for which a vote was sent to given …","","","","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hashes a serialized batch message without deserializing it …","Sets <code>error</code> to the provided enum value.","","","","This function requires that certificate was verified …","","","","","","","Submit a Transactions","Submit a Transactions","Submit a Transactions","Submit a Transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transactions that are part of the collection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The hash of the vote used to ensure equality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map of workers’ id and their network addresses.","Persist the consensus state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An async-friendly FuturesUnordered of bounded size. In …","An async-friendly FuturesUnordered of bounded size. In …","","Report the available permits","Report the available permits","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Report if  the queue is empty","Report if  the queue is empty","Report the length of the queue","Report the length of the queue","Push an item using the reserved permit","Push an item into the queue. If the queue is currently …","Push an item into the queue. If the queue is currently …","","Waits for queue capacity. Once capacity to push one future …","","","","","","","Creates a future that attempts to resolve the next item in …","Creates a future that attempts to resolve the next item in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A newtype for an <code>mpsc::Permit</code> which allows us to inject …","An <code>mpsc::Receiver</code> with an <code>IntGauge</code> counting the number of …","Stream API Wrappers! A wrapper around …","An <code>mpsc::Sender</code> with an <code>IntGauge</code> counting the number of …","","","","","","","","","","","Returns the current capacity of the channel.","Constructor Similar to <code>mpsc::channel</code>, <code>channel</code> creates a …","","","Closes the receiving half of a channel without dropping it.","Closes the receiving half of a channel without dropping it.","Completes when the receiver has dropped.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a reference to the underlying gauge.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get back the inner <code>Receiver</code>.","","","","","","","","","","Checks if the channel has been closed. This happens when …","","Create a new <code>ReceiverStream</code>.","","","Polls to receive the next message on this channel. …","Receives the next value for this receiver. Decrements the …","Waits for channel capacity. Once capacity to send one …","","Sends a value, waiting until there is capacity. Increments …","","","","","","","","","","","Attempts to receive the next value for this receiver. …","Tries to acquire a slot in the channel without waiting for …","Attempts to immediately send a message on this <code>Sender</code> …","","","","","","","",""],"i":[45,46,0,79,0,58,0,58,0,0,58,0,0,0,0,0,51,0,0,51,51,51,51,51,53,0,65,0,64,0,64,0,64,0,0,0,0,53,60,0,0,60,65,61,57,0,0,0,0,51,0,0,0,95,0,52,0,0,0,0,60,60,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,60,0,0,53,0,0,60,61,0,0,0,0,0,0,52,0,57,0,57,0,0,0,0,0,93,52,93,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,27,45,5,6,8,48,0,82,83,81,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,0,6,28,11,11,13,13,14,14,15,15,16,19,20,21,22,45,46,6,8,47,49,50,5,55,24,24,25,25,26,26,64,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,81,45,46,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,45,46,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,46,47,49,5,64,35,32,34,36,40,50,1,2,3,4,45,46,6,8,47,49,50,5,55,24,25,26,64,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,81,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,45,46,8,47,48,49,50,5,51,52,53,54,60,61,62,63,79,80,81,82,83,45,8,48,50,24,54,80,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,65,5,5,24,25,26,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,0,6,50,8,48,41,42,45,46,8,47,48,49,50,5,52,55,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,79,80,81,82,83,45,46,47,49,5,52,55,57,58,59,60,61,62,63,64,79,80,81,82,83,0,26,56,59,26,45,46,46,93,93,8,8,47,47,48,49,49,50,5,5,51,52,53,54,55,56,57,58,58,59,59,60,61,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,95,22,96,97,45,46,6,93,93,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,24,25,25,26,26,64,64,27,28,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,11,13,14,15,16,19,20,21,64,50,67,1,46,47,49,5,64,69,3,46,47,49,5,64,50,6,8,48,55,59,26,30,56,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,45,46,6,8,47,49,50,5,55,24,25,26,64,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,81,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,22,22,45,45,46,46,6,6,93,93,8,8,47,47,48,48,49,49,50,50,5,5,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,24,24,25,25,26,26,64,64,27,27,28,28,29,29,30,30,31,31,65,65,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,1,1,2,2,3,3,4,4,11,11,13,13,14,14,15,15,71,71,16,16,73,73,19,19,75,75,20,20,77,77,21,21,79,79,80,80,81,81,82,82,83,83,95,95,64,65,0,22,46,8,48,50,5,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,69,3,69,3,50,48,38,68,2,38,50,48,6,50,8,46,47,49,5,64,6,8,11,11,13,13,14,14,15,15,16,19,20,21,29,43,93,61,95,29,37,39,67,1,22,22,22,67,1,74,73,78,77,33,31,6,50,8,48,63,39,68,2,1,2,3,4,78,76,74,72,71,73,75,77,45,46,8,47,48,49,50,5,51,52,53,54,60,61,62,63,79,80,81,82,83,0,26,6,8,48,50,46,8,47,50,5,29,70,4,70,4,74,73,54,45,46,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,46,93,8,47,49,5,58,59,61,95,25,55,30,22,45,46,6,93,8,47,48,49,50,5,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,0,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,41,42,8,48,50,63,22,45,46,6,93,8,47,48,49,50,5,51,52,53,54,55,56,57,58,59,60,61,62,63,24,25,26,64,27,28,29,30,31,65,32,33,34,35,36,37,38,39,40,41,42,43,44,1,2,3,4,11,13,14,15,71,16,73,19,75,20,77,21,79,80,81,82,83,95,1,2,3,4,11,13,14,15,6,76,75,62,22,160,161,162,163,164,165,166,166,167,168,169,170,170,168,171,172,171,172,167,172,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,184,185,186,0,0,0,142,143,144,142,143,144,142,143,144,142,143,144,142,143,144,142,143,142,143,144,142,143,144,142,143,144,142,143,144,144,142,142,143,143,142,143,142,143,144,142,143,142,142,144,142,143,144,142,143,142,143,144,142,143,144,142,143,142,143,147,147,147,0,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,190,191,192,193,194,195,196,197,198,199,200,201,200,201,200,201,202,202,0,0,0,0,151,151,155,153,152,151,155,153,152,151,153,0,153,153,152,151,153,155,153,152,151,155,153,152,151,155,155,153,152,151,153,152,151,155,153,152,151,151,153,155,153,152,151,155,153,152,151,151,155,155,153,153,152,152,151,151,151,153,155,151,151,151,152,152,153,155,153,153,155,153,152,151,155,153,152,151,151,152,153,153,155,153,152,151,155,153,152,151],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],0,[[]],[5],[[6,7],6],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6,[[10,[8,9]]]],0,[[11,12]],[12],[12],[[13,12]],[[14,12]],[12],[12],[[15,12]],[[16,[18,[17]]]],[[19,[18,[17]]]],[[20,[18,[17]]]],[[21,[18,[17]]]],[22,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24],[25],[[]],[26],[[]],[[]],[[]],[27],[[]],[28],[29],[[]],[30],[[]],[31],[[]],[[]],[32],[33],[[]],[34],[[]],[[]],[35],[[]],[36],[37],[[]],[38],[[]],[39],[[]],[40],[[]],[41],[[]],[[]],[42],[43],[[]],[[]],[44],[[]],[45,45],[46,46],[8,8],[47,47],[48,48],[49,49],[50,50],[5,5],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[24,24],[25,25],[26,26],[64,64],[27,27],[28,28],[29,29],[30,30],[31,31],[65,65],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[[[1,[66]]],[[1,[66]]]],[[[2,[66]]],[[2,[66]]]],[[[3,[66]]],[[3,[66]]]],[[[4,[66]]],[[4,[66]]]],[[[11,[67]]],[[11,[67]]]],[[[13,[68]]],[[13,[68]]]],[[[14,[69]]],[[14,[69]]]],[[[15,[70]]],[[15,[70]]]],[[[71,[66]]],[[71,[66]]]],[[[16,[72]]],[[16,[72]]]],[[[73,[66]]],[[73,[66]]]],[[[19,[74]]],[[19,[74]]]],[[[75,[66]]],[[75,[66]]]],[[[20,[76]]],[[20,[76]]]],[[[77,[66]]],[[77,[66]]]],[[[21,[78]]],[[21,[78]]]],[79,79],[80,80],[81,81],[82,82],[83,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,46],84],[[47,47],84],[[49,49],84],[[5,5],84],[[64,64],84],0,0,0,0,0,[50,85],[[],[[10,[[1,[86]],87]]]],[[],[[10,[[2,[86]],87]]]],[[],[[10,[[3,[86]],87]]]],[[],[[10,[[4,[86]],87]]]],[[],45],[[],46],[[],6],[[],8],[[],47],[[],49],[[],50],[[],5],[[],55],[[],24],[[],25],[[],26],[[],64],[[],27],[[],28],[[],29],[[],30],[[],31],[[],32],[[],33],[[],34],[[],35],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],81],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[[],[[10,[45]]]],[[],[[10,[46]]]],[[],[[10,[8]]]],[[],[[10,[47]]]],[[],[[10,[48]]]],[[],[[10,[49]]]],[[],[[10,[50]]]],[[],[[10,[5]]]],[[],[[10,[51]]]],[[],[[10,[52]]]],[[],[[10,[53]]]],[[],[[10,[54]]]],[[],[[10,[60]]]],[[],[[10,[61]]]],[[],[[10,[62]]]],[[],[[10,[63]]]],[[],[[10,[79]]]],[[],[[10,[80]]]],[[],[[10,[81]]]],[[],[[10,[82]]]],[[],[[10,[83]]]],[45],[8,47],[48,49],[50,5],0,0,0,[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[88],[65],[[]],[[]],[24,88],[25,88],[26,88],[27,88],[28,88],[29,88],[30,88],[31,88],[65,88],[32,88],[33,88],[34,88],[35,88],[36,88],[37,88],[38,88],[39,88],[40,88],[41,88],[42,88],[43,88],[44,88],0,[[6,89],6],[50,89],0,0,0,0,[[45,45],85],[[46,46],85],[[8,8],85],[[47,47],85],[[48,48],85],[[49,49],85],[[50,50],85],[[5,5],85],[[52,52],85],[[55,55],85],[[57,57],85],[[58,58],85],[[59,59],85],[[60,60],85],[[61,61],85],[[62,62],85],[[63,63],85],[[24,24],85],[[25,25],85],[[26,26],85],[[64,64],85],[[27,27],85],[[28,28],85],[[29,29],85],[[30,30],85],[[31,31],85],[[65,65],85],[[32,32],85],[[33,33],85],[[34,34],85],[[35,35],85],[[36,36],85],[[37,37],85],[[38,38],85],[[39,39],85],[[40,40],85],[[41,41],85],[[42,42],85],[[43,43],85],[[44,44],85],[[79,79],85],[[80,80],85],[[81,81],85],[[82,82],85],[[83,83],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],0,[26,64],0,0,0,[[45,90],91],[[46,90],[[10,[92]]]],[[46,90],[[10,[92]]]],[[93,90],91],[[93,90],91],[[8,90],[[10,[92]]]],[[8,90],[[10,[92]]]],[[47,90],[[10,[92]]]],[[47,90],[[10,[92]]]],[[48,90],[[10,[92]]]],[[49,90],[[10,[92]]]],[[49,90],[[10,[92]]]],[[50,90],[[10,[92]]]],[[5,90],[[10,[92]]]],[[5,90],[[10,[92]]]],[[51,90],91],[[52,90],91],[[53,90],91],[[54,90],91],[[55,90],91],[[56,90],91],[[57,90],91],[[58,90],91],[[58,90],91],[[59,90],91],[[59,90],91],[[60,90],91],[[61,90],91],[[61,90],91],[[62,90],91],[[63,90],91],[[24,90],91],[[25,90],91],[[26,90],91],[[64,90],91],[[27,90],91],[[28,90],91],[[29,90],91],[[30,90],91],[[31,90],91],[[65,90],91],[[32,90],91],[[33,90],91],[[34,90],91],[[35,90],91],[[36,90],91],[[37,90],91],[[38,90],91],[[39,90],91],[[40,90],91],[[41,90],91],[[42,90],91],[[43,90],91],[[44,90],91],[[[1,[94]],90],91],[[[2,[94]],90],91],[[[3,[94]],90],91],[[[4,[94]],90],91],[[[11,[[0,[94,67]]]],90],91],[[[13,[[0,[94,68]]]],90],91],[[[14,[[0,[94,69]]]],90],91],[[[15,[[0,[94,70]]]],90],91],[[[71,[94]],90],91],[[[16,[[0,[94,72]]]],90],91],[[[73,[94]],90],91],[[[19,[[0,[94,74]]]],90],91],[[[75,[94]],90],91],[[[20,[[0,[94,76]]]],90],91],[[[77,[94]],90],91],[[[21,[[0,[94,78]]]],90],91],[[79,90],91],[[80,90],91],[[81,90],91],[[82,90],91],[[83,90],91],[[95,90],91],[[95,90],91],[[]],[25,96],[59,97],[[]],[[]],[[]],[98,93],[[]],[99,93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,24],[[]],[96,25],[59,26],[[]],[58,64],[[]],[[]],[7,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[100,[67]]],[[11,[67]]]],[[[100,[68]]],[[13,[68]]]],[[[100,[69]]],[[14,[69]]]],[[[100,[70]]],[[15,[70]]]],[[[100,[72]]],[[16,[72]]]],[[[100,[74]]],[[19,[74]]]],[[[100,[76]]],[[20,[76]]]],[[[100,[78]]],[[21,[78]]]],[101,[[102,[64]]]],[103,[[104,[50]]]],[[[105,[32]]],[[108,[[107,[106]]]]]],[[1,[109,[32]]],[[10,[[110,[33]],111]]]],[[],112],[[],112],[[],112],[[],112],[[],112],[[[105,[44]]],[[108,[[107,[106]]]]]],[[3,[109,[44]]],[[10,[[110,[43]],111]]]],[46],[47],[49],[5],[64],0,[[6,47],6],0,0,0,0,0,0,0,[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[[],18],[[],105],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],105],[[],18],[[],18],[[],105],[101,85],[[102,113,114,115],[[10,[116]]]],0,[[[118,[7,117]],[118,[119,5]]],22],[[],46],[[7,117,89,[121,[46,120]],[122,[5]],123],8],[[8,7,123],48],[[103,8,104],[[124,[50]]]],[[],5],[[],1],[[],2],[[],3],[[],4],[67,[[11,[67]]]],[68,[[13,[68]]]],[69,[[14,[69]]]],[70,[[15,[70]]]],[[],71],[72,[[16,[72]]]],[[],73],[74,[[19,[74]]]],[[],75],[76,[[20,[76]]]],[[],77],[78,[[21,[78]]]],[[[105,[42]]],[[108,[[107,[106]]]]]],[[3,[109,[42]]],[[10,[[110,[44]],111]]]],[[[105,[41]]],[[108,[[107,[106]]]]]],[[3,[109,[41]]],[[10,[[110,[44]],111]]]],[[103,8,104],[[124,[50]]]],[[8,7],48],0,[[[105,[39]]],[[108,[[107,[106]]]]]],[[2,[109,[39]]],[[10,[[110,[40]],111]]]],0,[50,7],0,[[6,[122,[5]]],6],[50,104],0,[[46,46],[[102,[84]]]],[[47,47],[[102,[84]]]],[[49,49],[[102,[84]]]],[[5,5],[[102,[84]]]],[[64,64],[[102,[84]]]],[[6,[121,[46,120]]],6],0,[125,[[126,[10]]]],[[11,125],[[126,[10]]]],[[13,125],[[126,[10]]]],[125,[[126,[10]]]],[125,[[126,[10]]]],[[14,125],[[126,[10]]]],[[15,125],[[126,[10]]]],[125,[[126,[10]]]],[[16,125],[[126,[10]]]],[[19,125],[[126,[10]]]],[[20,125],[[126,[10]]]],[[21,125],[[126,[10]]]],0,0,[127],[127],[127],0,0,0,[[[105,[35]]],[[108,[[107,[106]]]]]],[[1,[109,[35]]],[[10,[[110,[36]],111]]]],[22,[[128,[7,117]]]],[22,[[23,[119]]]],[[22,129],[[23,[[104,[[102,[5]]]]]]]],[[[105,[34]]],[[108,[[107,[106]]]]]],[[1,[109,[34]]],[[10,[[110,[44]],111]]]],[[[18,[82]]],[[108,[[107,[106]]]]]],[[73,[130,[82]]],[[10,[[131,[83]],132]]]],[[[18,[80]]],[[108,[[107,[106]]]]]],[[77,[130,[80]]],[[10,[[131,[81]],132]]]],0,0,[[6,117],6],[50,117],0,0,0,0,[[[105,[37]]],[[108,[[107,[106]]]]]],[[2,[109,[37]]],[[10,[[110,[38]],111]]]],[1,1],[2,2],[3,3],[4,4],[[[18,[79]]],[[108,[[107,[106]]]]]],[[[18,[60]]],[[108,[[107,[106]]]]]],[[[18,[53]]],[[108,[[107,[106]]]]]],[[[18,[51]]],[[108,[[107,[106]]]]]],[[71,[130,[51]]],[[10,[131,132]]]],[[73,[130,[53]]],[[10,[131,132]]]],[[75,[130,[60]]],[[10,[131,132]]]],[[77,[130,[79]]],[[10,[131,132]]]],[45,10],[46,10],[8,10],[47,10],[48,10],[49,10],[50,10],[5,10],[51,10],[52,10],[53,10],[54,10],[60,10],[61,10],[62,10],[63,10],[79,10],[80,10],[81,10],[82,10],[83,10],[133,[[10,[46,95]]]],[[26,64]],[[6,134],6],0,0,[[50,103],[[104,[7]]]],[[46,135],88],[[8,135],88],[[47,135],88],[[50,135],88],[[5,135],88],0,[[[105,[25]]],[[108,[[107,[106]]]]]],[[4,[109,[25]]],[[10,[[110,[44]],111]]]],[[[105,[[136,[25]]]]],[[108,[[107,[106]]]]]],[[4,137],[[10,[[110,[44]],111]]]],[[[18,[54]]],[[108,[[107,[106]]]]]],[[73,[130,[54]]],[[10,[131,132]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[24,[[10,[5]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],0,0,[[8,103,139],124],[[48,103],124],[[50,103,139],124],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[1,[140]]]],[[],[[2,[140]]]],[[],[[3,[140]]]],[[],[[4,[140]]]],[67,[[140,[[11,[67]]]]]],[68,[[140,[[13,[68]]]]]],[69,[[140,[[14,[69]]]]]],[70,[[140,[[15,[70]]]]]],[[6,45,120],6],[18,[[108,[[107,[106]]]]]],[[75,130],[[10,[[131,[62]],132]]]],0,[[22,128,119,5],[[10,[141]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[142,[106]]],88],[[[143,[106]]],88],[[]],[[]],[[]],[[]],[[]],[[]],[88],[88],[88],[88],[88],[88],[88],[88],[88],[[[142,[106]],90],91],[[[143,[106]],90],91],[[]],[[]],[[]],[[],88],[[],88],[[],88],[[]],[[]],[[]],[[],105],[[],18],[[],105],[[],18],[[],105],[[],18],[[[142,[106]]],85],[[[143,[106]]],85],[[[142,[106]]],88],[[[143,[106]]],88],[[[144,[106]],106]],[[[142,[106]],106]],[[[143,[106]],106]],[[[142,[106]],106,145]],[[[142,[106]]],[[10,[[144,[106]],146]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[142,[106]]],106],[[[143,[106]]],106],[[],138],[[],138],[[],138],[[]],[[]],[[]],[88,[[142,[106]]]],[88,[[143,[106]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[88],[88],[88],[[147,90],91],[[147,90],91],[[]],[9,147],[148,147],[[[107,[149]]],147],[[],88],[[]],[[],18],[[],105],[127],[147,[[102,[150]]]],[[],99],[[],10],[[],10],[[],138],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[151,152],[151,152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,88],[[88,154]],[153,153],[[]],[152],[151],[153],[88],[88],[88],[88],[88],[88],[88],[88],[155],[88],[88],[88],[88],[[[153,[94]],90],91],[[[152,[94]],90],91],[[[151,[94]],90],91],[[]],[[]],[[]],[152,151],[[]],[153,154],[[],88],[[],88],[[],88],[[],88],[[]],[[]],[[]],[[]],[151,152],[[],105],[[],18],[[],105],[[],18],[[],105],[[],18],[[],18],[[],105],[[],105],[153,85],[[156,154],155],[152,151],[[108,125],[[126,[[102,[10]]]]]],[[[108,[151]],125],[[126,[102]]]],[[152,125],[[126,[102]]]],[152,102],[153,[[10,[155,157]]]],[155],[153,[[10,[157]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[108,125],[[126,[[102,[10]]]]]],[152,[[10,[158]]]],[153,[[10,[155,159]]]],[153,[[10,[159]]]],[[],138],[[],138],[[],138],[[],138],[[]],[[]],[[]],[[]]],"p":[[3,"ValidatorClient"],[3,"ProposerClient"],[3,"ConfigurationClient"],[3,"TransactionsClient"],[3,"CertificateDigest"],[3,"HeaderBuilder"],[6,"PublicKey"],[3,"Header"],[3,"Error"],[4,"Result"],[3,"ValidatorServer"],[3,"Request"],[3,"ProposerServer"],[3,"ConfigurationServer"],[3,"TransactionsServer"],[3,"PrimaryToPrimaryServer"],[3,"Bytes"],[3,"Request"],[3,"PrimaryToWorkerServer"],[3,"WorkerToPrimaryServer"],[3,"WorkerToWorkerServer"],[3,"ConsensusStore"],[6,"StoreResult"],[3,"CertificateDigestProto"],[3,"TransactionProto"],[3,"CollectionError"],[3,"MultiAddrProto"],[3,"PublicKeyProto"],[3,"ValidatorData"],[3,"Collection"],[3,"CollectionRetrievalResult"],[3,"GetCollectionsRequest"],[3,"GetCollectionsResponse"],[3,"RemoveCollectionsRequest"],[3,"ReadCausalRequest"],[3,"ReadCausalResponse"],[3,"RoundsRequest"],[3,"RoundsResponse"],[3,"NodeReadCausalRequest"],[3,"NodeReadCausalResponse"],[3,"NewNetworkInfoRequest"],[3,"NewEpochRequest"],[3,"GetPrimaryAddressResponse"],[3,"Empty"],[3,"Batch"],[3,"BatchDigest"],[3,"HeaderDigest"],[3,"Vote"],[3,"VoteDigest"],[3,"Certificate"],[4,"PrimaryMessage"],[4,"ReconfigureNotification"],[4,"PrimaryWorkerMessage"],[3,"WorkerSynchronizeMessage"],[3,"BatchMessage"],[3,"BlockRemoverError"],[4,"BlockRemoverErrorKind"],[4,"BlockErrorKind"],[3,"BlockError"],[4,"WorkerPrimaryMessage"],[4,"WorkerPrimaryError"],[3,"WorkerInfoResponse"],[3,"RoundVoteDigestPair"],[4,"CollectionErrorType"],[4,"RetrievalResult"],[8,"Clone"],[8,"Validator"],[8,"Proposer"],[8,"Configuration"],[8,"Transactions"],[3,"PrimaryToPrimaryClient"],[8,"PrimaryToPrimary"],[3,"PrimaryToWorkerClient"],[8,"PrimaryToWorker"],[3,"WorkerToPrimaryClient"],[8,"WorkerToPrimary"],[3,"WorkerToWorkerClient"],[8,"WorkerToWorker"],[4,"WorkerMessage"],[3,"WorkerBatchRequest"],[3,"WorkerBatchResponse"],[3,"RequestBatchRequest"],[3,"RequestBatchResponse"],[4,"Ordering"],[15,"bool"],[3,"Channel"],[3,"Error"],[15,"usize"],[6,"Epoch"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"HeaderBuilderError"],[8,"Debug"],[4,"DigestError"],[6,"Transaction"],[6,"BlockResult"],[3,"UninitializedFieldError"],[3,"String"],[3,"Arc"],[15,"i32"],[4,"Option"],[3,"Committee"],[3,"Vec"],[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[15,"u64"],[15,"u32"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[6,"Round"],[3,"DBMap"],[6,"SequenceNumber"],[6,"WorkerId"],[3,"IndexMap"],[3,"BTreeSet"],[3,"SignatureService"],[6,"DagResult"],[3,"Context"],[4,"Poll"],[3,"Demand"],[3,"HashMap"],[3,"RangeInclusive"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[8,"AsRef"],[6,"Signature"],[3,"MallocSizeOfOps"],[3,"Streaming"],[8,"IntoStreamingRequest"],[3,"TypeId"],[6,"SharedWorkerCache"],[3,"InterceptedService"],[4,"TypedStoreError"],[3,"BoundedFuturesUnordered"],[3,"BoundedFuturesOrdered"],[3,"UnorderedPermit"],[3,"SemaphorePermit"],[3,"AcquireError"],[4,"DagError"],[6,"StoreError"],[4,"ErrorKind"],[8,"Error"],[3,"ReceiverStream"],[3,"Receiver"],[3,"Sender"],[6,"IntGauge"],[3,"Permit"],[3,"Permit"],[3,"SendError"],[4,"TryRecvError"],[4,"TrySendError"],[13,"InvalidArgumentError"],[13,"UninitializedField"],[13,"ValidationError"],[13,"Header"],[13,"Vote"],[13,"Certificate"],[13,"CertificatesRequest"],[13,"CertificatesBatchRequest"],[13,"CertificatesRangeResponse"],[13,"PayloadAvailabilityRequest"],[13,"CertificatesBatchResponse"],[13,"PayloadAvailabilityResponse"],[13,"CertificatesRangeRequest"],[13,"Cleanup"],[13,"Reconfigure"],[13,"RequestBatch"],[13,"DeleteBatches"],[13,"NewEpoch"],[13,"UpdateCommittee"],[13,"Collection"],[13,"Error"],[13,"Batch"],[13,"RequestedBatchNotFound"],[13,"ErrorWhileDeletingBatches"],[13,"OurBatch"],[13,"OthersBatch"],[13,"RequestedBatch"],[13,"DeletedBatches"],[13,"Error"],[13,"Reconfigure"],[13,"ClosedChannel"],[13,"InvalidBitmap"],[13,"InvalidSignature"],[13,"StoreError"],[13,"SerializationError"],[13,"MalformedHeader"],[13,"UnknownAuthority"],[13,"AuthorityReuse"],[13,"UnexpectedVote"],[13,"HeaderRequiresQuorum"],[13,"TooOld"],[13,"VoteTooOld"],[13,"InvalidEpoch"]]},\
"narwhal_worker":{"doc":"","t":[13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12],"n":["Batch","Worker","WorkerMessage","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","from","from","init","init","into","into","into_request","into_request","into_request","into_request","metrics","serialize","spawn","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","Metrics","WorkerChannelMetrics","WorkerEndpointMetrics","WorkerMetrics","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_metrics","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","created_batch_size","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","endpoint_metrics","from","from","from","from","inbound_network_metrics","init","init","init","init","initialise_metrics","initialize","initialize","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","new","new","on_request","on_response","outbound_network_metrics","pending_elements_worker_synchronizer","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_batch_maker","tx_client_processor","tx_primary","tx_quorum_waiter","tx_request_batches_rpc","tx_synchronizer","tx_worker_helper","tx_worker_processor","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","worker_metrics"],"q":["narwhal_worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narwhal_worker::WorkerMessage","narwhal_worker::metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Used by workers to send a new batch.","","Unsolicited messages exchanged between workers.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of created batches from the batch_maker","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Initialises the metrics","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Number of elements pending elements in the worker …","","","","","","","","","","","","","occupancy of the channel from the <code>worker::TxReceiverhandler</code>…","occupancy of the channel from the <code>worker::QuorumWaiter</code> to …","occupancy of the channel from various handlers to the …","occupancy of the channel from the <code>worker::BatchMaker</code> to …","occupancy of the channel from the …","occupancy of the channel from the …","occupancy of the channel from the …","occupancy of the channel from the …","","","","","","","","",""],"i":[1,0,0,30,1,30,1,1,1,30,1,30,1,1,30,1,1,1,1,30,1,30,1,30,1,30,30,1,1,0,1,30,1,30,1,30,1,30,1,30,1,31,0,0,0,0,18,22,23,24,18,22,23,24,18,22,24,18,22,23,24,18,22,23,24,22,22,24,18,22,23,24,18,22,23,24,18,22,23,24,18,18,22,23,24,18,18,22,23,24,0,22,24,18,22,23,24,18,18,22,22,23,23,24,24,22,23,24,24,24,18,22,18,22,23,24,18,22,23,24,18,22,23,24,23,23,23,23,23,23,23,23,18,22,23,24,18,22,23,24,18],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[2],[2],[2],[2],[[],[[3,[1]]]],[2],[2],[[1,1],4],[[],4],[[1,5],[[3,[6]]]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],7],[[],8],[[],8],[[],7],0,[1,3],[[9,10,11,12,13,14,[17,[15,16]],18],[[20,[19]]]],[[]],[[],3],[[],3],[[],3],[[],3],[[],21],[[],21],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[18,18],[22,22],[23,23],[24,24],[[]],[[]],[[]],[[]],0,[[],22],[[],24],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[25,18],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],7],[[],8],[[],7],[[],7],[[],8],[[],7],[[],8],[25,22],[25,23],[25,24],[[24,26]],[[24,26,27,28,29]],0,0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0],"p":[[4,"WorkerMessage"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"Request"],[3,"Request"],[6,"PublicKey"],[6,"NetworkKeyPair"],[6,"WorkerId"],[6,"SharedCommittee"],[6,"SharedWorkerCache"],[3,"Parameters"],[3,"BatchDigest"],[3,"Batch"],[3,"Store"],[3,"Metrics"],[3,"JoinHandle"],[3,"Vec"],[3,"TypeId"],[3,"WorkerMetrics"],[3,"WorkerChannelMetrics"],[3,"WorkerEndpointMetrics"],[3,"Registry"],[3,"String"],[3,"Duration"],[15,"u16"],[4,"Code"],[3,"Worker"],[13,"Batch"]]},\
"node":{"doc":"","t":[5,5,5,5],"n":["analyze","main","run","setup_telemetry"],"q":["node","","",""],"d":["Receives an ordered list of certificates and apply any …","","",""],"i":[0,0,0,0],"f":[[[[2,[1]]]],[[],[[4,[3]]]],[[5,6,7,7,8],[[4,[3]]]],[[9,9,[10,[8]]],11]],"p":[[6,"SerializedTransaction"],[3,"Receiver"],[3,"Report"],[4,"Result"],[3,"ArgMatches"],[6,"KeyPair"],[6,"NetworkKeyPair"],[3,"Registry"],[15,"str"],[4,"Option"],[3,"TelemetryGuards"]]},\
"workspace_hack":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
