var searchIndex = JSON.parse('{\
"config":{"doc":"","t":[3,3,3,4,3,8,13,8,13,13,3,3,6,13,3,6,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["Authority","BlockSynchronizerParameters","Committee","ConfigError","ConsensusAPIGrpcParameters","Export","ExportError","Import","ImportError","NotInCommittee","Parameters","PrimaryAddresses","Stake","UnknownWorker","WorkerAddresses","WorkerId","authorities","batch_size","block_synchronizer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificates_synchronize_timeout","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_api_grpc","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","export","fmt","fmt","from","from","from","from","from","from","from","from","gc_depth","get_collections_timeout","get_hash","hash","header_size","import","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","max_batch_delay","max_concurrent_requests","max_header_delay","ne","others_primaries","others_stake","others_workers","our_workers","payload_availability_timeout","payload_synchronize_timeout","primary","primary","primary_to_primary","primary_to_worker","quorum_threshold","serialize","serialize","serialize","serialize","size","socket_addr","stake","stake","sync_retry_delay","sync_retry_nodes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tracing","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validity_threshold","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","worker","worker_to_primary","worker_to_worker","workers","0","0","file","file","message","message"],"q":["configconfig::ConfigError","","","","",""],"d":["","","","","","","","","","","Holds all the node properties. An example is provided to …","","","","","","","The preferred batch size. The workers seal a batch of …","The parameters for the block synchronizer","","","","","","","","","","","","","","","","","The timeout configuration when requesting certificates …","","","","","","","","","","","","","","","The parameters for the Consensus API gRPC server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The depth of the garbage collection (Denominated in number …","The timeout configuration when requesting batches from …","","","The preferred header size. The primary creates a new …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The delay after which the workers seal a batch of …","The maximum number of concurrent requests for messages …","The maximum delay that the primary waits between …","","Returns the addresses of all primaries except <code>myself</code>.","Returns the stake of all authorities except <code>myself</code>.","Returns the addresses of all workers with a specific id …","Returns the addresses of all our workers.","The timeout configuration when for when we ask the other …","Timeout when has requested the payload for a certificate …","Returns the primary addresses of the target primary.","The network addresses of the primary.","Address to receive messages from other primaries (WAN).","Address to receive messages from our primary (LAN).","Returns the stake required to reach a quorum (2f+1).","","","","","Returns the number of authorities.","Socket address the server should be listening to.","Return the stake of a specific authority.","The voting power of this authority.","The delay after which the synchronizer retries to send …","Determine with how many nodes to sync when re-trying to …","","","","","","","","","","Address to receive client transactions (WAN).","","","","","","","","","","","","","","","","","","","","","","","","","Returns the stake required to reach availability (f+1).","","","","","","","","","Returns the addresses of a specific worker (<code>id</code>) of a …","Address to receive messages from our workers (LAN).","Address to receive messages from other workers (WAN).","Map of workers’ id and their network addresses.","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,2,3,3,1,3,4,5,6,7,8,2,1,3,4,5,6,7,8,2,5,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,3,4,5,1,3,4,5,6,7,8,2,1,3,4,5,6,7,8,2,3,4,5,6,7,8,2,1,3,4,5,6,7,8,2,7,9,1,1,1,3,4,5,6,7,8,2,3,4,7,7,3,10,1,3,4,5,6,7,8,2,1,3,4,5,6,7,8,2,3,3,3,7,2,2,2,2,5,5,2,8,6,7,2,6,7,8,2,2,4,2,8,3,3,3,4,5,6,7,8,2,1,3,7,1,3,4,5,6,7,8,2,1,3,4,5,6,7,8,2,1,3,4,5,6,7,8,2,2,1,3,4,5,6,7,8,2,2,6,7,8,11,12,13,14,13,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["parameters",3]],[[["",0]],["consensusapigrpcparameters",3]],[[["",0]],["blocksynchronizerparameters",3]],[[["",0]],["primaryaddresses",3]],[[["",0]],["workeraddresses",3]],[[["",0]],["authority",3]],[[["",0]],["committee",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["workeraddresses",3]],["bool",0]],[[["",0],["str",0]],["result",4,[["configerror",4]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],null,[[["str",0]],["result",4,[["configerror",4]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["",0],["workeraddresses",3]],["bool",0]],[[["",0],["",0]],["vec",3]],[[["",0],["",0]],["vec",3]],[[["",0],["",0],["workerid",6]],["vec",3]],[[["",0],["",0]],["result",4,[["vec",3,[["workeraddresses",3]]],["configerror",4]]]],null,null,[[["",0],["",0]],["result",4,[["primaryaddresses",3],["configerror",4]]]],null,null,null,[[["",0]],["stake",6]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["usize",0]],null,[[["",0],["",0]],["stake",6]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["stake",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0],["workerid",6]],["result",4,[["workeraddresses",3],["configerror",4]]]],null,null,null,null,null,null,null,null,null],"p":[[4,"ConfigError"],[3,"Committee"],[3,"Parameters"],[3,"ConsensusAPIGrpcParameters"],[3,"BlockSynchronizerParameters"],[3,"PrimaryAddresses"],[3,"WorkerAddresses"],[3,"Authority"],[8,"Export"],[8,"Import"],[13,"NotInCommittee"],[13,"UnknownWorker"],[13,"ImportError"],[13,"ExportError"]]},\
"consensus":{"doc":"","t":[2,3,3,3,17,6,2,11,11,11,11,11,11,12,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Consensus","ConsensusOutput","ConsensusStore","ConsensusSyncRequest","DEFAULT_CHANNEL_SIZE","SequenceNumber","SubscriberHandler","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone_into","consensus_index","dag","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","missing","new","read_last_committed","read_last_consensus_index","read_sequenced_certificates","serialize","serialize","subscriber","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tusk","type_id","type_id","type_id","vzip","vzip","vzip","write_consensus_state","Dag","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","spawn","try_from","try_into","type_id","vzip","SubscriberHandler","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","spawn","try_from","try_into","type_id","vzip","Consensus","State","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_request","into_request","new","process_certificate","spawn","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus::dag","","","","","","","","","","","","","","","consensus::subscriber","","","","","","","","","","","","","","","consensus::tusk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The output format of the consensus.","The persistent storage of the sequencer.","The message sent by the client to sync missing chunks of …","The default channel size used in the consensus and …","A global sequence number assigned to every certificate.","","","","","","","","The sequenced certificate.","","","The (global) index associated with this certificate.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The sequence numbers of the missing consensus outputs.","Create a new consensus store structure by using already …","Load the last committed round of each validator.","Load the last (ie. the highest) consensus index associated …","Load the certificate digests sequenced at a specific …","","","","","","","","","","","","","","","","","","Persist the consensus state.","Dag represents the pure dag that is constructed by the …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Pushes the consensus output to subscriber clients and …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Spawn a new subscriber handler in a dedicated tokio task.","","","","","","The state that needs to be persisted for crash-recovery.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,1,2,3,2,2,2,2,0,1,2,3,1,2,3,2,3,1,2,3,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,1,1,1,2,3,0,2,1,2,3,1,2,3,0,1,2,3,1,2,3,1,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,7,6,7,6,7,6,7,6,7],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["consensusoutput",3]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[["dbmap",3,[["round",6]]],["dbmap",3,[["sequencenumber",6],["certificatedigest",3]]]]],[[["",0]],["hashmap",3,[["round",6]]]],[[["",0]],["result",4,[["sequencenumber",6],["typedstoreerror",4]]]],[[["",0],["rangeinclusive",3]],["result",4,[["vec",3,[["option",4,[["certificatedigest",3]]]]],["typedstoreerror",4]]]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[["",0],["hashmap",3],["sequencenumber",6],["certificatedigest",3]],["result",4,[["typedstoreerror",4]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[],["request",3]],[[["receiver",3,[["certificate",3]]]],["joinhandle",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[],["request",3]],[[["arc",3,[["consensusstore",3]]],["store",3,[["certificatedigest",3],["certificate",3]]],["receiver",3,[["consensusoutput",3]]],["receiver",3,[["consensussyncrequest",3]]],["sender",3,[["consensusoutput",3]]]],["joinhandle",3,[["result",4,[["typedstoreerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["vec",3,[["certificate",3]]]]],[[["committee",3],["arc",3],["round",6],["state",3],["sequencenumber",6],["certificate",3]],["result",4,[["vec",3,[["consensusoutput",3]]],["typedstoreerror",4]]]],[[["committee",3],["arc",3,[["consensusstore",3]]],["round",6],["receiver",3,[["certificate",3]]],["sender",3,[["certificate",3]]],["sender",3,[["consensusoutput",3]]]],["joinhandle",3,[["result",4,[["typedstoreerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[3,"ConsensusStore"],[3,"ConsensusOutput"],[3,"ConsensusSyncRequest"],[3,"Dag"],[3,"SubscriberHandler"],[3,"State"],[3,"Consensus"]]},\
"crypto":{"doc":"","t":[6,17,3,8,8,3,16,8,11,11,5,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,0,11,11,11,11,11,11,11,10,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,10,11,11,3,3,3,3,17,17,17,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,3,8,16,16,16,16,16,16,16,16,8,8,8,8,11,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,10,11,11,11,10,10,11,11,11,11,11,10,11,11,11],"n":["CryptoError","DIGEST_LEN","Digest","Hash","Signature","SignatureService","TypedDigest","Verifier","as_bytes","as_ref","blake2b_256","bls12377","bls12381","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","digest","drop","drop","ed25519","encode_hex","encode_hex_upper","eq","fmt","fmt","from","from","from_bytes","generate_keypair","generate_production_keypair","get_hash","hash","init","init","into","into","ne","new","new","partial_cmp","request_signature","serialize","size","to_owned","to_owned","to_string","to_vec","traits","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","BLS12377KeyPair","BLS12377PrivateKey","BLS12377PublicKey","BLS12377Signature","CELO_BLS_PRIVATE_KEY_LENGTH","CELO_BLS_PUBLIC_KEY_LENGTH","CELO_BLS_SIGNATURE_LENGTH","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","clone","clone","clone_into","clone_into","cmp","decode_base64","decode_base64","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode_base64","encode_base64","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","generate","get_hash","hash","init","init","init","init","into","into","into","into","partial_cmp","private","privkey","pubkey","public","serialize","serialize","serialize","serialize","sig","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_sign","try_sign","try_sign","try_sign","type_id","type_id","type_id","type_id","verify","verify_batch","vzip","vzip","vzip","vzip","BLS12381KeyPair","BLS12381PrivateKey","BLS12381PublicKey","BLS12381Signature","BLS_PRIVATE_KEY_LENGTH","BLS_PUBLIC_KEY_LENGTH","BLS_SIGNATURE_LENGTH","DST","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","clone","clone","clone_into","clone_into","cmp","decode_base64","decode_base64","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode_base64","encode_base64","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","generate","get_hash","get_hash","hash","hash","init","init","init","init","into","into","into","into","partial_cmp","private","privkey","pubkey","public","serialize","serialize","serialize","serialize","sig","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_sign","try_sign","try_sign","try_sign","type_id","type_id","type_id","type_id","verify","verify_batch","vzip","vzip","vzip","vzip","0","0","0","Ed25519KeyPair","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","decode_base64","decode_base64","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode_base64","encode_base64","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","generate","get_hash","hash","init","init","init","init","into","into","into","into","name","ne","ne","partial_cmp","private","public","secret","serialize","serialize","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_sign","try_sign","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","Authenticator","EncodeDecodeBase64","Error","KeyPair","PrivKey","PrivKey","PrivKey","PubKey","PubKey","PubKey","Sig","Sig","Signer","SigningKey","ToFromBytes","VerifyingKey","as_bytes","borrow","borrow_mut","decode_base64","default","deref","deref_mut","drop","encode_base64","fmt","fmt","from","from","from","from_bytes","from_source","generate","init","into","new","private","public","sign","source","to_string","try_from","try_into","try_sign","type_id","verify_batch","vzip"],"q":["crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crypto::bls12377","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crypto::bls12381","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crypto::ed25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crypto::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Represents a hash digest (32 bytes).","This trait is implemented by all messages that can be …","Trait impl’d by concrete types that represent digital …","This service holds the node’s private key. It takes …","","Verify the provided message bytestring using <code>Self</code> (e.g. a …","Borrow a byte slice representing the serialized form of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Parse a signature from its byte representation","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Use <code>Self</code> to verify that the provided signature for a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait impl’d by signatures in asymmetric cryptography.","Cryptographic material with an immediate conversion …","Signature errors.","Trait impl’d by a public / private key pair in …","","","","","","","","","Sign the provided message bytestring using <code>Self</code> (e.g. a …","Trait impl’d by private (secret) keys in asymmetric …","Trait impl’d by concrete types that represent digital …","Trait impl’d by public keys in asymmetric cryptography.","Borrow a byte slice representing the serialized form of …","","","","","","","","","","","Returns the argument unchanged.","","","Parse a key from its byte representation","Create a new error with an associated source.","","","Calls <code>U::from(self)</code>.","Create a new error with no associated source","","","Sign the given message and return a digital signature","","","","","Attempt to sign the given message, returning a digital …","","",""],"i":[0,0,0,0,0,0,1,0,2,3,0,0,0,3,4,3,4,3,4,3,4,3,3,3,4,3,4,3,1,3,4,0,3,3,3,3,3,3,4,2,0,0,3,3,3,4,3,4,3,3,4,3,4,3,3,3,4,3,3,0,3,4,3,4,3,4,5,3,4,0,0,0,0,0,0,0,6,7,8,6,7,8,9,6,7,8,9,6,7,8,6,8,6,8,6,6,7,6,8,6,7,8,9,6,7,8,9,6,7,8,9,6,7,8,9,6,7,6,7,8,6,7,8,6,8,6,6,7,8,8,9,6,7,8,9,6,7,8,9,6,6,6,7,8,9,6,7,8,9,6,9,7,6,9,6,7,8,9,8,6,8,6,8,6,7,8,9,6,7,8,9,7,7,9,9,6,7,8,9,6,6,6,7,8,9,0,0,0,0,0,0,0,0,10,11,12,10,11,12,13,10,11,12,13,10,11,12,10,12,10,12,10,10,11,10,11,12,10,11,12,13,10,11,12,13,10,11,12,13,10,11,12,13,10,11,10,11,12,10,11,12,10,12,10,10,11,12,12,13,10,11,12,13,10,11,12,13,10,12,10,12,10,11,12,13,10,11,12,13,10,13,11,10,13,10,11,12,13,12,10,12,10,12,10,11,12,13,10,11,12,13,11,11,13,13,10,11,12,13,10,10,10,11,12,13,14,15,16,0,0,0,0,14,15,16,14,15,16,17,14,15,16,17,14,16,14,16,14,14,15,14,16,14,15,16,17,14,15,16,17,14,15,16,17,14,15,16,17,14,15,14,15,16,14,15,16,14,16,14,14,15,16,16,17,14,15,16,17,17,14,15,16,17,14,14,14,15,16,17,14,15,16,17,17,14,16,14,17,17,17,14,15,16,17,14,16,14,16,14,15,16,17,14,15,16,17,17,17,14,15,16,17,14,14,15,16,17,0,0,0,0,18,19,20,21,19,20,18,21,0,0,0,0,22,23,23,24,23,23,23,23,24,23,23,23,23,23,22,23,20,23,23,23,20,20,25,23,23,23,23,25,23,18,23],"f":[null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["fn",8]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["digest",3]],[[["",0]],["signatureservice",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["digest",3]],["ordering",4]],[[],["digest",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[["",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["",0]]],[[["",0]]],[[["",0],["digest",3]],["bool",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["result",4,[["error",3]]]],[[["",0]],["keypair",8]],[[],["keypair",8]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["",0],["digest",3]],["bool",0]],[[]],[[]],[[["",0],["digest",3]],["option",4,[["ordering",4]]]],[[["",0],["digest",3]]],[[["",0]],["result",4]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["vec",3,[["u8",0]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["",0]],["result",4,[["error",3]]]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["",0]],["bls12377publickey",3]],[[["",0]],["bls12377signature",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]],["ordering",4]],[[["str",0]],["result",4,[["report",3]]]],[[["str",0]],["result",4,[["report",3]]]],[[]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["",0]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["",0],["",0]],["option",4,[["ordering",4]]]],[[]],null,null,[[["",0]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["bls12377signature",3],["error",3]]]],[[["",0]],["result",4,[["bls12377signature",3],["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["bls12377signature",3]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["",0]],["bls12381publickey",3]],[[["",0]],["bls12381signature",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]],["ordering",4]],[[["str",0]],["result",4,[["report",3]]]],[[["str",0]],["result",4,[["report",3]]]],[[],["bls12381publickey",3]],[[],["bls12381privatekey",3]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["",0]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["",0],["",0]],["option",4,[["ordering",4]]]],[[]],null,null,[[["",0]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["bls12381signature",3],["error",3]]]],[[["",0]],["result",4,[["bls12381signature",3],["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["bls12381signature",3]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["ed25519publickey",3]],[[["",0]],["ed25519signature",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]],["ordering",4]],[[["str",0]],["result",4,[["report",3]]]],[[["str",0]],["result",4,[["report",3]]]],[[]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["ed25519publickey",3]],["bool",0]],[[["",0],["ed25519signature",3]],["bool",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["keypair",3]]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["",0]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],null,[[["",0],["ed25519publickey",3]],["bool",0]],[[["",0],["ed25519signature",3]],["bool",0]],[[["",0],["",0]],["option",4,[["ordering",4]]]],[[]],[[["",0]]],null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["ed25519signature",3],["error",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["ed25519signature",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["result",4,[["report",3]]]],[[],["error",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0]],["string",3]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["box",3,[["error",8],["global",3]]]],["error",3]],[[["internalerror",4]],["error",3]],[[],["result",4,[["error",3]]]],[[],["error",3]],[[["",0]]],[[],["usize",0]],[[]],[[],["error",3]],[[]],[[["",0]]],[[["",0]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["typeid",3]],[[],["result",4,[["error",3]]]],[[]]],"p":[[8,"Hash"],[8,"Signature"],[3,"Digest"],[3,"SignatureService"],[8,"Verifier"],[3,"BLS12377PublicKey"],[3,"BLS12377PrivateKey"],[3,"BLS12377Signature"],[3,"BLS12377KeyPair"],[3,"BLS12381PublicKey"],[3,"BLS12381PrivateKey"],[3,"BLS12381Signature"],[3,"BLS12381KeyPair"],[3,"Ed25519PublicKey"],[3,"Ed25519PrivateKey"],[3,"Ed25519Signature"],[3,"Ed25519KeyPair"],[8,"VerifyingKey"],[8,"Authenticator"],[8,"KeyPair"],[8,"SigningKey"],[8,"ToFromBytes"],[3,"Error"],[8,"EncodeDecodeBase64"],[8,"Signer"]]},\
"dag":{"doc":"","t":[3,3,6,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Node","NodeRef","WeakNodeRef","bfs","bft","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from_pointee","get_hash","hash","init","init","into","into","is_compressible","is_leaf","make_compressible","new","new_leaf","node_dag","parents","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","Bft","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_iter","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","next","to_owned","try_from","try_into","type_id","vzip","Affiliated","DagError","DroppedDigest","NodeDag","UnknownDigest","borrow","borrow","borrow_mut","borrow_mut","compressible","contains","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_weak","has_head","init","init","into","into","make_compressible","new","parents","to_string","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","vzip","vzip","0","0"],"q":["dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dag::bft","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dag::node_dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dag::node_dag::DagError",""],"d":["The Dag node, aka vertex.","Reference-counted pointers to a Node","Non reference-counted pointers to a Node","Returns a Breadth-first search of the DAG, as an iterator …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a NodeRef pointing at the Node passed as argument","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the node compressible?","Is the node parent-less?","Make the node compressible. Returns true if the node was …","Create a new DAG inner node that contains the given value …","Create a new DAG leaf node that contains the given value.","","Compress the path from this node to the next …","","","","","","","","Return the value payload of the node","","","Breadth-First Traversal (or Level Order Traversal).","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a <code>Bft</code>, where <code>root</code> is the starting <code>Node</code>.","","","","","","","A trait marking the minimum information we need to sort …","","","The Dag data structure This consists morally of two tables …","","","","","","Whether the current value should be marked as compressible …","Returns whether the vertex pointed to by the hash passed …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a weak reference to the requested vertex. This …","Returns whether the vertex pointed to by the hash passed …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Marks the node passed as argument as compressible, leaving …","Creates a new Node dag","Hash pointers to the parents of the current value","","","","Inserts a node in the Dag from the provided value","","","","","","","",""],"i":[0,0,0,0,0,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,2,1,1,1,2,1,1,1,1,2,1,2,2,2,2,2,2,0,2,1,1,2,1,2,1,2,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,0,4,5,4,5,4,6,5,5,5,4,5,4,5,4,4,4,5,4,5,5,5,4,5,4,5,5,6,4,5,4,5,5,4,5,4,5,4,7,8],"f":[null,null,null,[[["noderef",3,[["",26,[["sync",8],["send",8],["debug",8]]]]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["",0],["noderef",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["arc",3,[["node",3]]]]],[[]],[[["node",3]]],[[]],[[["node",3]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["bool",0],["vec",3,[["noderef",3]]]]],[[["bool",0]]],null,[[["",0]],["vec",3,[["noderef",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["",0]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bft",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["result",4,[["weaknoderef",6],["dagerror",4]]]],[[["",0]],["result",4,[["bool",0],["dagerror",4]]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["",0]],["result",4,[["bool",0],["dagerror",4]]]],[[],["nodedag",3]],[[["",0]],["vec",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["dagerror",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null],"p":[[3,"NodeRef"],[3,"Node"],[3,"Bft"],[4,"DagError"],[3,"NodeDag"],[8,"Affiliated"],[13,"UnknownDigest"],[13,"DroppedDigest"]]},\
"executor":{"doc":"","t":[13,13,17,16,3,8,8,3,13,13,13,13,6,6,13,4,6,16,13,13,13,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,12,12,12,10,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["ClientExecutionError","ConsensusConnectionDropped","DEFAULT_CHANNEL_SIZE","Error","ExecutionIndices","ExecutionState","ExecutionStateError","Executor","ExecutorConnectionDropped","NodeExecutionError","OnlyOneConsensusClientPermitted","SerializationError","SerializedTransaction","SerializedTransactionDigest","StoreError","SubscriberError","SubscriberResult","Transaction","UnexpectedConsensusIndex","UnexpectedProtocolMessage","UnexpectedWorkerId","ask_consensus_write_lock","bail","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_next_batch_index","check_next_transaction_index","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","ensure","fmt","fmt","fmt","from","from","from","from","from","from","handle_consensus_transaction","init","init","init","into","into","into","into_request","into_request","into_request","load_execution_indices","next","next_batch_index","next_certificate_index","next_transaction_index","node_error","release_consensus_write_lock","serialize","skip_batch","skip_certificate","source","spawn","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0"],"q":["executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","executor::SubscriberError","","","","",""],"d":["","","Default inter-task channel size.","The error type to return in case something went wrong …","The state of the subscriber keeping track of the …","","Trait do separate execution errors in two categories: (i) …","A client subscribing to the consensus output and executing …","","","","","Convenience type representing a serialized transaction.","Convenience type representing a serialized transaction …","","","","The type of the transaction to process.","","","","Simple guardrail ensuring there is a single instance using …","","","","","","","","Check whether the input index is the next expected batch …","Check whether the input index is the next expected …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Execute the transaction and atomically persist the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Load the last consensus index from storage.","Compute the next expected indices.","The index of the last batch we executed (used for …","The index of the latest consensus message we processed …","The index of the last transaction we executed (used for …","Whether the error is due to a fault in the authority (eg. …","Tell the state that the caller instance is no longer using …","","Update the state to skip a batch.","Update the state to skip a certificate.","","Spawn a new client subscriber.","","","Convert the error message in to a string.","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,2,0,0,0,0,1,1,1,1,0,0,1,0,0,2,1,1,1,2,0,3,1,4,3,1,4,4,4,1,4,1,4,4,3,1,4,3,1,4,4,3,1,4,0,1,1,4,3,1,1,1,1,4,2,3,1,4,3,1,4,3,1,4,2,4,4,4,4,5,2,4,4,4,1,3,1,4,5,1,3,1,4,3,1,4,3,1,4,3,1,4,6,7,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bool",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["sequencenumber",6]],["bool",0]],[[["",0],["sequencenumber",6]],["bool",0]],[[["",0]],["subscribererror",4]],[[["",0]],["executionindices",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["executionindices",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["box",3,[["errorkind",4]]]]],[[["storeerror",6]]],[[]],[[]],[[["",0],["executionindices",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["usize",0],["usize",0]]],null,null,null,[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["result",4]],[[["",0],["usize",0]]],[[["",0]]],[[["",0]],["option",4,[["error",8]]]],[[["committee",3],["store",3,[["batchdigest",3],["serializedbatchmessage",6]]],["arc",3],["receiver",3,[["consensusoutput",3]]],["sender",3,[["consensussyncrequest",3]]],["sender",3]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null],"p":[[4,"SubscriberError"],[8,"ExecutionState"],[3,"Executor"],[3,"ExecutionIndices"],[8,"ExecutionStateError"],[13,"StoreError"],[13,"UnexpectedWorkerId"],[13,"UnexpectedConsensusIndex"],[13,"SerializationError"],[13,"NodeExecutionError"],[13,"ClientExecutionError"]]},\
"network":{"doc":"","t":[3,18,18,18,18,18,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelHandler","DEFAULT_INITIAL_RETRY_INTERVAL","DEFAULT_MAX_RETRY_INTERVAL","DEFAULT_RETRYING_MAX_ELAPSED_TIME","DEFAULT_RETRY_DELAY_RAND_FACTOR","DEFAULT_RETRY_INTERVAL_MULTIPLIER","PrimaryNetwork","PrimaryToWorkerNetwork","RetryConfig","WorkerNetwork","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","broadcast","clone","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","init","init","init","init","init","initial_retry_interval","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","lucky_broadcast","lucky_broadcast","max_retry_interval","poll","retry","retry_delay_multiplier","retry_delay_rand_factor","retrying_max_elapsed_time","send","send","send","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","unreliable_broadcast","unreliable_send","unreliable_send","unreliable_send_message","vzip","vzip","vzip","vzip","vzip"],"q":["network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Default for <code>RetryConfig::max_retry_interval</code> (500 ms).","Default for <code>RetryConfig::max_retry_interval</code> (15 s).","Default for <code>RetryConfig::retrying_max_elapsed_time</code> (30 s).","Default for <code>RetryConfig::retry_delay_rand_factor</code> (0.3).","Default for <code>RetryConfig::retry_delay_multiplier</code> (x1.5).","","","Retry configurations for establishing connections and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","The initial retry interval.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Pick a few addresses at random (specified by <code>nodes</code>) and …","Pick a few addresses at random (specified by <code>nodes</code>) and …","The maximum value of the back off period. Once the retry …","","","The value to multiply the current interval with for each …","The randomization factor to use for creating a range …","The maximum elapsed time after instantiating","","","","","","","","","","","","","","","","","","","","","Pick a few addresses at random (specified by <code>nodes</code>) and …","","","","","","","",""],"i":[0,1,1,1,1,1,0,0,0,0,2,3,4,1,5,2,3,4,1,5,2,3,4,1,1,2,3,4,1,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,5,1,5,2,3,4,1,5,2,3,4,1,5,1,2,3,4,1,5,5,2,3,4,1,5,2,3,1,5,1,1,1,1,2,3,4,1,2,3,4,1,5,2,3,4,1,5,5,2,3,4,1,5,2,2,3,3,2,3,4,1,5],"f":[null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["vec",3,[["socketaddr",4]]],["primarymessage",4]]],[[["",0],["vec",3,[["socketaddr",4]]],["workermessage",4]]],[[["",0],["vec",3,[["socketaddr",4]]],["primaryworkermessage",4]]],[[["",0]],["retryconfig",3]],[[["",0],["",0]]],[[]],[[]],[[],["primarytoworkernetwork",3]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["",0],["vec",3,[["socketaddr",4]]],["primarymessage",4],["usize",0]]],[[["",0],["vec",3,[["socketaddr",4]]],["workermessage",4],["usize",0]]],null,[[["pin",3],["context",3]],["poll",4]],[[]],null,null,null,[[["",0],["socketaddr",4],["primarymessage",4]]],[[["",0],["socketaddr",4],["workermessage",4]]],[[["",0],["socketaddr",4],["primaryworkermessage",4]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["vec",3,[["socketaddr",4]]],["primarymessage",4]]],[[["",0],["socketaddr",4],["primarymessage",4]]],[[["",0],["socketaddr",4],["workermessage",4]]],[[["",0],["socketaddr",4],["into",8,[["bincodeencodedpayload",3]]]]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"RetryConfig"],[3,"PrimaryNetwork"],[3,"WorkerNetwork"],[3,"PrimaryToWorkerNetwork"],[3,"CancelHandler"]]},\
"node":{"doc":"","t":[18,3,3,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["CHANNEL_CAPACITY","Node","NodeStorage","batch_store","borrow","borrow","borrow_mut","borrow_mut","certificate_store","consensus_store","deref","deref","deref_mut","deref_mut","drop","drop","from","from","header_store","init","init","into","into","into_request","into_request","payload_store","reopen","spawn_primary","spawn_workers","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The default channel capacity.","High level functions to spawn the primary and the workers.","All the data stores of the node.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Open or reopen all the storage of the node.","Spawn a new primary. Optionally also spawn the consensus …","Spawn a specified number of workers.","","","","","","","",""],"i":[1,0,0,2,2,1,2,1,2,2,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,2,1,1,2,1,2,1,2,1,2,1],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,[[["asref",8,[["path",3]]]]],[[["committee",3],["nodestorage",3],["parameters",3],["bool",0],["arc",3],["sender",3]]],[[["verifyingkey",8],["vec",3,[["workerid",6]]],["committee",3,[["verifyingkey",8]]],["nodestorage",3],["parameters",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[3,"Node"],[3,"NodeStorage"]]},\
"primary":{"doc":"","t":[4,3,4,3,17,3,13,3,13,13,13,13,13,13,13,13,3,6,3,4,13,13,13,13,13,4,4,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["BlockCommand","BlockRemover","BlockRemoverCommand","BlockWaiter","CHANNEL_CAPACITY","CertificatesResponse","Cleanup","DeleteBatchMessage","DeleteBatches","DeletedBatches","Error","ErrorWhileDeletingBatches","GetBlock","GetBlocks","OthersBatch","OurBatch","PayloadAvailabilityResponse","PayloadToken","Primary","PrimaryWorkerMessage","RemoveBlocks","RequestBatch","RequestedBatch","RequestedBatchNotFound","Synchronize","WorkerPrimaryError","WorkerPrimaryMessage","available_block_ids","block_ids","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificates","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","ids","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ne","ne","request_id","request_id","serialize","serialize","serialize","spawn","spawn","spawn","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_certificates","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","id","ids","sender","sender","ids","sender","0","0","0","0","1","0","0","0","0","0","0","0","1","1","1"],"q":["primaryprimary::BlockCommand","","","","primary::BlockRemoverCommand","","primary::PrimaryWorkerMessage","","","","","primary::WorkerPrimaryError","","primary::WorkerPrimaryMessage","","","","","","",""],"d":["","BlockRemover is responsible for removing blocks identified …","","BlockWaiter is responsible for fetching the block data …","The default channel capacity for each channel of the …","","The primary indicates a round update.","","Delete the batches, dictated from the provided vector of …","When batches are successfully deleted, this message is …","An error has been returned by worker","","GetBlock dictates retrieving the block data (vector of …","GetBlocks will initiate the process of retrieving the …","The worker indicates it received a batch’s digest from …","The worker indicates it sealed a new batch.","","","","The messages sent by the primary to its workers.","","The primary requests a batch from the worker","The worker sends a requested batch","","The primary indicates that the worker need to sync the …","","The messages sent by the workers to their primary.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This method does two things:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,2,2,3,4,4,2,2,0,0,0,0,5,1,2,3,1,0,0,6,6,7,8,1,9,5,10,6,11,4,2,3,7,8,1,9,5,10,6,11,4,2,3,11,10,6,11,3,10,6,11,3,10,7,8,1,9,5,10,6,11,4,2,3,7,8,1,9,5,10,6,11,4,2,3,1,2,3,7,8,1,9,5,10,6,11,4,2,3,2,3,1,5,10,6,11,4,2,3,3,7,8,1,9,5,10,6,11,4,2,3,6,11,10,7,8,1,9,5,10,6,11,4,2,3,7,8,1,9,5,10,6,11,4,2,3,7,8,1,9,5,10,6,11,4,2,3,2,3,6,11,1,2,3,7,8,9,10,6,11,3,3,7,8,1,9,5,10,6,11,4,2,3,7,8,1,9,5,10,6,11,4,2,3,7,8,1,9,5,10,6,11,4,2,3,11,7,8,1,9,5,10,6,11,4,2,3,12,13,12,13,14,14,15,16,17,18,15,19,20,21,22,23,24,25,21,22,23],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["vec",3,[["certificatedigest",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["deletebatchmessage",3]],[[["",0]],["payloadavailabilityresponse",3]],[[["",0]],["certificatesresponse",3]],[[["",0]],["workerprimaryerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["deletebatchmessage",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["primaryworkermessage",4]]]],[[],["result",4]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["workerprimarymessage",4]],["bool",0]],[[["",0],["workerprimaryerror",4]],["bool",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["",0],["workerprimarymessage",4]],["bool",0]],[[["",0],["workerprimaryerror",4]],["bool",0]],[[["",0]],["requestid",3]],[[["",0]],["requestid",3]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["committee",3],["store",3,[["certificatedigest",3],["certificate",3]]],["store",3,[["headerdigest",3],["header",3]]],["store",3,[["payloadtoken",6]]],["primarytoworkernetwork",3],["receiver",3,[["blockremovercommand",4]]],["receiver",3,[["result",4,[["deletebatchmessage",3],["deletebatchmessage",3]]]]]],["joinhandle",3]],[[["committee",3],["store",3,[["certificatedigest",3],["certificate",3]]],["receiver",3,[["blockcommand",4]]],["receiver",3,[["result",4,[["batchmessage",3],["batchmessageerror",3]]]]]]],[[["verifyingkey",8],["",26,[["signer",8],["send",8]]],["committee",3,[["verifyingkey",8]]],["parameters",3],["store",3,[["headerdigest",3],["header",3,[["verifyingkey",8]]]]],["store",3,[["certificatedigest",3],["certificate",3,[["verifyingkey",8]]]]],["store",3,[["payloadtoken",6]]],["sender",3,[["certificate",3,[["verifyingkey",8]]]]],["receiver",3,[["certificate",3,[["verifyingkey",8]]]]],["bool",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["committee",3]],["result",4,[["vec",3,[["certificate",3]]],["certificatesresponseerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"PrimaryWorkerMessage"],[4,"WorkerPrimaryMessage"],[4,"WorkerPrimaryError"],[4,"BlockCommand"],[4,"BlockRemoverCommand"],[3,"PayloadAvailabilityResponse"],[3,"BlockRemover"],[3,"BlockWaiter"],[3,"Primary"],[3,"DeleteBatchMessage"],[3,"CertificatesResponse"],[13,"GetBlock"],[13,"GetBlocks"],[13,"RemoveBlocks"],[13,"Synchronize"],[13,"Cleanup"],[13,"RequestBatch"],[13,"DeleteBatches"],[13,"RequestedBatchNotFound"],[13,"ErrorWhileDeletingBatches"],[13,"OurBatch"],[13,"OthersBatch"],[13,"RequestedBatch"],[13,"DeletedBatches"],[13,"Error"]]},\
"test_utils":{"doc":"","t":[17,17,17,3,3,3,3,5,5,5,5,11,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,5,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,5,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11],"n":["CERTIFICATES_CF","HEADERS_CF","PAYLOAD_CF","PrimaryToPrimaryMockServer","PrimaryToWorkerMockServer","WorkerToPrimaryMockServer","WorkerToWorkerMockServer","batch","batch_digest","batch_with_transactions","batches","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","client_batch_request","committee","committee_with_base_port","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","digest_batch","drop","drop","drop","drop","expecting_listener","fixture_batch_with_transactions","fixture_header","fixture_header_builder","fixture_header_with_payload","from","from","from","from","header","headers","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","keys","listener","open_batch_store","resolve_batch_digest","resolve_name_and_committee","send_message","send_message","send_message","send_message","serialize_batch_message","serialized_batch","spawn","spawn","spawn","spawn","temp_dir","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","votes","vzip","vzip","vzip","vzip"],"q":["test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Batches","","","generate multiple fixture batches. The number of generated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Headers, Votes, Certificates","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Keys, Committee","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,0,4,0,0,1,2,3,4,1,2,3,4,0,1,2,3,4,0,0,0,0,0,1,2,3,4,0,0,1,2,3,4,1,2,3,4,1,2,3,4,0,0,0,0,0,1,2,3,4,0,0,1,2,3,4,0,0,1,2,3,4,1,2,3,4,1,2,3,4,0,1,2,3,4],"f":[null,null,null,null,null,null,null,[[],["batch",3]],[[],["batchdigest",3]],[[["usize",0]],["batch",3]],[[["usize",0]],["vec",3,[["batch",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["header",3]],["certificate",3,[["ed25519publickey",3]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["committee",3,[["ed25519publickey",3]]]],[[["u16",0]],["committee",3,[["ed25519publickey",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["batch",3]],["batchdigest",3]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["socketaddr",4],["option",4,[["bytes",3]]]],["joinhandle",3]],[[["u32",0]],["batch",3]],[[],["header",3,[["ed25519publickey",3]]]],[[],["headerbuilder",3,[["ed25519publickey",3]]]],[[["u8",0]],["header",3,[["ed25519publickey",3]]]],[[]],[[]],[[]],[[]],[[],["header",3,[["ed25519publickey",3]]]],[[],["vec",3,[["header",3,[["ed25519publickey",3]]]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["vec",3,[["ed25519keypair",3]]]],[[["socketaddr",4]],["joinhandle",3,[["bytes",3]]]],[[],["store",3,[["batchdigest",3],["serializedbatchmessage",6]]]],[[["vec",3,[["u8",0]]]],["batchdigest",3]],[[["u16",0]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["batch",3]],["vec",3,[["u8",0]]]],[[],["vec",3,[["u8",0]]]],[[["socketaddr",4]],["receiver",3,[["bincodeencodedpayload",3]]]],[[["socketaddr",4]],["receiver",3,[["bincodeencodedpayload",3]]]],[[["socketaddr",4]],["receiver",3,[["bincodeencodedpayload",3]]]],[[["socketaddr",4]],["receiver",3,[["bincodeencodedpayload",3]]]],[[],["pathbuf",3]],[[],["transaction",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["header",3]],["vec",3,[["vote",3,[["ed25519publickey",3]]]]]],[[]],[[]],[[]],[[]]],"p":[[3,"PrimaryToPrimaryMockServer"],[3,"WorkerToPrimaryMockServer"],[3,"PrimaryToWorkerMockServer"],[3,"WorkerToWorkerMockServer"]]},\
"types":{"doc":"","t":[12,12,12,3,13,13,3,3,13,3,3,3,13,13,3,3,4,13,6,3,13,3,3,13,13,13,13,3,16,3,13,4,13,3,13,13,3,13,3,3,3,13,3,4,3,13,13,4,8,3,3,8,3,3,4,13,4,6,13,6,3,8,3,3,13,13,8,3,3,3,13,3,4,8,3,3,8,3,3,11,11,11,11,11,11,11,12,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,6,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12],"n":["0","0","0","Batch","Batch","Batch","BatchDigest","BatchDigestProto","BatchError","BatchMessage","BatchMessageProto","BatchProto","BatchRequest","BatchTimeout","BincodeEncodedPayload","BlockError","BlockErrorType","BlockNotFound","BlockResult","Certificate","Certificate","CertificateDigest","CertificateDigestProto","CertificatesBatchRequest","CertificatesBatchResponse","CertificatesRequest","Cleanup","ClientBatchRequest","ClientBatchRequestStream","CollectionError","CollectionError","CollectionErrorType","CollectionNotFound","CollectionRetrievalResult","CollectionTimeout","DeleteBatches","Empty","Error","GetCollectionsRequest","GetCollectionsResponse","Header","Header","HeaderBuilder","HeaderBuilderError","HeaderDigest","PayloadAvailabilityRequest","PayloadAvailabilityResponse","PrimaryMessage","PrimaryToPrimary","PrimaryToPrimaryClient","PrimaryToPrimaryServer","PrimaryToWorker","PrimaryToWorkerClient","PrimaryToWorkerServer","PrimaryWorkerMessage","RequestBatch","RetrievalResult","Round","Synchronize","Transaction","TransactionProto","Transactions","TransactionsClient","TransactionsServer","UninitializedField","ValidationError","Validator","ValidatorClient","ValidatorServer","Vote","Vote","VoteDigest","WorkerMessage","WorkerToPrimary","WorkerToPrimaryClient","WorkerToPrimaryServer","WorkerToWorker","WorkerToWorkerClient","WorkerToWorkerServer","accept_gzip","accept_gzip","accept_gzip","accept_gzip","accept_gzip","accept_gzip","author","author","author","bail","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","call","call","call","call","call","call","call","call","call","call","call","call","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","client_batch_request","client_batch_request","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","collection_ids","connect","connect","connect","connect","connect","connect","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","digest","digest","digest","digest","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","ensure","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arc","from_arc","from_arc","from_arc","from_arc","from_arc","from_i32","genesis","get_collections","get_collections","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","header","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_valid","merge","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","origin","origin","parents","parents","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload","payload","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","result","retrieval_result","round","round","round","round","send_gzip","send_gzip","send_gzip","send_gzip","send_gzip","send_gzip","send_message","send_message","send_message","send_message","send_message","send_message","send_message","send_message","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_error","signature","signature","signature","submit_transaction","submit_transaction","submit_transaction_stream","submit_transaction_stream","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction","transaction","transactions","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","verify","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_payload_batch","0","0","0","0","0","0","1","certificate_ids","certificate_ids","certificates","from","from","payload_availability","requestor","requestor","0","0","0","0","1","0","0","0","0","1","AuthorityReuse","CertificateRequiresQuorum","DagError","DagResult","HeaderRequiresQuorum","InvalidHeaderId","InvalidSignature","MalformedHeader","SerializationError","StoreError","TooOld","UnexpectedVote","UnknownAuthority","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","1"],"q":["typestypes::HeaderBuilderError","","types::PrimaryMessage","","","","","","","","","","","","","types::PrimaryWorkerMessage","","","","","types::RetrievalResult","","types::WorkerMessage","","","types::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","types::error::DagError","","","","","","","","",""],"d":["","","","","","Used by workers to send a new batch or to reply to a batch …","","Proto wrapper for Narwhal type ","","","Proto wrapper for Narwhal type","Proto wrapper for Narwhal type ","Used by workers to request batches.","","A bincode encoded payload. This is intended to be used in …","","","","","","","","Proto wrapper for Narwhal type ","","","","The primary indicates a round update.","","Server streaming response type for the ClientBatchRequest …","Proto wrapper for Narwhal type ","","Proto wrapper for Narwhal type ","","","","Delete the batches, dictated from the provided vector of …","Empty message for when we don’t have anything to return","","","","","","Builder for <code>Header</code>.","Error type for HeaderBuilder","","","","","Generated trait containing gRPC methods that should be …","The primary-to-primary interface","The primary-to-primary interface","Generated trait containing gRPC methods that should be …","The primary-to-worker interface","The primary-to-worker interface","The messages sent by the primary to its workers.","The primary requests a batch from the worker","","The round number.","The primary indicates that the worker need to sync the …","","Proto wrapper for Narwhal type ","Generated trait containing gRPC methods that should be …","","","Uninitialized field","Custom validation error","Generated trait containing gRPC methods that should be …","The consensus to mempool interface for validator actions.","The consensus to mempool interface for validator actions.","","","","The message exchanged between workers.","Generated trait containing gRPC methods that should be …","The worker-to-primary interface","The worker-to-primary interface","Generated trait containing gRPC methods that should be …","The worker-to-worker interface","The worker-to-worker interface","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","requests a number of batches that the service then streams …","requests a number of batches that the service then streams …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of collections to be retreived.","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …eturns the enum value of <code>error</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Converts an <code>i32</code> to a <code>CollectionErrorType</code>, or <code>None</code> if <code>value</code> …","","Returns the collection contents for each requested …","Returns the collection contents for each requested …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>CollectionErrorType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TODO: Revisit this for spec compliance. List of retrieval …","","","","","","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Sends a message","Sends a message","Sends a worker message","Sends a message","Sends a message","Sends a worker message","Sends a message","Sends a message","","","","","","","","","","","","","Sets <code>error</code> to the provided enum value.","","","","Submit a Transactions","Submit a Transactions","Submit a Transactions","Submit a Transactionseturns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[1,2,3,0,4,5,0,0,6,0,0,0,5,6,0,0,0,6,0,0,7,0,0,7,7,7,8,0,9,0,10,0,10,0,10,8,0,4,0,0,0,7,0,0,0,7,7,0,0,0,0,0,0,0,0,8,0,0,8,0,0,0,0,0,11,11,0,0,0,0,7,0,0,0,0,0,0,0,0,12,13,14,15,16,17,18,19,20,0,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,18,38,38,39,39,40,40,41,41,42,42,43,43,27,28,29,30,31,32,33,34,35,36,37,9,14,1,2,19,21,20,22,23,24,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,1,2,19,21,20,22,23,24,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,2,21,22,24,10,34,12,13,14,15,16,17,1,2,18,19,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,10,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,1,2,19,21,20,22,23,24,7,8,36,5,3,1,19,20,23,27,28,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,4,27,28,29,30,31,32,33,4,34,35,36,37,0,1,2,19,21,20,22,23,24,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,1,2,21,22,24,10,0,31,26,31,1,2,2,11,11,19,19,21,21,20,22,22,23,24,24,7,8,25,6,6,26,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,44,1,2,18,11,11,11,19,21,20,22,23,24,7,8,25,6,26,27,27,28,28,29,29,30,31,31,32,32,33,4,34,35,36,36,37,10,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,38,39,40,41,42,43,10,23,45,12,2,21,22,24,10,2,21,22,24,10,23,18,19,20,25,26,31,32,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,10,4,1,2,21,22,24,25,26,27,28,29,30,31,32,33,4,34,35,36,2,19,20,24,12,13,14,15,16,17,38,39,40,41,42,43,23,20,18,19,2,21,22,24,10,18,19,36,38,38,39,39,40,40,41,41,42,42,43,43,35,33,18,23,19,20,12,13,14,15,16,17,46,47,9,48,13,14,15,16,1,2,19,21,20,22,23,24,7,8,5,3,31,18,19,20,49,17,49,17,1,2,19,21,20,22,23,24,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,2,11,19,21,22,24,6,26,29,30,25,32,1,2,18,11,19,21,20,22,23,24,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,19,20,23,23,1,2,18,11,19,21,20,22,23,24,7,8,25,6,26,27,28,29,30,31,32,33,4,34,35,36,37,10,12,13,14,15,16,17,38,39,40,41,42,43,5,3,12,13,14,15,16,17,38,39,40,41,42,43,18,50,51,52,53,54,55,55,56,57,58,58,59,59,56,57,60,61,62,63,60,64,65,66,67,67,68,68,0,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,70,71,72,73,74,75,76,77,77],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,nullheader",3]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]],["batch",3]],[[["",0]],["batchdigest",3]],[[["",0]],["header",3]],[[["",0]],["headerdigest",3]],[[["",0]],["vote",3]],[[["",0]],["votedigest",3]],[[["",0]],["certificate",3]],[[["",0]],["certificatedigest",3]],[[["",0]],["batchmessage",3]],[[["",0]],["blockerrortype",4]],[[["",0]],["blockerror",3]],[[["",0]],["certificatedigest",3]],[[["",0]],["batchdigest",3]],[[["",0]],["batch",3]],[[["",0]],["transaction",3]],[[["",0]],["collectionerror",3]],[[["",0]],["batchmessage",3]],[[["",0]],["collectionretrievalresult",3]],[[["",0]],["retrievalresult",4]],[[["",0]],["getcollectionsrequest",3]],[[["",0]],["getcollectionsresponse",3]],[[["",0]],["bincodeencodedpayload",3]],[[["",0]],["empty",3]],[[["",0]],["collectionerrortype",4]],[[["",0]],["validatorclient",3]],[[["",0]],["primarytoprimaryclient",3]],[[["",0]],["workertoworkerclient",3]],[[["",0]],["workertoprimaryclient",3]],[[["",0]],["primarytoworkerclient",3]],[[["",0]],["transactionsclient",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["batchdigest",3]],["ordering",4]],[[["",0],["headerdigest",3]],["ordering",4]],[[["",0],["votedigest",3]],["ordering",4]],[[["",0],["certificatedigest",3]],["ordering",4]],[[["",0],["collectionerrortype",4]],["ordering",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["batch",3]],[[],["batchdigest",3]],[[]],[[],["header",3]],[[],["headerdigest",3]],[[],["votedigest",3]],[[],["certificate",3]],[[],["certificatedigest",3]],[[],["batchmessage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["collectionerrortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["deserializeowned",8],["error",6]]]],[[],["result",4]],[[],["result",4]],[[["",0]]],[[["",0]],["headerdigest",3]],[[["",0]],["votedigest",3]],[[["",0]],["certificatedigest",3]],null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,[[["",0],["batch",3]],["bool",0]],[[["",0],["batchdigest",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["headerdigest",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["votedigest",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["certificatedigest",3]],["bool",0]],[[["",0],["batchmessage",3]],["bool",0]],[[["",0],["blockerrortype",4]],["bool",0]],[[["",0],["blockerror",3]],["bool",0]],[[["",0],["certificatedigest",3]],["bool",0]],[[["",0],["batchdigest",3]],["bool",0]],[[["",0],["batch",3]],["bool",0]],[[["",0],["transaction",3]],["bool",0]],[[["",0],["collectionerror",3]],["bool",0]],[[["",0],["batchmessage",3]],["bool",0]],[[["",0],["collectionretrievalresult",3]],["bool",0]],[[["",0],["retrievalresult",4]],["bool",0]],[[["",0],["getcollectionsrequest",3]],["bool",0]],[[["",0],["getcollectionsresponse",3]],["bool",0]],[[["",0],["bincodeencodedpayload",3]],["bool",0]],[[["",0],["empty",3]],["bool",0]],[[["",0],["collectionerrortype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["",0]],["collectionerrortype",4]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["blockerror",3]]],[[]],[[]],[[]],[[["string",3]]],[[["uninitializedfielderror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["certificatedigest",3]]],[[]],[[]],[[["batchdigest",3]]],[[]],[[["batch",3]]],[[]],[[]],[[["blockerror",3]]],[[]],[[["batchmessage",3]]],[[]],[[]],[[]],[[]],[[]],[[["bytes",3]]],[[]],[[]],[[["blockerrortype",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3]]],[[["arc",3]]],[[["arc",3]]],[[["arc",3]]],[[["arc",3]]],[[["arc",3]]],[[["i32",0]],["option",4,[["collectionerrortype",4]]]],[[["committee",3]],["vec",3]],[[["",0],["request",3,[["getcollectionsrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["headerdigest",3]]],null,null,null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["i32",0]],["bool",0]],[[["option",4],["u32",0],["wiretype",4],["",0],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["",0],["batch",3]],["bool",0]],[[["",0],["batchdigest",3]],["bool",0]],[[["",0],["headerdigest",3]],["bool",0]],[[["",0],["votedigest",3]],["bool",0]],[[["",0],["certificatedigest",3]],["bool",0]],[[["",0],["batchmessage",3]],["bool",0]],[[["",0],["blockerror",3]],["bool",0]],[[["",0],["certificatedigest",3]],["bool",0]],[[["",0],["batchdigest",3]],["bool",0]],[[["",0],["batch",3]],["bool",0]],[[["",0],["transaction",3]],["bool",0]],[[["",0],["collectionerror",3]],["bool",0]],[[["",0],["batchmessage",3]],["bool",0]],[[["",0],["collectionretrievalresult",3]],["bool",0]],[[["",0],["retrievalresult",4]],["bool",0]],[[["",0],["getcollectionsrequest",3]],["bool",0]],[[["",0],["getcollectionsresponse",3]],["bool",0]],[[["",0],["bincodeencodedpayload",3]],["bool",0]],[[],["batchdigest",3]],[[["round",6],["btreemap",3,[["batchdigest",3],["workerid",6]]],["btreeset",3,[["certificatedigest",3]]],["signatureservice",3]]],[[["header",3],["",0],["signatureservice",3]]],[[],["certificatedigest",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],null,[[["btreeset",3,[["certificatedigest",3]]]]],null,[[["",0],["batchdigest",3]],["option",4,[["ordering",4]]]],[[["",0],["headerdigest",3]],["option",4,[["ordering",4]]]],[[["",0],["votedigest",3]],["option",4,[["ordering",4]]]],[[["",0],["certificatedigest",3]],["option",4,[["ordering",4]]]],[[["",0],["collectionerrortype",4]],["option",4,[["ordering",4]]]],[[["btreemap",3,[["batchdigest",3],["workerid",6]]]]],null,null,[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],null,null,[[["round",6]]],[[["",0]],["round",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0],["collectionerrortype",4]]],[[]],null,null,[[["",0],["request",3,[["transaction",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0],["request",3,[["streaming",3,[["transaction",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["certificatedigestproto",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["error",6]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["committee",3]],["dagresult",6]],[[["",0],["committee",3]],["dagresult",6]],[[["",0],["committee",3]],["dagresult",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["validatorclient",3,[["interceptedservice",3]]]],[[],["primarytoprimaryclient",3,[["interceptedservice",3]]]],[[],["workertoworkerclient",3,[["interceptedservice",3]]]],[[],["workertoprimaryclient",3,[["interceptedservice",3]]]],[[],["primarytoworkerclient",3,[["interceptedservice",3]]]],[[],["transactionsclient",3,[["interceptedservice",3]]]],[[],["interceptedservice",3]],[[],["interceptedservice",3]],[[],["interceptedservice",3]],[[],["interceptedservice",3]],[[],["interceptedservice",3]],[[],["interceptedservice",3]],[[["batch",3],["workerid",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["box",3,[["errorkind",4]]]]],[[["cryptoerror",6]]],[[["storeerror",6]]],[[],["usize",0]],[[]],[[],["request",3]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null],"p":[[3,"Batch"],[3,"BatchDigest"],[3,"ClientBatchRequest"],[4,"RetrievalResult"],[4,"WorkerMessage"],[4,"BlockErrorType"],[4,"PrimaryMessage"],[4,"PrimaryWorkerMessage"],[8,"WorkerToWorker"],[4,"CollectionErrorType"],[4,"HeaderBuilderError"],[3,"ValidatorClient"],[3,"PrimaryToPrimaryClient"],[3,"WorkerToWorkerClient"],[3,"WorkerToPrimaryClient"],[3,"PrimaryToWorkerClient"],[3,"TransactionsClient"],[3,"HeaderBuilder"],[3,"Header"],[3,"Vote"],[3,"HeaderDigest"],[3,"VoteDigest"],[3,"Certificate"],[3,"CertificateDigest"],[3,"BatchMessage"],[3,"BlockError"],[3,"CertificateDigestProto"],[3,"BatchDigestProto"],[3,"BatchProto"],[3,"TransactionProto"],[3,"CollectionError"],[3,"BatchMessageProto"],[3,"CollectionRetrievalResult"],[3,"GetCollectionsRequest"],[3,"GetCollectionsResponse"],[3,"BincodeEncodedPayload"],[3,"Empty"],[3,"ValidatorServer"],[3,"PrimaryToPrimaryServer"],[3,"WorkerToWorkerServer"],[3,"WorkerToPrimaryServer"],[3,"PrimaryToWorkerServer"],[3,"TransactionsServer"],[6,"BlockResult"],[8,"Validator"],[8,"PrimaryToWorker"],[8,"WorkerToPrimary"],[8,"PrimaryToPrimary"],[8,"Transactions"],[13,"UninitializedField"],[13,"ValidationError"],[13,"Header"],[13,"Vote"],[13,"Certificate"],[13,"CertificatesRequest"],[13,"CertificatesBatchRequest"],[13,"PayloadAvailabilityRequest"],[13,"CertificatesBatchResponse"],[13,"PayloadAvailabilityResponse"],[13,"Synchronize"],[13,"Cleanup"],[13,"RequestBatch"],[13,"DeleteBatches"],[13,"Batch"],[13,"Error"],[13,"Batch"],[13,"BatchRequest"],[4,"DagError"],[13,"InvalidSignature"],[13,"StoreError"],[13,"SerializationError"],[13,"MalformedHeader"],[13,"UnknownAuthority"],[13,"AuthorityReuse"],[13,"UnexpectedVote"],[13,"HeaderRequiresQuorum"],[13,"TooOld"]]},\
"worker":{"doc":"","t":[13,13,6,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Batch","BatchRequest","SerializedBatchMessage","Worker","WorkerMessage","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","from","from","init","init","into","into","into_request","into_request","serialize","spawn","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","1"],"q":["worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","worker::WorkerMessage","",""],"d":["Used by workers to send a new batch or to reply to a batch …","Used by workers to request batches.","Indicates a serialized <code>WorkerMessage::Batch</code> message.","","The message exchanged between workers.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[1,1,0,0,0,2,1,2,1,2,1,2,1,1,2,1,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2,1,2,1,3,4,4],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["workermessage",4]]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["",0]],["result",4]],[[["workerid",6],["committee",3],["parameters",3],["store",3,[["batchdigest",3],["serializedbatchmessage",6]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null],"p":[[4,"WorkerMessage"],[3,"Worker"],[13,"Batch"],[13,"BatchRequest"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};