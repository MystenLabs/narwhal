var searchIndex = JSON.parse('{\
"config":{"doc":"","t":[3,3,4,3,4,3,13,8,13,8,13,13,13,13,3,3,6,6,13,3,6,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,11,12,12,12,11,12,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,5],"n":["Authority","BlockSynchronizerParameters","ComitteeUpdateError","Committee","ConfigError","ConsensusAPIGrpcParameters","DifferentStake","Export","ExportError","Import","ImportError","MissingFromUpdate","NotInCommittee","NotInCommittee","Parameters","PrimaryAddresses","SharedCommittee","Stake","UnknownWorker","WorkerAddresses","WorkerId","authorities","batch_size","block_synchronizer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificates_synchronize_timeout","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_api_grpc","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gc_depth","get_collections_timeout","handler_certificate_deliver_timeout","hash","header_size","import","into","into","into","into","into","into","into","into","into","max_batch_delay","max_concurrent_requests","max_header_delay","ne","ne","others_primaries","others_workers","our_workers","payload_availability_timeout","payload_synchronize_timeout","primary","primary","primary_to_primary","primary_to_worker","quorum_threshold","remove_collections_timeout","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","socket_addr","stake","stake","sync_retry_delay","sync_retry_nodes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","tracing","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_primary_network_info","utils","validity_threshold","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","worker","worker_to_primary","worker_to_worker","workers","0","0","0","0","0","file","file","message","message","get_available_port"],"q":["configconfig::ComitteeUpdateError","","","config::ConfigError","","","","","","config::utils"],"d":["","","","","","","","","","","","","","","Holds all the node properties. An example is provided to …","","","","","","","","The preferred batch size. The workers seal a batch of …","The parameters for the block synchronizer","","","","","","","","","","","","","","","","","","","The timeout configuration when requesting certificates …","","","","","","","","","","","","","The parameters for the Consensus API gRPC server","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The depth of the garbage collection (Denominated in number …","The timeout configuration when requesting batches from …","When a certificate is fetched on the fly from peers, it is …","","The preferred header size. The primary creates a new …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The delay after which the workers seal a batch of …","The maximum number of concurrent requests for messages …","The maximum delay that the primary waits between …","","","Returns the addresses of all primaries except <code>myself</code>.","Returns the addresses of all workers with a specific id …","Returns the addresses of all our workers.","The timeout configuration when for when we ask the other …","Timeout when has requested the payload for a certificate …","Returns the primary addresses of the target primary.","The network addresses of the primary.","Address to receive messages from other primaries (WAN).","Address to receive messages from our primary (LAN).","Returns the stake required to reach a quorum (2f+1).","The timeout configuration when removing batches from …","","","","","","","","Returns the number of authorities.","Socket address the server should be listening to.","Return the stake of a specific authority.","The voting power of this authority.","The delay after which the synchronizer retries to send …","Determine with how many nodes to sync when re-trying to …","","","","","","","","","","Address to receive client transactions (WAN).","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the networking information of some of the …","","Returns the stake required to reach availability (f+1).","","","","","","","","","","Returns the addresses of a specific worker (<code>id</code>) of a …","Address to receive messages from our workers (LAN).","Address to receive messages from other workers (WAN).","Map of workers’ id and their network addresses.","","","","","","","","","","Return an ephemeral, available port. On unix systems, the …"],"i":[0,0,0,0,0,0,1,0,2,0,2,1,2,1,0,0,0,0,2,0,0,3,4,4,2,1,4,5,6,7,8,9,3,2,1,4,5,6,7,8,9,3,6,4,5,6,7,8,9,4,5,6,7,8,9,4,4,5,6,4,5,6,7,8,9,3,7,8,10,2,2,1,1,4,5,6,7,2,1,4,5,6,7,8,9,3,4,5,6,8,4,11,2,1,4,5,6,7,8,9,3,4,4,4,7,8,3,3,3,6,6,3,9,7,8,3,5,4,5,6,7,8,9,3,3,5,3,9,4,4,4,5,6,7,8,9,2,1,4,8,2,1,4,5,6,7,8,9,3,2,1,4,5,6,7,8,9,3,2,1,4,5,6,7,8,9,3,3,0,3,2,1,4,5,6,7,8,9,3,3,7,8,9,12,13,14,15,16,17,18,17,18,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["parameters",3]],["parameters",3]],[[["consensusapigrpcparameters",3]],["consensusapigrpcparameters",3]],[[["blocksynchronizerparameters",3]],["blocksynchronizerparameters",3]],[[["primaryaddresses",3]],["primaryaddresses",3]],[[["workeraddresses",3]],["workeraddresses",3]],[[["authority",3]],["authority",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["parameters",3]],[[],["consensusapigrpcparameters",3]],[[],["blocksynchronizerparameters",3]],[[],["result",4,[["parameters",3]]]],[[],["result",4,[["consensusapigrpcparameters",3]]]],[[],["result",4,[["blocksynchronizerparameters",3]]]],[[],["result",4,[["primaryaddresses",3]]]],[[],["result",4,[["workeraddresses",3]]]],[[],["result",4,[["authority",3]]]],[[],["result",4,[["committee",3]]]],[[["primaryaddresses",3],["primaryaddresses",3]],["bool",0]],[[["workeraddresses",3],["workeraddresses",3]],["bool",0]],[[["",0],["str",0]],["result",4,[["configerror",4]]]],[[["configerror",4],["formatter",3]],["result",6]],[[["configerror",4],["formatter",3]],["result",6]],[[["comitteeupdateerror",4],["formatter",3]],["result",6]],[[["comitteeupdateerror",4],["formatter",3]],["result",6]],[[["parameters",3],["formatter",3]],["result",6]],[[["consensusapigrpcparameters",3],["formatter",3]],["result",6]],[[["blocksynchronizerparameters",3],["formatter",3]],["result",6]],[[["primaryaddresses",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["workeraddresses",3],["",0]]],null,[[["str",0]],["result",4,[["configerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["primaryaddresses",3],["primaryaddresses",3]],["bool",0]],[[["workeraddresses",3],["workeraddresses",3]],["bool",0]],[[["committee",3,[["verifyingkey",8]]],["",0]],["vec",3]],[[["committee",3,[["verifyingkey",8]]],["",0],["workerid",6]],["vec",3]],[[["committee",3,[["verifyingkey",8]]],["",0]],["result",4,[["vec",3,[["workeraddresses",3]]],["configerror",4]]]],null,null,[[["committee",3,[["verifyingkey",8]]],["",0]],["result",4,[["primaryaddresses",3],["configerror",4]]]],null,null,null,[[["committee",3,[["verifyingkey",8]]]],["stake",6]],null,[[["parameters",3]],["result",4]],[[["consensusapigrpcparameters",3]],["result",4]],[[["blocksynchronizerparameters",3]],["result",4]],[[["primaryaddresses",3]],["result",4]],[[["workeraddresses",3]],["result",4]],[[["authority",3]],["result",4]],[[["committee",3]],["result",4]],[[["committee",3,[["verifyingkey",8]]]],["usize",0]],null,[[["committee",3,[["verifyingkey",8]]],["",0]],["stake",6]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["parameters",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["committee",3,[["verifyingkey",8]]],["btreemap",3,[["verifyingkey",8]]]],["result",4,[["vec",3,[["comitteeupdateerror",4]]]]]],null,[[["committee",3,[["verifyingkey",8]]]],["stake",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["committee",3,[["verifyingkey",8]]],["",0],["workerid",6]],["result",4,[["workeraddresses",3],["configerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["u16",0]]],"p":[[4,"ComitteeUpdateError"],[4,"ConfigError"],[3,"Committee"],[3,"Parameters"],[3,"ConsensusAPIGrpcParameters"],[3,"BlockSynchronizerParameters"],[3,"PrimaryAddresses"],[3,"WorkerAddresses"],[3,"Authority"],[8,"Export"],[8,"Import"],[13,"NotInCommittee"],[13,"MissingFromUpdate"],[13,"DifferentStake"],[13,"NotInCommittee"],[13,"UnknownWorker"],[13,"ImportError"],[13,"ExportError"]]},\
"consensus":{"doc":"","t":[2,3,3,17,2,11,11,11,11,12,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,11,11,11,11,11,0,11,11,11,11,3,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Consensus","ConsensusOutput","ConsensusSyncRequest","DEFAULT_CHANNEL_SIZE","SubscriberHandler","borrow","borrow","borrow_mut","borrow_mut","certificate","clone","clone_into","consensus_index","dag","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","missing","serialize","serialize","subscriber","to_owned","try_from","try_from","try_into","try_into","tusk","type_id","type_id","vzip","vzip","Dag","DagInvariantViolation","NoCertificateForCoordinates","OutOfCertificates","ValidatorDagError","borrow","borrow","borrow_mut","borrow_mut","contains","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","init","init","insert","into","into","into_request","into_request","new","node_read_causal","read_causal","remove","rounds","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","1","SubscriberHandler","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","spawn","try_from","try_into","type_id","vzip","Consensus","State","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_request","into_request","new","process_certificate","spawn","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus::dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus::dag::ValidatorDagError","","","","consensus::subscriber","","","","","","","","","","","","","","","consensus::tusk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The output format of the consensus.","The message sent by the client to sync missing chunks of …","The default channel size used in the consensus and …","","","","","","The sequenced certificate.","","","The (global) index associated with this certificate.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The sequence numbers of the missing consensus outputs.","","","","","","","","","","","","","","The publicly exposed Dag handle, to which one can send …","","","","Represents the errors that can be encountered in this …","","","","","Returns whether the node is still in the Dag as a strong …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Inserts a Certificate in the Dag.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a breadth first traversal of the Dag, starting …","Returns a breadth first traversal of the Dag, starting …","Removes certificates from the Dag, reclaiming memory in …","Returns the oldest and newest rounds for which a validator …","","","","","","","","","","","","","","","Pushes the consensus output to subscriber clients and …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Spawn a new subscriber handler in a dedicated tokio task.","","","","","","The state that needs to be persisted for crash-recovery.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,2,1,2,1,1,1,1,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,1,2,0,1,1,2,1,2,0,1,2,1,2,0,3,3,3,0,4,3,4,3,4,4,3,4,3,4,3,3,3,4,3,3,4,3,4,4,3,4,3,4,4,4,4,4,3,3,4,3,4,3,4,3,4,3,5,6,7,6,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,10,9,10,9,10,9,10,9,10],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["consensusoutput",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],["consensusoutput",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["consensusoutput",3,[["verifyingkey",8]]]]]],[[],["result",4,[["consensussyncrequest",3]]]],[[["usize",0]]],[[["usize",0]]],[[["consensusoutput",3,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["consensussyncrequest",3],["formatter",3]],["result",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,[[["consensusoutput",3,[["verifyingkey",8]]]],["result",4]],[[["consensussyncrequest",3]],["result",4]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["dag",3,[["verifyingkey",8]]],["certificatedigest",3]],["future",8]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["validatordagerror",4,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["validatordagerror",4,[["verifyingkey",8]]],["formatter",3]],["result",6]],[[]],[[]],[[["nodedagerror",4]],["validatordagerror",4,[["verifyingkey",8]]]],[[],["usize",0]],[[],["usize",0]],[[["dag",3,[["verifyingkey",8]]],["certificate",3,[["verifyingkey",8]]]],["future",8]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["committee",3],["receiver",3,[["certificate",3,[["verifyingkey",8]]]]]]],[[["dag",3,[["verifyingkey",8]]],["verifyingkey",8],["round",6]],["future",8]],[[["dag",3,[["verifyingkey",8]]],["certificatedigest",3]],["future",8]],[[["dag",3,[["verifyingkey",8]]],["intoiterator",8]],["future",8]],[[["dag",3,[["verifyingkey",8]]],["verifyingkey",8]],["future",8]],[[["validatordagerror",4,[["verifyingkey",8]]]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[],["request",3]],[[["arc",3,[["consensusstore",3,[["verifyingkey",8]]]]],["store",3,[["certificatedigest",3],["certificate",3,[["verifyingkey",8]]]]],["receiver",3,[["consensusoutput",3,[["verifyingkey",8]]]]],["receiver",3,[["consensussyncrequest",3]]],["sender",3,[["consensusoutput",3,[["verifyingkey",8]]]]]],["joinhandle",3,[["storeresult",6]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["vec",3,[["certificate",3,[["verifyingkey",8]]]]]],["state",3,[["verifyingkey",8]]]],[[["committee",3],["arc",3],["round",6],["state",3],["sequencenumber",6],["certificate",3,[["verifyingkey",8]]]],["storeresult",6,[["vec",3,[["consensusoutput",3,[["verifyingkey",8]]]]]]]],[[["sharedcommittee",6,[["verifyingkey",8]]],["arc",3,[["consensusstore",3,[["verifyingkey",8]]]]],["round",6],["receiver",3,[["certificate",3,[["verifyingkey",8]]]]],["sender",3,[["certificate",3,[["verifyingkey",8]]]]],["sender",3,[["consensusoutput",3,[["verifyingkey",8]]]]]],["joinhandle",3,[["storeresult",6]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[3,"ConsensusOutput"],[3,"ConsensusSyncRequest"],[4,"ValidatorDagError"],[3,"Dag"],[13,"OutOfCertificates"],[13,"NoCertificateForCoordinates"],[13,"DagInvariantViolation"],[3,"SubscriberHandler"],[3,"State"],[3,"Consensus"]]},\
"crypto":{"doc":"","t":[6,17,3,8,8,3,16,8,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,11,11,10,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,10,11,11,3,3,3,3,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,3,8,16,16,16,16,16,16,16,16,8,8,8,8,11,11,11,10,11,10,11,11,11,11,11,10,11,10,11,11,10,10,11,11,11,11,11,10,11,11,11],"n":["CryptoError","DIGEST_LEN","Digest","Hash","Signature","SignatureService","TypedDigest","Verifier","as_bytes","as_ref","blake2b_256","bls12381","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","deserialize","digest","ed25519","eq","fmt","fmt","from","from","from_bytes","generate_keypair","generate_production_keypair","hash","into","into","ne","new","new","partial_cmp","request_signature","serialize","size","to_owned","to_owned","to_string","to_vec","traits","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","BLS12381KeyPair","BLS12381PrivateKey","BLS12381PublicKey","BLS12381Signature","BLS_PRIVATE_KEY_LENGTH","BLS_PUBLIC_KEY_LENGTH","BLS_SIGNATURE_LENGTH","DST","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","clone","clone","clone_into","clone_into","cmp","decode_base64","decode_base64","default","default","default","deserialize","deserialize","deserialize","deserialize","encode_base64","encode_base64","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","generate","hash","hash","into","into","into","into","partial_cmp","private","privkey","pubkey","public","serialize","serialize","serialize","serialize","sig","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_sign","try_sign","try_sign","try_sign","type_id","type_id","type_id","type_id","verify","verify_batch","vzip","vzip","vzip","vzip","0","0","0","Ed25519KeyPair","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","decode_base64","decode_base64","default","default","deserialize","deserialize","deserialize","deserialize","encode_base64","encode_base64","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","generate","hash","into","into","into","into","name","ne","ne","partial_cmp","private","public","secret","serialize","serialize","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_sign","try_sign","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","Authenticator","EncodeDecodeBase64","Error","KeyPair","PrivKey","PrivKey","PrivKey","PubKey","PubKey","PubKey","Sig","Sig","Signer","SigningKey","ToFromBytes","VerifyingKey","as_bytes","borrow","borrow_mut","decode_base64","default","encode_base64","fmt","fmt","from","from","from","from_bytes","from_source","generate","into","new","private","public","sign","source","to_string","try_from","try_into","try_sign","type_id","verify_batch","vzip"],"q":["crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crypto::bls12381","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crypto::ed25519","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crypto::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Represents a hash digest (32 bytes).","This trait is implemented by all messages that can be …","Trait impl’d by concrete types that represent digital …","This service holds the node’s private key. It takes …","","Verify the provided message bytestring using <code>Self</code> (e.g. a …","Borrow a byte slice representing the serialized form of …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Parse a signature from its byte representation","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Use <code>Self</code> to verify that the provided signature for a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait impl’d by signatures in asymmetric cryptography.","Cryptographic material with an immediate conversion …","Signature errors.","Trait impl’d by a public / private key pair in …","","","","","","","","","Sign the provided message bytestring using <code>Self</code> (e.g. a …","Trait impl’d by private (secret) keys in asymmetric …","Trait impl’d by concrete types that represent digital …","Trait impl’d by public keys in asymmetric cryptography.","Borrow a byte slice representing the serialized form of …","","","","","","","","","","Returns the argument unchanged.","Parse a key from its byte representation","Create a new error with an associated source.","","Calls <code>U::from(self)</code>.","Create a new error with no associated source","","","Sign the given message and return a digital signature","","","","","Attempt to sign the given message, returning a digital …","","",""],"i":[0,0,0,0,0,0,1,0,2,3,0,0,3,4,3,4,3,4,3,4,3,3,3,1,0,3,3,3,3,4,2,0,0,3,3,4,3,3,4,3,4,3,3,3,4,3,3,0,3,4,3,4,3,4,5,3,4,0,0,0,0,0,0,0,0,6,7,8,6,7,8,9,6,7,8,9,6,7,8,6,8,6,8,6,6,7,6,7,8,6,7,8,9,6,7,6,8,6,6,7,8,8,9,6,7,8,9,6,7,8,9,6,8,6,7,8,9,6,9,7,6,9,6,7,8,9,8,6,8,6,8,6,7,8,9,6,7,8,9,7,7,9,9,6,7,8,9,6,6,6,7,8,9,10,11,12,0,0,0,0,10,11,12,10,11,12,13,10,11,12,13,10,12,10,12,10,10,11,10,12,10,11,12,13,10,11,10,12,10,10,11,12,12,13,10,11,12,13,13,10,11,12,13,10,10,11,12,13,13,10,12,10,13,13,13,10,11,12,13,10,12,10,12,10,11,12,13,10,11,12,13,13,13,10,11,12,13,10,10,11,12,13,0,0,0,0,14,15,16,17,15,16,14,17,0,0,0,0,18,19,19,20,19,20,19,19,19,19,19,18,19,16,19,19,16,16,21,19,19,19,19,21,19,14,19],"f":[null,null,null,null,null,null,null,null,[[["",0]]],[[["digest",3]]],[[["fn",8]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["digest",3]],["digest",3]],[[["signatureservice",3,[["",26,[["clone",8],["authenticator",8]]]]]],["signatureservice",3,[["",26,[["clone",8],["authenticator",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["digest",3],["digest",3]],["ordering",4]],[[],["digest",3]],[[],["result",4,[["digest",3]]]],[[["",0]]],null,[[["digest",3],["digest",3]],["bool",0]],[[["digest",3],["formatter",3]],["result",4,[["error",3]]]],[[["digest",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["result",4,[["error",3]]]],[[["",0]],["keypair",8]],[[],["keypair",8]],[[["digest",3],["",0]]],[[]],[[]],[[["digest",3],["digest",3]],["bool",0]],[[],["digest",3]],[[],["signatureservice",3,[["authenticator",8]]]],[[["digest",3],["digest",3]],["option",4,[["ordering",4]]]],[[["signatureservice",3,[["authenticator",8]]],["digest",3]],["future",8]],[[["digest",3]],["result",4]],[[["digest",3]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["digest",3]],["vec",3,[["u8",0]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["",0]],["result",4,[["error",3]]]],[[]],[[]],null,null,null,null,null,null,null,null,[[["bls12381publickey",3]]],[[["bls12381privatekey",3]]],[[["bls12381signature",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["bls12381publickey",3]],["bls12381publickey",3]],[[["bls12381signature",3]],["bls12381signature",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["bls12381publickey",3],["bls12381publickey",3]],["ordering",4]],[[["str",0]],["result",4,[["report",3]]]],[[["str",0]],["result",4,[["report",3]]]],[[],["bls12381publickey",3]],[[],["bls12381privatekey",3]],[[],["bls12381signature",3]],[[],["result",4,[["bls12381publickey",3]]]],[[],["result",4,[["bls12381privatekey",3]]]],[[],["result",4,[["bls12381signature",3]]]],[[],["result",4,[["bls12381keypair",3]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["bls12381publickey",3],["bls12381publickey",3]],["bool",0]],[[["bls12381signature",3],["bls12381signature",3]],["bool",0]],[[["bls12381publickey",3],["formatter",3]],["result",6]],[[["bls12381publickey",3],["formatter",3]],["result",4,[["error",3]]]],[[["bls12381privatekey",3],["formatter",3]],["result",6]],[[["bls12381signature",3],["formatter",3]],["result",4,[["error",3]]]],[[["bls12381signature",3],["formatter",3]],["result",6]],[[["bls12381keypair",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4,[["bls12381publickey",3],["error",3]]]],[[],["result",4,[["bls12381privatekey",3],["error",3]]]],[[],["result",4,[["bls12381signature",3],["error",3]]]],[[["",0]],["bls12381keypair",3]],[[["bls12381publickey",3],["",0]]],[[["bls12381signature",3],["",0]]],[[]],[[]],[[]],[[]],[[["bls12381publickey",3],["bls12381publickey",3]],["option",4,[["ordering",4]]]],[[["bls12381keypair",3]]],null,null,[[["bls12381keypair",3]]],[[["bls12381publickey",3]],["result",4]],[[["bls12381privatekey",3]],["result",4]],[[["bls12381signature",3]],["result",4]],[[["bls12381keypair",3]],["result",4]],null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["bls12381privatekey",3]],["result",4,[["bls12381signature",3],["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["bls12381keypair",3]],["result",4,[["bls12381signature",3],["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["bls12381publickey",3],["bls12381signature",3]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["ed25519publickey",3]]],[[["ed25519privatekey",3]]],[[["ed25519signature",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ed25519publickey",3]],["ed25519publickey",3]],[[["ed25519signature",3]],["ed25519signature",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ed25519publickey",3],["ed25519publickey",3]],["ordering",4]],[[["str",0]],["result",4,[["report",3]]]],[[["str",0]],["result",4,[["report",3]]]],[[],["ed25519publickey",3]],[[],["ed25519signature",3]],[[],["result",4,[["ed25519publickey",3]]]],[[],["result",4,[["ed25519privatekey",3]]]],[[],["result",4,[["ed25519signature",3]]]],[[],["result",4,[["ed25519keypair",3]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["ed25519publickey",3],["ed25519publickey",3]],["bool",0]],[[["ed25519signature",3],["ed25519signature",3]],["bool",0]],[[["ed25519publickey",3],["formatter",3]],["result",4,[["error",3]]]],[[["ed25519publickey",3],["formatter",3]],["result",6]],[[["ed25519privatekey",3],["formatter",3]],["result",6]],[[["ed25519signature",3],["formatter",3]],["result",4,[["error",3]]]],[[["ed25519signature",3],["formatter",3]],["result",6]],[[["ed25519keypair",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["keypair",3]],["ed25519keypair",3]],[[],["result",4,[["ed25519publickey",3],["error",3]]]],[[],["result",4,[["ed25519privatekey",3],["error",3]]]],[[],["result",4,[["ed25519signature",3],["error",3]]]],[[["",0]],["ed25519keypair",3]],[[["ed25519publickey",3],["",0]]],[[]],[[]],[[]],[[]],null,[[["ed25519publickey",3],["ed25519publickey",3]],["bool",0]],[[["ed25519signature",3],["ed25519signature",3]],["bool",0]],[[["ed25519publickey",3],["ed25519publickey",3]],["option",4,[["ordering",4]]]],[[["ed25519keypair",3]]],[[["ed25519keypair",3]]],null,[[["ed25519publickey",3]],["result",4]],[[["ed25519privatekey",3]],["result",4]],[[["ed25519signature",3]],["result",4]],[[["ed25519keypair",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["error",3]]]],[[["ed25519keypair",3]],["result",4,[["ed25519signature",3],["error",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["ed25519publickey",3],["ed25519signature",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["result",4,[["report",3]]]],[[],["error",3]],[[["",0]],["string",3]],[[["error",3],["formatter",3]],["result",4,[["error",3]]]],[[["error",3],["formatter",3]],["result",4,[["error",3]]]],[[["internalerror",4]],["error",3]],[[["box",3,[["error",8],["global",3]]]],["error",3]],[[]],[[],["result",4,[["error",3]]]],[[["into",8,[["box",3,[["error",8],["global",3]]]]]],["error",3]],[[["",0]]],[[]],[[],["error",3]],[[]],[[["",0]]],[[["",0]]],[[["error",3]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["typeid",3]],[[],["result",4,[["error",3]]]],[[]]],"p":[[8,"Hash"],[8,"Signature"],[3,"Digest"],[3,"SignatureService"],[8,"Verifier"],[3,"BLS12381PublicKey"],[3,"BLS12381PrivateKey"],[3,"BLS12381Signature"],[3,"BLS12381KeyPair"],[3,"Ed25519PublicKey"],[3,"Ed25519PrivateKey"],[3,"Ed25519Signature"],[3,"Ed25519KeyPair"],[8,"VerifyingKey"],[8,"Authenticator"],[8,"KeyPair"],[8,"SigningKey"],[8,"ToFromBytes"],[3,"Error"],[8,"EncodeDecodeBase64"],[8,"Signer"]]},\
"dag":{"doc":"","t":[3,3,6,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Node","NodeRef","WeakNodeRef","bfs","bft","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from_pointee","hash","init","init","into","into","is_compressible","is_leaf","make_compressible","new","new_leaf","node_dag","parents","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","Bft","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_iter","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","next","to_owned","try_from","try_into","type_id","vzip","Affiliated","DroppedDigest","NodeDag","NodeDagError","UnknownDigests","bft","borrow","borrow","borrow_mut","borrow_mut","compressible","contains","contains_live","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fmt","from","from","get_weak","has_head","init","init","into","into","make_compressible","ne","new","parents","to_string","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","vzip","vzip","0","0"],"q":["dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dag::bft","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dag::node_dag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dag::node_dag::NodeDagError",""],"d":["The Dag node, aka vertex.","Reference-counted pointers to a Node","Non reference-counted pointers to a Node","Returns a Breadth-first search of the DAG, as an iterator …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a NodeRef pointing at the Node passed as argument","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the node compressible?","Is the node parent-less?","Make the node compressible. Returns true if the node was …","Create a new DAG inner node that contains the given value …","Create a new DAG leaf node that contains the given value.","","Compress the path from this node to the next …","","","","","","","","Return the value payload of the node","","","Breadth-First Traversal (or Level Order Traversal).","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a <code>Bft</code>, where <code>root</code> is the starting <code>Node</code>.","","","","","","","A trait marking the minimum information we need to sort …","","The Dag data structure This consists morally of two tables …","","","Performs a breadth-first traversal of the Dag starting at …","","","","","Whether the current value should be marked as compressible …","Returns whether the vertex pointed to by the hash passed …","Returns whether the vertex pointed to by the hash passed …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a weak reference to the requested vertex. This …","Returns whether the vertex pointed to by the hash passed …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Marks the node passed as argument as compressible, leaving …","","Creates a new Node dag","Hash pointers to the parents of the current value","","","","Inserts a node in the Dag from the provided value","","","","","","","",""],"i":[0,0,0,0,0,1,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,2,1,1,1,2,1,1,1,2,1,2,2,2,2,2,2,0,2,1,1,2,1,2,1,2,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,0,0,4,5,5,4,5,4,6,5,5,5,5,4,5,4,5,4,4,5,4,4,5,4,5,5,5,4,5,4,5,4,5,6,4,5,4,5,5,4,5,4,5,4,7,8],"f":[null,null,null,[[["noderef",3,[["",26,[["sync",8],["send",8],["debug",8]]]]]],["iterator",8]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["noderef",3]],["noderef",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["noderef",3]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["noderef",3],["noderef",3]],["bool",0]],[[["node",3,[["partialeq",8]]],["node",3,[["partialeq",8]]]],["bool",0]],[[["noderef",3,[["debug",8]]],["formatter",3]],["result",6]],[[["node",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[["node",3]],["noderef",3]],[[["arc",3,[["node",3]]]],["noderef",3]],[[]],[[["node",3]],["noderef",3]],[[["noderef",3],["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["node",3]],["bool",0]],[[["node",3]],["bool",0]],[[["node",3]],["bool",0]],[[["bool",0],["vec",3,[["noderef",3]]]],["node",3]],[[["bool",0]],["node",3]],null,[[["node",3,[["",26,[["sync",8],["send",8],["debug",8]]]]]],["vec",3,[["noderef",3,[["",26,[["sync",8],["send",8],["debug",8]]]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["node",3]],["",0]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["bft",3,[["clone",8],["clone",8],["clone",8]]]],["bft",3,[["clone",8],["clone",8],["clone",8]]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["bft",3,[["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bft",3]],[[["bft",3]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,[[["nodedag",3,[["",26,[["affiliated",8],["sync",8],["send",8],["debug",8]]]]]],["result",4,[["iterator",8],["nodedagerror",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bool",0]],[[["nodedag",3,[["affiliated",8]]]],["bool",0]],[[["nodedag",3,[["affiliated",8]]]],["bool",0]],[[],["nodedag",3,[["affiliated",8]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["nodedagerror",4],["nodedagerror",4]],["bool",0]],[[["nodedag",3,[["",26,[["debug",8],["affiliated",8]]]]],["formatter",3]],["result",6]],[[["nodedagerror",4],["formatter",3]],["result",6]],[[["nodedagerror",4],["formatter",3]],["result",6]],[[]],[[]],[[["nodedag",3,[["affiliated",8]]]],["result",4,[["weaknoderef",6,[["affiliated",8]]],["nodedagerror",4]]]],[[["nodedag",3,[["affiliated",8]]]],["result",4,[["bool",0],["nodedagerror",4]]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["nodedag",3,[["affiliated",8]]]],["result",4,[["bool",0],["nodedagerror",4]]]],[[["nodedagerror",4],["nodedagerror",4]],["bool",0]],[[],["nodedag",3,[["affiliated",8]]]],[[["",0]],["vec",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["nodedag",3,[["affiliated",8]]],["affiliated",8]],["result",4,[["nodedagerror",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null],"p":[[3,"NodeRef"],[3,"Node"],[3,"Bft"],[4,"NodeDagError"],[3,"NodeDag"],[8,"Affiliated"],[13,"UnknownDigests"],[13,"DroppedDigest"]]},\
"demo_client":{"doc":"","t":[17,17,5,5,0,5,3,3,3,3,3,3,13,4,13,3,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,0,0,0,0,0,0,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,10,10,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,16,8,3,3,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11],"n":["BLOCK_GAS_LIMIT","PRIMARY_0_PUBLIC_KEY","get_total_transaction_count_and_size","main","narwhal","println_and_into_inner","Batch","BatchDigest","BatchMessage","BincodeEncodedPayload","CertificateDigest","CollectionError","CollectionError","CollectionErrorType","CollectionNotFound","CollectionRetrievalResult","CollectionTimeout","Empty","GetCollectionsRequest","GetCollectionsResponse","MultiAddr","NewNetworkInfoRequest","NodeReadCausalRequest","NodeReadCausalResponse","PublicKey","ReadCausalRequest","ReadCausalResponse","RemoveCollectionsRequest","RoundsRequest","RoundsResponse","Transaction","ValidatorData","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collection_id","collection_ids","collection_ids","collection_ids","collection_ids","collection_retrieval_result","configuration_client","configuration_server","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","digest","digest","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","epoch_number","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","get_hash","hash","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_valid","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","newest_round","oldest_round","partial_cmp","payload","primary_to_primary_client","primary_to_primary_server","primary_to_worker_client","primary_to_worker_server","proposer_client","proposer_server","public_key","public_key","public_key","result","retrieval_result","round","set_error","stake_weight","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction","transaction","transactions","transactions_client","transactions_server","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validator_client","validator_server","validators","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","worker_to_primary_client","worker_to_primary_server","worker_to_worker_client","worker_to_worker_server","Batch","Error","RetrievalResult","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","into_request","merge","ne","to_owned","try_from","try_into","type_id","vzip","0","0","ConfigurationClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","new_network_info","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Configuration","ConfigurationServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","new_network_info","poll_ready","poll_ready","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","PrimaryToPrimaryClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","PrimaryToPrimary","PrimaryToPrimaryServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","PrimaryToWorkerClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","PrimaryToWorker","PrimaryToWorkerServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","ProposerClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","node_read_causal","rounds","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Proposer","ProposerServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","node_read_causal","poll_ready","poll_ready","rounds","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","TransactionsClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","submit_transaction","submit_transaction_stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Transactions","TransactionsServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","submit_transaction","submit_transaction_stream","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","ValidatorClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_collections","inner","into","into_request","new","read_causal","remove_collections","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","Validator","ValidatorServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","get_collections","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","read_causal","remove_collections","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","WorkerToPrimaryClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","WorkerToPrimary","WorkerToPrimaryServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","WorkerToWorkerClient","accept_gzip","borrow","borrow_mut","client_batch_request","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","ClientBatchRequestStream","WorkerToWorker","WorkerToWorkerServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","client_batch_request","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["demo_client","","","","","","demo_client::narwhaldemo_client::narwhal::collection_retrieval_result","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::collection_retrieval_result::RetrievalResult","","demo_client::narwhal::configuration_client","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::configuration_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_primary_client","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_primary_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_worker_client","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::primary_to_worker_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::proposer_client","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::proposer_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::transactions_client","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::transactions_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::validator_client","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::validator_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_primary_client","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_primary_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_worker_client","","","","","","","","","","","","","","","","","","","","","","demo_client::narwhal::worker_to_worker_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","DEMO CONSTANTS","","","","","","","","A bincode encoded payload. This is intended to be used in …","","","","","","","","Empty message for when we don’t have anything to return","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collection for which a sequence of related collections …","List of collections to be retreived.","List of collections to be removed.","Resulting sequence of collections from DAG walk.","Resulting sequence of collections from DAG walk.","Nested message and enum types in <code>CollectionRetrievalResult</code>.","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>error</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>CollectionErrorType</code>, or <code>None</code> if <code>value</code> …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>CollectionErrorType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","","","","TODO: Revisit this for spec compliance. List of retrieval …","","","Sets <code>error</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Signals a change in networking info","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Signals a change in networking info","","","","","","","","","","","","","","","The primary-to-primary interface","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a message","","","","","","","","Generated trait containing gRPC methods that should be …","The primary-to-primary interface","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a message","","","","","","","","","","","","The primary-to-worker interface","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a message","","","","","","","","Generated trait containing gRPC methods that should be …","The primary-to-worker interface","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a message","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Returns the read_causal obtained by starting the DAG walk …","","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the read_causal obtained by starting the DAG walk …","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Submit a Transactions","Submit a Transactions","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Submit a Transactions","Submit a Transactions","","","","","","","","","","","","The consensus to mempool interface for validator actions.","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","Returns collection contents for each requested collection.","","Calls <code>U::from(self)</code>.","","","Returns collections along a DAG walk with a well-defined …","Expunges collections from the mempool.","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","The consensus to mempool interface for validator actions.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns collection contents for each requested collection.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns collections along a DAG walk with a well-defined …","Expunges collections from the mempool.","","","","","","","","","","","","","The worker-to-primary interface","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a message","","","","","","","","Generated trait containing gRPC methods that should be …","The worker-to-primary interface","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a message","","","","","","","","","","","","The worker-to-worker interface","Enable decompressing responses with <code>gzip</code>.","","","requests a number of batches that the service then streams …","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Sends a worker message","","","","","","","","Server streaming response type for the ClientBatchRequest …","Generated trait containing gRPC methods that should be …","The worker-to-worker interface","","","","","","","","","requests a number of batches that the service then streams …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sends a worker message","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,10,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,1,15,12,14,16,20,0,0,0,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,4,5,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,21,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,1,8,8,4,4,5,5,6,7,8,9,2,10,3,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,22,23,23,1,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,1,1,1,8,9,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,1,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,18,18,1,22,0,0,0,0,0,0,3,17,19,13,11,19,8,3,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,4,5,12,13,14,15,16,17,18,19,20,23,6,7,9,0,0,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,0,0,21,4,5,6,7,8,9,2,10,3,11,12,13,14,15,16,17,18,19,20,21,22,23,1,0,0,0,0,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,0,0,0,29,28,29,28,29,29,29,28,29,28,29,28,29,28,29,29,29,28,29,28,29,29,30,29,29,29,28,29,28,29,28,29,28,29,28,29,29,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,33,32,33,32,33,33,33,32,33,32,33,32,33,32,33,33,33,32,33,32,33,33,33,33,33,34,32,33,32,33,32,33,32,33,32,33,33,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,0,0,0,37,36,37,36,37,37,37,36,37,36,37,36,37,36,37,37,37,36,37,36,37,37,37,37,37,38,36,37,36,37,36,37,36,37,36,37,37,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,0,0,0,41,40,41,40,41,41,41,40,41,40,41,40,41,40,41,41,41,40,41,40,41,41,42,41,41,42,41,40,41,40,41,40,41,40,41,40,41,41,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,0,0,0,45,44,45,44,45,45,45,44,45,44,45,44,45,44,45,45,45,44,45,44,45,45,45,45,45,46,46,44,45,44,45,44,45,44,45,44,45,45,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,0,0,0,49,48,49,48,49,49,49,48,49,48,49,48,49,48,49,49,50,49,48,49,48,49,49,49,49,50,50,49,48,49,48,49,48,49,48,49,48,49,49,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,0,0,0,53,52,53,52,53,53,53,52,53,52,53,52,53,52,53,53,53,52,53,52,53,53,53,53,53,54,52,53,52,53,52,53,52,53,52,53,53,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,57,0,0,0,58,56,58,56,58,58,58,57,56,58,56,58,56,58,56,58,58,58,56,58,56,58,58,58,58,58,57,56,58,56,58,56,58,56,58,56,58,58],"f":[null,null,[[["vec",3,[["collectionretrievalresult",3]]]]],[[],["result",4,[["box",3,[["error",8]]]]]],null,[[["result",4,[["response",3],["status",3]]]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,[[["certificatedigest",3]]],[[["batchdigest",3]]],[[["batch",3]]],[[["transaction",3]]],[[["collectionerror",3]]],[[["batchmessage",3]]],[[["multiaddr",3]]],[[["publickey",3]]],[[["validatordata",3]]],[[["collectionretrievalresult",3]]],[[["getcollectionsrequest",3]]],[[["getcollectionsresponse",3]]],[[["removecollectionsrequest",3]]],[[["readcausalrequest",3]]],[[["readcausalresponse",3]]],[[["roundsrequest",3]]],[[["roundsresponse",3]]],[[["nodereadcausalrequest",3]]],[[["nodereadcausalresponse",3]]],[[["newnetworkinforequest",3]]],[[["bincodeencodedpayload",3]]],[[["empty",3]]],[[["certificatedigest",3]],["certificatedigest",3]],[[["batchdigest",3]],["batchdigest",3]],[[["batch",3]],["batch",3]],[[["transaction",3]],["transaction",3]],[[["collectionerror",3]],["collectionerror",3]],[[["batchmessage",3]],["batchmessage",3]],[[["multiaddr",3]],["multiaddr",3]],[[["publickey",3]],["publickey",3]],[[["validatordata",3]],["validatordata",3]],[[["collectionretrievalresult",3]],["collectionretrievalresult",3]],[[["getcollectionsrequest",3]],["getcollectionsrequest",3]],[[["getcollectionsresponse",3]],["getcollectionsresponse",3]],[[["removecollectionsrequest",3]],["removecollectionsrequest",3]],[[["readcausalrequest",3]],["readcausalrequest",3]],[[["readcausalresponse",3]],["readcausalresponse",3]],[[["roundsrequest",3]],["roundsrequest",3]],[[["roundsresponse",3]],["roundsresponse",3]],[[["nodereadcausalrequest",3]],["nodereadcausalrequest",3]],[[["nodereadcausalresponse",3]],["nodereadcausalresponse",3]],[[["newnetworkinforequest",3]],["newnetworkinforequest",3]],[[["bincodeencodedpayload",3]],["bincodeencodedpayload",3]],[[["empty",3]],["empty",3]],[[["collectionerrortype",4]],["collectionerrortype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["collectionerrortype",4],["collectionerrortype",4]],["ordering",4]],null,null,null,null,null,null,null,null,[[],["certificatedigest",3]],[[],["batchdigest",3]],[[],["batch",3]],[[],["transaction",3]],[[],["collectionerror",3]],[[],["batchmessage",3]],[[],["multiaddr",3]],[[],["publickey",3]],[[],["validatordata",3]],[[],["collectionretrievalresult",3]],[[],["getcollectionsrequest",3]],[[],["getcollectionsresponse",3]],[[],["removecollectionsrequest",3]],[[],["readcausalrequest",3]],[[],["readcausalresponse",3]],[[],["roundsrequest",3]],[[],["roundsresponse",3]],[[],["nodereadcausalrequest",3]],[[],["nodereadcausalresponse",3]],[[],["newnetworkinforequest",3]],[[],["bincodeencodedpayload",3]],[[],["empty",3]],[[],["collectionerrortype",4]],null,null,[[["certificatedigest",3]],["usize",0]],[[["batchdigest",3]],["usize",0]],[[["batch",3]],["usize",0]],[[["transaction",3]],["usize",0]],[[["collectionerror",3]],["usize",0]],[[["batchmessage",3]],["usize",0]],[[["multiaddr",3]],["usize",0]],[[["publickey",3]],["usize",0]],[[["validatordata",3]],["usize",0]],[[["collectionretrievalresult",3]],["usize",0]],[[["getcollectionsrequest",3]],["usize",0]],[[["getcollectionsresponse",3]],["usize",0]],[[["removecollectionsrequest",3]],["usize",0]],[[["readcausalrequest",3]],["usize",0]],[[["readcausalresponse",3]],["usize",0]],[[["roundsrequest",3]],["usize",0]],[[["roundsresponse",3]],["usize",0]],[[["nodereadcausalrequest",3]],["usize",0]],[[["nodereadcausalresponse",3]],["usize",0]],[[["newnetworkinforequest",3]],["usize",0]],[[["bincodeencodedpayload",3]],["usize",0]],[[["empty",3]],["usize",0]],null,[[["certificatedigest",3],["certificatedigest",3]],["bool",0]],[[["batchdigest",3],["batchdigest",3]],["bool",0]],[[["batch",3],["batch",3]],["bool",0]],[[["transaction",3],["transaction",3]],["bool",0]],[[["collectionerror",3],["collectionerror",3]],["bool",0]],[[["batchmessage",3],["batchmessage",3]],["bool",0]],[[["multiaddr",3],["multiaddr",3]],["bool",0]],[[["publickey",3],["publickey",3]],["bool",0]],[[["validatordata",3],["validatordata",3]],["bool",0]],[[["collectionretrievalresult",3],["collectionretrievalresult",3]],["bool",0]],[[["getcollectionsrequest",3],["getcollectionsrequest",3]],["bool",0]],[[["getcollectionsresponse",3],["getcollectionsresponse",3]],["bool",0]],[[["removecollectionsrequest",3],["removecollectionsrequest",3]],["bool",0]],[[["readcausalrequest",3],["readcausalrequest",3]],["bool",0]],[[["readcausalresponse",3],["readcausalresponse",3]],["bool",0]],[[["roundsrequest",3],["roundsrequest",3]],["bool",0]],[[["roundsresponse",3],["roundsresponse",3]],["bool",0]],[[["nodereadcausalrequest",3],["nodereadcausalrequest",3]],["bool",0]],[[["nodereadcausalresponse",3],["nodereadcausalresponse",3]],["bool",0]],[[["newnetworkinforequest",3],["newnetworkinforequest",3]],["bool",0]],[[["bincodeencodedpayload",3],["bincodeencodedpayload",3]],["bool",0]],[[["empty",3],["empty",3]],["bool",0]],[[["collectionerrortype",4],["collectionerrortype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["collectionerror",3]],["collectionerrortype",4]],null,[[["certificatedigest",3],["formatter",3]],["result",6]],[[["certificatedigest",3],["formatter",3]],["result",6]],[[["batchdigest",3],["formatter",3]],["result",6]],[[["batchdigest",3],["formatter",3]],["result",6]],[[["batch",3],["formatter",3]],["result",6]],[[["transaction",3],["formatter",3]],["result",6]],[[["collectionerror",3],["formatter",3]],["result",6]],[[["batchmessage",3],["formatter",3]],["result",6]],[[["multiaddr",3],["formatter",3]],["result",6]],[[["publickey",3],["formatter",3]],["result",6]],[[["validatordata",3],["formatter",3]],["result",6]],[[["collectionretrievalresult",3],["formatter",3]],["result",6]],[[["getcollectionsrequest",3],["formatter",3]],["result",6]],[[["getcollectionsrequest",3],["formatter",3]],["result",6]],[[["getcollectionsresponse",3],["formatter",3]],["result",6]],[[["getcollectionsresponse",3],["formatter",3]],["result",6]],[[["removecollectionsrequest",3],["formatter",3]],["result",6]],[[["removecollectionsrequest",3],["formatter",3]],["result",6]],[[["readcausalrequest",3],["formatter",3]],["result",6]],[[["readcausalrequest",3],["formatter",3]],["result",6]],[[["readcausalresponse",3],["formatter",3]],["result",6]],[[["readcausalresponse",3],["formatter",3]],["result",6]],[[["roundsrequest",3],["formatter",3]],["result",6]],[[["roundsrequest",3],["formatter",3]],["result",6]],[[["roundsresponse",3],["formatter",3]],["result",6]],[[["roundsresponse",3],["formatter",3]],["result",6]],[[["nodereadcausalrequest",3],["formatter",3]],["result",6]],[[["nodereadcausalrequest",3],["formatter",3]],["result",6]],[[["nodereadcausalresponse",3],["formatter",3]],["result",6]],[[["nodereadcausalresponse",3],["formatter",3]],["result",6]],[[["newnetworkinforequest",3],["formatter",3]],["result",6]],[[["bincodeencodedpayload",3],["formatter",3]],["result",6]],[[["empty",3],["formatter",3]],["result",6]],[[["empty",3],["formatter",3]],["result",6]],[[["collectionerrortype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["collectionerrortype",4]]]],[[["",0],["",0]],["u64",0]],[[["collectionerrortype",4],["",0]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["i32",0]],["bool",0]],[[["certificatedigest",3],["certificatedigest",3]],["bool",0]],[[["batchdigest",3],["batchdigest",3]],["bool",0]],[[["batch",3],["batch",3]],["bool",0]],[[["transaction",3],["transaction",3]],["bool",0]],[[["collectionerror",3],["collectionerror",3]],["bool",0]],[[["batchmessage",3],["batchmessage",3]],["bool",0]],[[["multiaddr",3],["multiaddr",3]],["bool",0]],[[["publickey",3],["publickey",3]],["bool",0]],[[["validatordata",3],["validatordata",3]],["bool",0]],[[["collectionretrievalresult",3],["collectionretrievalresult",3]],["bool",0]],[[["getcollectionsrequest",3],["getcollectionsrequest",3]],["bool",0]],[[["getcollectionsresponse",3],["getcollectionsresponse",3]],["bool",0]],[[["removecollectionsrequest",3],["removecollectionsrequest",3]],["bool",0]],[[["readcausalrequest",3],["readcausalrequest",3]],["bool",0]],[[["readcausalresponse",3],["readcausalresponse",3]],["bool",0]],[[["roundsrequest",3],["roundsrequest",3]],["bool",0]],[[["roundsresponse",3],["roundsresponse",3]],["bool",0]],[[["nodereadcausalrequest",3],["nodereadcausalrequest",3]],["bool",0]],[[["nodereadcausalresponse",3],["nodereadcausalresponse",3]],["bool",0]],[[["newnetworkinforequest",3],["newnetworkinforequest",3]],["bool",0]],[[["bincodeencodedpayload",3],["bincodeencodedpayload",3]],["bool",0]],null,null,[[["collectionerrortype",4],["collectionerrortype",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["collectionerror",3],["collectionerrortype",4]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["retrievalresult",4]],["retrievalresult",4]],[[["",0],["",0]]],[[["retrievalresult",4],["",0]]],[[["retrievalresult",4]],["usize",0]],[[["retrievalresult",4],["retrievalresult",4]],["bool",0]],[[["retrievalresult",4],["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[["option",4],["u32",0],["wiretype",4],["",0],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["retrievalresult",4],["retrievalresult",4]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["configurationclient",3]],["configurationclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["configurationclient",3,[["clone",8]]]],["configurationclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["configurationclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[],["configurationclient",3]],[[["configurationclient",3],["intorequest",8,[["newnetworkinforequest",3]]]],["future",8]],[[["configurationclient",3]],["configurationclient",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["configurationclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["configurationserver",3],["request",3]]],[[["",0],["request",3]]],[[["_inner",3,[["configuration",8]]]],["_inner",3,[["configuration",8]]]],[[["configurationserver",3,[["configuration",8]]]],["configurationserver",3,[["configuration",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["configurationserver",3,[["",26,[["debug",8],["configuration",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["configuration",8]]]],["configurationserver",3,[["configuration",8]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["configuration",8]],["configurationserver",3,[["configuration",8]]]],[[["",0],["request",3,[["newnetworkinforequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["configurationserver",3],["context",3]],["poll",4,[["result",4]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["configuration",8]],["interceptedservice",3,[["configurationserver",3,[["configuration",8]]]]]],null,[[["primarytoprimaryclient",3]],["primarytoprimaryclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["primarytoprimaryclient",3,[["clone",8]]]],["primarytoprimaryclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["primarytoprimaryclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[],["primarytoprimaryclient",3]],[[["primarytoprimaryclient",3]],["primarytoprimaryclient",3]],[[["primarytoprimaryclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["primarytoprimaryclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["primarytoprimaryserver",3],["request",3]]],[[["",0],["request",3]]],[[["_inner",3,[["primarytoprimary",8]]]],["_inner",3,[["primarytoprimary",8]]]],[[["primarytoprimaryserver",3,[["primarytoprimary",8]]]],["primarytoprimaryserver",3,[["primarytoprimary",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["primarytoprimaryserver",3,[["",26,[["debug",8],["primarytoprimary",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["primarytoprimary",8]]]],["primarytoprimaryserver",3,[["primarytoprimary",8]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["primarytoprimary",8]],["primarytoprimaryserver",3,[["primarytoprimary",8]]]],[[["primarytoprimaryserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],null,[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["primarytoprimary",8]],["interceptedservice",3,[["primarytoprimaryserver",3,[["primarytoprimary",8]]]]]],null,[[["primarytoworkerclient",3]],["primarytoworkerclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["primarytoworkerclient",3,[["clone",8]]]],["primarytoworkerclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["primarytoworkerclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[],["primarytoworkerclient",3]],[[["primarytoworkerclient",3]],["primarytoworkerclient",3]],[[["primarytoworkerclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["primarytoworkerclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["request",3]]],[[["primarytoworkerserver",3],["request",3]]],[[["_inner",3,[["primarytoworker",8]]]],["_inner",3,[["primarytoworker",8]]]],[[["primarytoworkerserver",3,[["primarytoworker",8]]]],["primarytoworkerserver",3,[["primarytoworker",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["primarytoworkerserver",3,[["",26,[["debug",8],["primarytoworker",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["primarytoworker",8]]]],["primarytoworkerserver",3,[["primarytoworker",8]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["primarytoworker",8]],["primarytoworkerserver",3,[["primarytoworker",8]]]],[[["primarytoworkerserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],null,[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["primarytoworker",8]],["interceptedservice",3,[["primarytoworkerserver",3,[["primarytoworker",8]]]]]],null,[[["proposerclient",3]],["proposerclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["proposerclient",3,[["clone",8]]]],["proposerclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["proposerclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[],["proposerclient",3]],[[["proposerclient",3],["intorequest",8,[["nodereadcausalrequest",3]]]],["future",8]],[[["proposerclient",3],["intorequest",8,[["roundsrequest",3]]]],["future",8]],[[["proposerclient",3]],["proposerclient",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["proposerclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["request",3]]],[[["proposerserver",3],["request",3]]],[[["_inner",3,[["proposer",8]]]],["_inner",3,[["proposer",8]]]],[[["proposerserver",3,[["proposer",8]]]],["proposerserver",3,[["proposer",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["proposerserver",3,[["",26,[["debug",8],["proposer",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["proposer",8]]]],["proposerserver",3,[["proposer",8]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["proposer",8]],["proposerserver",3,[["proposer",8]]]],[[["",0],["request",3,[["nodereadcausalrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["proposerserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["request",3,[["roundsrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["proposer",8]],["interceptedservice",3,[["proposerserver",3,[["proposer",8]]]]]],null,[[["transactionsclient",3]],["transactionsclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["transactionsclient",3,[["clone",8]]]],["transactionsclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["transactionsclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[],["transactionsclient",3]],[[["transactionsclient",3]],["transactionsclient",3]],[[["transactionsclient",3],["intorequest",8,[["transaction",3]]]],["future",8]],[[["transactionsclient",3],["intostreamingrequest",8]],["future",8]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["transactionsclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["transactionsserver",3],["request",3]]],[[["",0],["request",3]]],[[["_inner",3,[["transactions",8]]]],["_inner",3,[["transactions",8]]]],[[["transactionsserver",3,[["transactions",8]]]],["transactionsserver",3,[["transactions",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["transactionsserver",3,[["",26,[["debug",8],["transactions",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["transactions",8]]]],["transactionsserver",3,[["transactions",8]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["transactions",8]],["transactionsserver",3,[["transactions",8]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["transactionsserver",3],["context",3]],["poll",4,[["result",4]]]],null,[[["",0],["request",3,[["transaction",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["streaming",3,[["transaction",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["transactions",8]],["interceptedservice",3,[["transactionsserver",3,[["transactions",8]]]]]],null,[[["validatorclient",3]],["validatorclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["validatorclient",3,[["clone",8]]]],["validatorclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["validatorclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[["validatorclient",3],["intorequest",8,[["getcollectionsrequest",3]]]],["future",8]],null,[[]],[[],["request",3]],[[],["validatorclient",3]],[[["validatorclient",3],["intorequest",8,[["readcausalrequest",3]]]],["future",8]],[[["validatorclient",3],["intorequest",8,[["removecollectionsrequest",3]]]],["future",8]],[[["validatorclient",3]],["validatorclient",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["validatorclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["request",3]]],[[["validatorserver",3],["request",3]]],[[["_inner",3,[["validator",8]]]],["_inner",3,[["validator",8]]]],[[["validatorserver",3,[["validator",8]]]],["validatorserver",3,[["validator",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["validatorserver",3,[["",26,[["debug",8],["validator",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["validator",8]]]],["validatorserver",3,[["validator",8]]]],[[["",0],["request",3,[["getcollectionsrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["validator",8]],["validatorserver",3,[["validator",8]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["validatorserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["request",3,[["readcausalrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["removecollectionsrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["validator",8]],["interceptedservice",3,[["validatorserver",3,[["validator",8]]]]]],null,[[["workertoprimaryclient",3]],["workertoprimaryclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["workertoprimaryclient",3,[["clone",8]]]],["workertoprimaryclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["workertoprimaryclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[],["workertoprimaryclient",3]],[[["workertoprimaryclient",3]],["workertoprimaryclient",3]],[[["workertoprimaryclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["workertoprimaryclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["workertoprimaryserver",3],["request",3]]],[[["",0],["request",3]]],[[["_inner",3,[["workertoprimary",8]]]],["_inner",3,[["workertoprimary",8]]]],[[["workertoprimaryserver",3,[["workertoprimary",8]]]],["workertoprimaryserver",3,[["workertoprimary",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["workertoprimaryserver",3,[["",26,[["debug",8],["workertoprimary",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["workertoprimary",8]]]],["workertoprimaryserver",3,[["workertoprimary",8]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["workertoprimary",8]],["workertoprimaryserver",3,[["workertoprimary",8]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["workertoprimaryserver",3],["context",3]],["poll",4,[["result",4]]]],null,[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["workertoprimary",8]],["interceptedservice",3,[["workertoprimaryserver",3,[["workertoprimary",8]]]]]],null,[[["workertoworkerclient",3]],["workertoworkerclient",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["workertoworkerclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["workertoworkerclient",3,[["clone",8]]]],["workertoworkerclient",3,[["clone",8]]]],[[["",0],["",0]]],[[],["future",8]],[[["workertoworkerclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[],["workertoworkerclient",3]],[[["workertoworkerclient",3]],["workertoworkerclient",3]],[[["workertoworkerclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[],["workertoworkerclient",3,[["interceptedservice",3]]]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["workertoworkerserver",3],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["_inner",3,[["workertoworker",8]]]],["_inner",3,[["workertoworker",8]]]],[[["workertoworkerserver",3,[["workertoworker",8]]]],["workertoworkerserver",3,[["workertoworker",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["_inner",3,[["debug",8]]],["formatter",3]],["result",6]],[[["workertoworkerserver",3,[["",26,[["debug",8],["workertoworker",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["arc",3,[["workertoworker",8]]]],["workertoworkerserver",3,[["workertoworker",8]]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["workertoworker",8]],["workertoworkerserver",3,[["workertoworker",8]]]],[[["workertoworkerserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],null,[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["workertoworker",8]],["interceptedservice",3,[["workertoworkerserver",3,[["workertoworker",8]]]]]]],"p":[[4,"CollectionErrorType"],[3,"MultiAddr"],[3,"ValidatorData"],[3,"CertificateDigest"],[3,"BatchDigest"],[3,"Batch"],[3,"Transaction"],[3,"CollectionError"],[3,"BatchMessage"],[3,"PublicKey"],[3,"CollectionRetrievalResult"],[3,"GetCollectionsRequest"],[3,"GetCollectionsResponse"],[3,"RemoveCollectionsRequest"],[3,"ReadCausalRequest"],[3,"ReadCausalResponse"],[3,"RoundsRequest"],[3,"RoundsResponse"],[3,"NodeReadCausalRequest"],[3,"NodeReadCausalResponse"],[3,"NewNetworkInfoRequest"],[3,"BincodeEncodedPayload"],[3,"Empty"],[4,"RetrievalResult"],[13,"Batch"],[13,"Error"],[3,"ConfigurationClient"],[3,"_Inner"],[3,"ConfigurationServer"],[8,"Configuration"],[3,"PrimaryToPrimaryClient"],[3,"_Inner"],[3,"PrimaryToPrimaryServer"],[8,"PrimaryToPrimary"],[3,"PrimaryToWorkerClient"],[3,"_Inner"],[3,"PrimaryToWorkerServer"],[8,"PrimaryToWorker"],[3,"ProposerClient"],[3,"_Inner"],[3,"ProposerServer"],[8,"Proposer"],[3,"TransactionsClient"],[3,"_Inner"],[3,"TransactionsServer"],[8,"Transactions"],[3,"ValidatorClient"],[3,"_Inner"],[3,"ValidatorServer"],[8,"Validator"],[3,"WorkerToPrimaryClient"],[3,"_Inner"],[3,"WorkerToPrimaryServer"],[8,"WorkerToPrimary"],[3,"WorkerToWorkerClient"],[3,"_Inner"],[8,"WorkerToWorker"],[3,"WorkerToWorkerServer"]]},\
"executor":{"doc":"","t":[13,13,17,16,3,8,8,3,13,13,13,13,6,6,13,4,6,16,13,13,13,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["ClientExecutionError","ConsensusConnectionDropped","DEFAULT_CHANNEL_SIZE","Error","ExecutionIndices","ExecutionState","ExecutionStateError","Executor","ExecutorConnectionDropped","NodeExecutionError","OnlyOneConsensusClientPermitted","SerializationError","SerializedTransaction","SerializedTransactionDigest","StoreError","SubscriberError","SubscriberResult","Transaction","UnexpectedConsensusIndex","UnexpectedProtocolMessage","UnexpectedWorkerId","ask_consensus_write_lock","bail","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_next_batch_index","check_next_transaction_index","clone","clone","clone_into","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","ensure","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","handle_consensus_transaction","init","init","init","into","into","into","into_request","into_request","into_request","load_execution_indices","ne","next","next_batch_index","next_certificate_index","next_transaction_index","node_error","partial_cmp","release_consensus_write_lock","serialize","skip_batch","skip_certificate","source","spawn","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0"],"q":["executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","executor::SubscriberError","","","","",""],"d":["","","Default inter-task channel size.","The error type to return in case something went wrong …","The state of the subscriber keeping track of the …","","Trait do separate execution errors in two categories: (i) …","A client subscribing to the consensus output and executing …","","","","","Convenience type representing a serialized transaction.","Convenience type representing a serialized transaction …","","","","The type of the transaction to process.","","","","Simple guardrail ensuring there is a single instance using …","","","","","","","","Check whether the input index is the next expected batch …","Check whether the input index is the next expected …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Execute the transaction and atomically persist the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Load the last consensus index from storage.","","Compute the next expected indices.","The index of the last batch we executed (used for …","The index of the latest consensus message we processed …","The index of the last transaction we executed (used for …","Whether the error is due to a fault in the authority (eg. …","","Tell the state that the caller instance is no longer using …","","Update the state to skip a batch.","Update the state to skip a certificate.","","Spawn a new client subscriber.","","","Convert the error message in to a string.","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,2,0,0,0,0,1,1,1,1,0,0,1,0,0,2,1,1,1,2,0,3,1,4,3,1,4,4,4,1,4,1,4,4,4,3,1,4,3,1,4,4,3,1,4,0,4,4,1,1,4,3,1,1,1,1,4,2,3,1,4,3,1,4,3,1,4,2,4,4,4,4,4,5,4,2,4,4,4,1,3,1,4,5,1,3,1,4,3,1,4,3,1,4,3,1,4,6,7,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bool",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["executionindices",3],["sequencenumber",6]],["bool",0]],[[["executionindices",3],["sequencenumber",6]],["bool",0]],[[["subscribererror",4]],["subscribererror",4]],[[["executionindices",3]],["executionindices",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["executionindices",3],["executionindices",3]],["ordering",4]],[[],["executionindices",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["executionindices",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["executionindices",3],["executionindices",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["subscribererror",4],["formatter",3]],["result",6]],[[["subscribererror",4],["formatter",3]],["result",6]],[[["executionindices",3],["formatter",3]],["result",6]],[[]],[[]],[[["storeerror",6]],["subscribererror",4]],[[["box",3,[["errorkind",4]]]],["subscribererror",4]],[[["executionstateerror",8]],["subscribererror",4]],[[]],[[["",0],["executionindices",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["executionindices",3],["executionindices",3]],["bool",0]],[[["executionindices",3],["usize",0],["usize",0]]],null,null,null,[[["",0]],["bool",0]],[[["executionindices",3],["executionindices",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["executionindices",3]],["result",4]],[[["executionindices",3],["usize",0]]],[[["executionindices",3]]],[[["subscribererror",4]],["option",4,[["error",8]]]],[[["sharedcommittee",6],["store",3,[["batchdigest",3],["serializedbatchmessage",6]]],["arc",3],["receiver",3,[["consensusoutput",3]]],["sender",3,[["consensussyncrequest",3]]],["sender",3]],["future",8]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null],"p":[[4,"SubscriberError"],[8,"ExecutionState"],[3,"Executor"],[3,"ExecutionIndices"],[8,"ExecutionStateError"],[13,"StoreError"],[13,"UnexpectedWorkerId"],[13,"UnexpectedConsensusIndex"],[13,"SerializationError"],[13,"NodeExecutionError"],[13,"ClientExecutionError"]]},\
"network":{"doc":"","t":[3,18,18,18,18,18,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelHandler","DEFAULT_INITIAL_RETRY_INTERVAL","DEFAULT_MAX_RETRY_INTERVAL","DEFAULT_RETRYING_MAX_ELAPSED_TIME","DEFAULT_RETRY_DELAY_RAND_FACTOR","DEFAULT_RETRY_INTERVAL_MULTIPLIER","PrimaryNetwork","PrimaryToWorkerNetwork","RetryConfig","WorkerNetwork","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","broadcast","clone","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","init","init","init","init","init","initial_retry_interval","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","lucky_broadcast","lucky_broadcast","max_retry_interval","poll","retry","retry_delay_multiplier","retry_delay_rand_factor","retrying_max_elapsed_time","send","send","send","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","unreliable_broadcast","unreliable_send","unreliable_send","unreliable_send_message","vzip","vzip","vzip","vzip","vzip"],"q":["network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Default for <code>RetryConfig::max_retry_interval</code> (500 ms).","Default for <code>RetryConfig::max_retry_interval</code> (15 s).","Default for <code>RetryConfig::retrying_max_elapsed_time</code> (30 s).","Default for <code>RetryConfig::retry_delay_rand_factor</code> (0.3).","Default for <code>RetryConfig::retry_delay_multiplier</code> (x1.5).","","","Retry configurations for establishing connections and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","The initial retry interval.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Pick a few addresses at random (specified by <code>nodes</code>) and …","Pick a few addresses at random (specified by <code>nodes</code>) and …","The maximum value of the back off period. Once the retry …","","","The value to multiply the current interval with for each …","The randomization factor to use for creating a range …","The maximum elapsed time after instantiating","","","","","","","","","","","","","","","","","","","","","Pick a few addresses at random (specified by <code>nodes</code>) and …","","","","","","","",""],"i":[0,1,1,1,1,1,0,0,0,0,2,3,4,1,5,2,3,4,1,5,2,3,4,1,1,2,3,4,1,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,5,1,5,2,3,4,1,5,2,3,4,1,5,1,2,3,4,1,5,5,2,3,4,1,5,2,3,1,5,1,1,1,1,2,3,4,1,2,3,4,1,5,2,3,4,1,5,5,2,3,4,1,5,2,2,3,3,2,3,4,1,5],"f":[null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["primarynetwork",3],["vec",3,[["multiaddr",3]]],["primarymessage",4]],["future",8]],[[["workernetwork",3],["vec",3,[["multiaddr",3]]],["workermessage",4]],["future",8]],[[["primarytoworkernetwork",3],["vec",3,[["multiaddr",3]]],["primaryworkermessage",4]],["future",8]],[[["retryconfig",3]],["retryconfig",3]],[[["",0],["",0]]],[[],["primarynetwork",3]],[[],["workernetwork",3]],[[],["primarytoworkernetwork",3]],[[],["retryconfig",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["cancelhandler",3]]],[[["retryconfig",3],["formatter",3]],["result",6]],[[["cancelhandler",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["primarynetwork",3],["vec",3,[["multiaddr",3]]],["primarymessage",4],["usize",0]],["future",8]],[[["workernetwork",3],["vec",3,[["multiaddr",3]]],["workermessage",4],["usize",0]],["future",8]],null,[[["pin",3,[["cancelhandler",3]]],["context",3]],["poll",4]],[[["retryconfig",3]],["future",8]],null,null,null,[[["primarynetwork",3],["multiaddr",3],["primarymessage",4]],["future",8]],[[["workernetwork",3],["multiaddr",3],["workermessage",4]],["future",8]],[[["primarytoworkernetwork",3],["multiaddr",3],["primaryworkermessage",4]],["future",8]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["primarynetwork",3],["vec",3,[["multiaddr",3]]],["primarymessage",4]],["future",8]],[[["primarynetwork",3],["multiaddr",3],["primarymessage",4]],["future",8]],[[["workernetwork",3],["multiaddr",3],["workermessage",4]],["future",8]],[[["workernetwork",3],["multiaddr",3],["into",8,[["bincodeencodedpayload",3]]]],["future",8]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"RetryConfig"],[3,"PrimaryNetwork"],[3,"WorkerNetwork"],[3,"PrimaryToWorkerNetwork"],[3,"CancelHandler"]]},\
"node":{"doc":"","t":[18,3,3,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["CHANNEL_CAPACITY","Node","NodeStorage","batch_store","borrow","borrow","borrow_mut","borrow_mut","certificate_store","consensus_store","deref","deref","deref_mut","deref_mut","drop","drop","from","from","header_store","init","init","into","into","into_request","into_request","payload_store","reopen","spawn_primary","spawn_workers","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The default channel capacity.","High level functions to spawn the primary and the workers.","All the data stores of the node.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Open or reopen all the storage of the node.","Spawn a new primary. Optionally also spawn the consensus …","Spawn a specified number of workers.","","","","","","","",""],"i":[1,0,0,2,2,1,2,1,2,2,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,2,1,1,2,1,2,1,2,1,2,1],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,[[["asref",8,[["path",3]]]],["nodestorage",3,[["verifyingkey",8]]]],[[["sharedcommittee",6],["nodestorage",3],["parameters",3],["bool",0],["arc",3],["sender",3]],["future",8]],[[["verifyingkey",8],["vec",3,[["workerid",6]]],["sharedcommittee",6,[["verifyingkey",8]]],["nodestorage",3],["parameters",3]],["vec",3,[["joinhandle",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[3,"Node"],[3,"NodeStorage"]]},\
"primary":{"doc":"","t":[4,2,3,4,3,17,2,13,3,13,13,13,13,13,13,2,13,13,2,6,3,4,13,13,13,13,13,4,4,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,6,3,4,13,4,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,3,4,8,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,4,3,3,13,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["BlockCommand","BlockHeader","BlockRemover","BlockRemoverCommand","BlockWaiter","CHANNEL_CAPACITY","CertificatesResponse","Cleanup","DeleteBatchMessage","DeleteBatches","DeletedBatches","Error","ErrorWhileDeletingBatches","GetBlock","GetBlocks","MockBlockSynchronizer","OthersBatch","OurBatch","PayloadAvailabilityResponse","PayloadToken","Primary","PrimaryWorkerMessage","RemoveBlocks","RequestBatch","RequestedBatch","RequestedBatchNotFound","Synchronize","WorkerPrimaryError","WorkerPrimaryMessage","block_synchronizer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","ids","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ne","ne","serialize","serialize","serialize","spawn","spawn","spawn","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","id","ids","sender","sender","ids","sender","0","0","0","0","1","0","0","0","0","0","0","0","1","1","1","BlockHeader","BlockSynchronizeResult","BlockSynchronizer","Command","NoResponse","SyncError","SynchronizeBlockHeaders","SynchronizeBlockPayload","Timeout","block_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fetched_from_storage","fmt","fmt","fmt","fmt","from","from","from","from","handler","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","mock","responses","run","spawn","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","block_ids","certificates","respond_to","respond_to","block_id","block_id","BlockDeliveryTimeout","BlockNotFound","BlockSynchronizerHandler","Error","Handler","Internal","PayloadSyncError","block_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_and_synchronize_block_headers","get_and_synchronize_block_headers","get_block_headers","get_block_headers","init","init","into","into","into_request","into_request","new","synchronize_block_payloads","synchronize_block_payloads","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","block_id","block_id","block_id","block_id","error","MockBlockSynchronizer","assert_expectations","borrow","borrow_mut","deref","deref_mut","drop","expect_synchronize_block_headers","expect_synchronize_block_payload","from","init","into","into_request","new","try_from","try_into","type_id","vzip","0","CertificatesResponse","CertificatesResponseError","PayloadAvailabilityResponse","RequestID","ValidationError","available_block_ids","block_ids","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificates","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","from_iter","get_hash","hash","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","ne","ne","new","partial_cmp","request_id","request_id","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_certificates","vzip","vzip","vzip","vzip","invalid_certificates","name"],"q":["primaryprimary::BlockCommand","","","","primary::BlockRemoverCommand","","primary::PrimaryWorkerMessage","","","","","primary::WorkerPrimaryError","","primary::WorkerPrimaryMessage","","","","","","","","primary::block_synchronizer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","primary::block_synchronizer::Command","","","","primary::block_synchronizer::SyncError","","primary::block_synchronizer::handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","primary::block_synchronizer::handler::Error","","","","","primary::block_synchronizer::mock","","","","","","","","","","","","","","","","","","primary::block_synchronizer::responses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","primary::block_synchronizer::responses::CertificatesResponseError",""],"d":["","","BlockRemover is responsible for removing blocks identified …","","BlockWaiter is responsible for fetching the block data …","The default channel capacity for each channel of the …","","The primary indicates a round update.","","Delete the batches, dictated from the provided vector of …","When batches are successfully deleted, this message is …","An error has been returned by worker","","GetBlock dictates retrieving the block data (vector of …","GetBlocks will initiate the process of retrieving the …","","The worker indicates it received a batch’s digest from …","The worker indicates it sealed a new batch.","","","","The messages sent by the primary to its workers.","","The primary requests a batch from the worker","The worker sends a requested batch","","The primary indicates that the worker need to sync the …","","The messages sent by the workers to their primary.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A request to synchronize and output the block headers This …","A request to synchronize the payload (batches) of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","It designates whether the requested quantity (either the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper struct to allow us access the block_synchronizer …","The errors returned by the Handler. It translates also the …","Handler defines an interface to allow us access the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","It retrieves the requested blocks via the …","The method will return a separate result for each …","It retrieves the requested blocks via the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Synchronizes the block payload for the provided …","","","","","","","","","","","","","","","","","A mock helper for the BlockSynchronizer to help us mock …","Asserts that all the expectations have been fulfilled and …","","","","","","A simple method that allow us to mock responses for the …","A method that allow us to mock responses for the …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This method does two things:","","","","","",""],"i":[0,0,0,0,0,0,0,1,0,1,2,2,3,4,4,0,2,2,0,0,0,0,5,1,2,3,1,0,0,0,6,7,1,8,5,9,4,2,3,6,7,1,8,5,9,4,2,3,9,3,9,3,9,6,7,1,8,5,9,4,2,3,6,7,1,8,5,9,4,2,3,1,2,3,6,7,1,8,5,9,4,2,3,2,3,1,5,9,4,2,3,3,6,7,1,8,5,9,4,2,3,9,6,7,1,8,5,9,4,2,3,6,7,1,8,5,9,4,2,3,6,7,1,8,5,9,4,2,3,2,3,1,2,3,6,7,8,9,3,3,6,7,1,8,5,9,4,2,3,6,7,1,8,5,9,4,2,3,6,7,1,8,5,9,4,2,3,6,7,1,8,5,9,4,2,3,10,11,10,11,12,12,13,14,15,16,13,17,18,19,20,21,22,23,19,20,21,0,0,0,0,24,0,25,25,24,24,26,27,25,24,26,27,25,24,27,27,24,27,24,26,27,25,24,26,27,25,24,26,27,25,24,27,27,25,24,24,26,27,25,24,0,26,27,25,24,26,27,25,24,26,27,25,24,0,0,26,26,27,24,24,26,27,25,24,26,27,25,24,26,27,25,24,26,27,25,24,28,29,28,29,30,31,32,32,0,0,0,32,32,32,33,32,33,32,32,32,33,32,33,32,33,32,32,32,33,32,34,33,34,33,33,32,33,32,33,32,33,34,33,32,32,33,32,33,32,33,32,33,32,35,36,37,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,0,0,0,0,41,42,42,40,42,43,41,40,42,43,41,43,40,42,43,41,40,42,43,41,40,40,40,42,43,41,40,42,43,41,40,42,43,41,40,41,40,40,40,42,43,41,41,40,42,43,41,42,43,40,40,40,40,40,42,43,41,40,42,43,41,40,42,43,41,40,41,40,40,42,43,40,42,43,41,40,41,40,42,43,41,40,42,43,41,40,42,43,41,43,40,42,43,41,44,44],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["deletebatchmessage",3]],["deletebatchmessage",3]],[[["workerprimaryerror",4]],["workerprimaryerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["deletebatchmessage",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["primaryworkermessage",4]]]],[[],["result",4,[["workerprimarymessage",4]]]],[[],["result",4,[["workerprimaryerror",4]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["workerprimarymessage",4],["workerprimarymessage",4]],["bool",0]],[[["workerprimaryerror",4],["workerprimaryerror",4]],["bool",0]],[[["primaryworkermessage",4],["formatter",3]],["result",4,[["error",3]]]],[[["blockremovercommand",4],["formatter",3]],["result",6]],[[["deletebatchmessage",3],["formatter",3]],["result",6]],[[["blockcommand",4],["formatter",3]],["result",6]],[[["workerprimarymessage",4],["formatter",3]],["result",6]],[[["workerprimaryerror",4],["formatter",3]],["result",6]],[[["workerprimaryerror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["workerprimarymessage",4],["workerprimarymessage",4]],["bool",0]],[[["workerprimaryerror",4],["workerprimaryerror",4]],["bool",0]],[[["primaryworkermessage",4]],["result",4]],[[["workerprimarymessage",4]],["result",4]],[[["workerprimaryerror",4]],["result",4]],[[["verifyingkey",8],["sharedcommittee",6,[["verifyingkey",8]]],["store",3,[["certificatedigest",3],["certificate",3,[["verifyingkey",8]]]]],["store",3,[["headerdigest",3],["header",3,[["verifyingkey",8]]]]],["store",3,[["payloadtoken",6]]],["option",4,[["arc",3,[["dag",3,[["verifyingkey",8]]]]]]],["primarytoworkernetwork",3],["receiver",3,[["blockremovercommand",4]]],["receiver",3,[["result",4,[["deletebatchmessage",3],["deletebatchmessage",3]]]]]],["joinhandle",3]],[[["verifyingkey",8],["sharedcommittee",6,[["verifyingkey",8]]],["receiver",3,[["blockcommand",4]]],["receiver",3,[["result",4,[["batchmessage",3],["batchmessageerror",3]]]]],["arc",3,[["",26,[["handler",8,[["verifyingkey",8]]],["send",8],["sync",8]]]]]]],[[["verifyingkey",8],["",26,[["signer",8],["send",8]]],["sharedcommittee",6,[["verifyingkey",8]]],["parameters",3],["store",3,[["headerdigest",3],["header",3,[["verifyingkey",8]]]]],["store",3,[["certificatedigest",3],["certificate",3,[["verifyingkey",8]]]]],["store",3,[["payloadtoken",6]]],["sender",3,[["certificate",3,[["verifyingkey",8]]]]],["receiver",3,[["certificate",3,[["verifyingkey",8]]]]],["option",4,[["arc",3,[["dag",3,[["verifyingkey",8]]]]]]]],["joinhandle",3]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["syncerror",4]],["certificatedigest",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["blockheader",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],["blockheader",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["syncerror",4]],["syncerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["blockheader",3,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["command",4,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["syncerror",4],["formatter",3]],["result",6]],[[["syncerror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,[[["blocksynchronizer",3,[["verifyingkey",8]]]],["future",8]],[[["verifyingkey",8],["sharedcommittee",6,[["verifyingkey",8]]],["receiver",3,[["command",4,[["verifyingkey",8]]]]],["receiver",3,[["certificatesresponse",3,[["verifyingkey",8]]]]],["receiver",3,[["payloadavailabilityresponse",3,[["verifyingkey",8]]]]],["primarynetwork",3],["store",3,[["payloadtoken",6]]],["store",3,[["certificatedigest",3],["certificate",3,[["verifyingkey",8]]]]],["blocksynchronizerparameters",3]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["error",4]],["certificatedigest",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["vec",3,[["certificatedigest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["blocksynchronizerhandler",3,[["verifyingkey",8]]],["vec",3,[["certificatedigest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["vec",3,[["certificatedigest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["blocksynchronizerhandler",3,[["verifyingkey",8]]],["vec",3,[["certificatedigest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["sender",3,[["command",4,[["verifyingkey",8]]]]],["sender",3,[["primarymessage",4,[["verifyingkey",8]]]]],["store",3,[["certificatedigest",3],["certificate",3,[["verifyingkey",8]]]]],["duration",3]],["blocksynchronizerhandler",3,[["verifyingkey",8]]]],[[["",0],["vec",3,[["certificate",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["blocksynchronizerhandler",3,[["verifyingkey",8]]],["vec",3,[["certificate",3,[["verifyingkey",8]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["mockblocksynchronizer",3,[["verifyingkey",8]]]],["future",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["mockblocksynchronizer",3,[["verifyingkey",8]]],["vec",3,[["certificatedigest",3]]],["vec",3,[["blocksynchronizeresult",6,[["blockheader",3,[["verifyingkey",8]]]]]]],["u32",0]],["future",8]],[[["mockblocksynchronizer",3,[["verifyingkey",8]]],["vec",3,[["certificatedigest",3]]],["vec",3,[["blocksynchronizeresult",6,[["blockheader",3,[["verifyingkey",8]]]]]]],["u32",0]],["future",8]],[[]],[[],["usize",0]],[[]],[[],["request",3]],[[["receiver",3,[["command",4,[["verifyingkey",8]]]]]],["mockblocksynchronizer",3,[["verifyingkey",8]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,[[["payloadavailabilityresponse",3,[["verifyingkey",8]]]],["vec",3,[["certificatedigest",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["requestid",3]],["requestid",3]],[[["payloadavailabilityresponse",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],["payloadavailabilityresponse",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["certificatesresponse",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],["certificatesresponse",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["certificatesresponseerror",4,[["",26,[["clone",8],["verifyingkey",8]]]]]],["certificatesresponseerror",4,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["requestid",3],["requestid",3]],["ordering",4]],[[],["requestid",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["requestid",3],["requestid",3]],["bool",0]],[[["certificatesresponseerror",4,[["",26,[["partialeq",8],["verifyingkey",8]]]]],["certificatesresponseerror",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["requestid",3],["formatter",3]],["result",6]],[[["requestid",3],["formatter",3]],["result",6]],[[["payloadavailabilityresponse",3,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["certificatesresponse",3,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["certificatesresponseerror",4,[["verifyingkey",8]]],["formatter",3]],["result",6]],[[["certificatesresponseerror",4,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[["intoiterator",8]],["requestid",3]],[[["intoiterator",8]],["requestid",3]],[[["",0],["",0]],["u64",0]],[[["requestid",3],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["requestid",3],["requestid",3]],["bool",0]],[[["certificatesresponseerror",4,[["",26,[["partialeq",8],["verifyingkey",8]]]]],["certificatesresponseerror",4]],["bool",0]],[[],["requestid",3]],[[["requestid",3],["requestid",3]],["option",4,[["ordering",4]]]],[[["payloadavailabilityresponse",3,[["verifyingkey",8]]]],["requestid",3]],[[["certificatesresponse",3,[["verifyingkey",8]]]],["requestid",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["certificatesresponse",3,[["verifyingkey",8]]],["committee",3]],["result",4,[["vec",3,[["certificate",3,[["verifyingkey",8]]]]],["certificatesresponseerror",4,[["verifyingkey",8]]]]]],[[]],[[]],[[]],[[]],null,null],"p":[[4,"PrimaryWorkerMessage"],[4,"WorkerPrimaryMessage"],[4,"WorkerPrimaryError"],[4,"BlockCommand"],[4,"BlockRemoverCommand"],[3,"BlockRemover"],[3,"BlockWaiter"],[3,"Primary"],[3,"DeleteBatchMessage"],[13,"GetBlock"],[13,"GetBlocks"],[13,"RemoveBlocks"],[13,"Synchronize"],[13,"Cleanup"],[13,"RequestBatch"],[13,"DeleteBatches"],[13,"RequestedBatchNotFound"],[13,"ErrorWhileDeletingBatches"],[13,"OurBatch"],[13,"OthersBatch"],[13,"RequestedBatch"],[13,"DeletedBatches"],[13,"Error"],[4,"SyncError"],[4,"Command"],[3,"BlockSynchronizer"],[3,"BlockHeader"],[13,"SynchronizeBlockHeaders"],[13,"SynchronizeBlockPayload"],[13,"NoResponse"],[13,"Timeout"],[4,"Error"],[3,"BlockSynchronizerHandler"],[8,"Handler"],[13,"BlockNotFound"],[13,"Internal"],[13,"BlockDeliveryTimeout"],[13,"PayloadSyncError"],[3,"MockBlockSynchronizer"],[3,"RequestID"],[4,"CertificatesResponseError"],[3,"PayloadAvailabilityResponse"],[3,"CertificatesResponse"],[13,"ValidationError"]]},\
"test_utils":{"doc":"","t":[17,17,17,3,3,3,3,5,5,5,5,11,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,5,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,5,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11],"n":["CERTIFICATES_CF","HEADERS_CF","PAYLOAD_CF","PrimaryToPrimaryMockServer","PrimaryToWorkerMockServer","WorkerToPrimaryMockServer","WorkerToWorkerMockServer","batch","batch_digest","batch_with_transactions","batches","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","client_batch_request","committee","committee_from_keys","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","digest_batch","drop","drop","drop","drop","fixture_batch_with_transactions","fixture_header","fixture_header_builder","fixture_header_with_payload","fixture_payload","from","from","from","from","header","headers","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","keys","make_certificates","make_consensus_store","make_optimal_certificates","make_optimal_signed_certificates","make_signed_certificates","mock_certificate","mock_committee","mock_signed_certificate","open_batch_store","resolve_name_and_committee","send_message","send_message","send_message","send_message","serialize_batch_message","serialized_batch","spawn","spawn","spawn","spawn","temp_dir","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","votes","vzip","vzip","vzip","vzip"],"q":["test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Batches","","","generate multiple fixture batches. The number of generated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Keys, Committee","","","","","","","Headers, Votes, Certificates","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,0,4,0,0,1,2,3,4,1,2,3,4,0,1,2,3,4,0,0,0,0,0,1,2,3,4,0,0,1,2,3,4,1,2,3,4,1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,0,0,1,2,3,4,0,0,1,2,3,4,1,2,3,4,1,2,3,4,0,1,2,3,4],"f":[null,null,null,null,null,null,null,[[],["batch",3]],[[],["batchdigest",3]],[[["usize",0]],["batch",3]],[[["usize",0]],["vec",3,[["batch",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["header",3]],["certificate",3,[["ed25519publickey",3]]]],[[["workertoworkermockserver",3],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["into",8,[["option",4,[["u64",0]]]]]],["sharedcommittee",6,[["ed25519publickey",3]]]],[[],["sharedcommittee",6,[["ed25519publickey",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["batch",3]],["batchdigest",3]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["u32",0]],["batch",3]],[[],["header",3,[["ed25519publickey",3]]]],[[],["headerbuilder",3,[["ed25519publickey",3]]]],[[["u8",0]],["header",3,[["ed25519publickey",3]]]],[[["u8",0]],["btreemap",3,[["batchdigest",3],["workerid",6]]]],[[]],[[]],[[]],[[]],[[],["header",3,[["ed25519publickey",3]]]],[[],["vec",3,[["header",3,[["ed25519publickey",3]]]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["into",8,[["option",4,[["u64",0]]]]]],["vec",3,[["ed25519keypair",3]]]],[[["rangeinclusive",3,[["round",6]]],["btreeset",3],["f64",0]]],[[["path",3]],["arc",3,[["consensusstore",3,[["ed25519publickey",3]]]]]],[[["rangeinclusive",3,[["round",6]]],["btreeset",3]]],[[["rangeinclusive",3,[["round",6]]],["btreeset",3]]],[[["rangeinclusive",3,[["round",6]]],["btreeset",3],["f64",0]]],[[["ed25519publickey",3],["round",6],["btreeset",3,[["certificatedigest",3]]]]],[[],["sharedcommittee",6,[["ed25519publickey",3]]]],[[["ed25519publickey",3],["round",6],["btreeset",3,[["certificatedigest",3]]]]],[[],["store",3,[["batchdigest",3],["serializedbatchmessage",6]]]],[[]],[[["primarytoprimarymockserver",3],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["workertoprimarymockserver",3],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["primarytoworkermockserver",3],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["workertoworkermockserver",3],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["batch",3]],["vec",3,[["u8",0]]]],[[],["vec",3,[["u8",0]]]],[[["multiaddr",3]],["receiver",3,[["bincodeencodedpayload",3]]]],[[["multiaddr",3]],["receiver",3,[["bincodeencodedpayload",3]]]],[[["multiaddr",3]],["receiver",3,[["bincodeencodedpayload",3]]]],[[["multiaddr",3]],["receiver",3,[["bincodeencodedpayload",3]]]],[[],["pathbuf",3]],[[],["transaction",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["header",3]],["vec",3,[["vote",3,[["ed25519publickey",3]]]]]],[[]],[[]],[[]],[[]]],"p":[[3,"PrimaryToPrimaryMockServer"],[3,"WorkerToPrimaryMockServer"],[3,"PrimaryToWorkerMockServer"],[3,"WorkerToWorkerMockServer"]]},\
"types":{"doc":"","t":[12,12,12,3,13,13,3,3,13,3,3,3,13,13,3,3,4,13,3,4,6,6,3,13,3,3,13,13,13,13,3,16,3,13,4,13,3,13,8,3,3,3,13,4,3,13,13,3,3,3,13,3,4,3,13,3,3,3,3,13,13,4,8,3,3,8,3,3,4,8,3,3,3,3,3,3,13,4,6,3,3,6,6,13,6,13,13,6,3,8,3,3,13,13,8,3,3,3,3,13,3,4,8,3,3,8,3,3,11,11,11,11,11,11,11,11,12,12,11,11,12,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,10,11,12,11,12,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,10,11,11,11,11,10,11,12,12,11,11,12,12,12,10,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,6,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12],"n":["0","0","0","Batch","Batch","Batch","BatchDigest","BatchDigestProto","BatchError","BatchMessage","BatchMessageProto","BatchProto","BatchRequest","BatchTimeout","BincodeEncodedPayload","BlockError","BlockErrorKind","BlockNotFound","BlockRemoverError","BlockRemoverErrorKind","BlockRemoverResult","BlockResult","Certificate","Certificate","CertificateDigest","CertificateDigestProto","CertificatesBatchRequest","CertificatesBatchResponse","CertificatesRequest","Cleanup","ClientBatchRequest","ClientBatchRequestStream","CollectionError","CollectionError","CollectionErrorType","CollectionNotFound","CollectionRetrievalResult","CollectionTimeout","Configuration","ConfigurationClient","ConfigurationServer","ConsensusStore","DeleteBatches","DigestError","Empty","Error","Failed","GetCollectionsRequest","GetCollectionsResponse","Header","Header","HeaderBuilder","HeaderBuilderError","HeaderDigest","InvalidArgumentError","MultiAddrProto","NewNetworkInfoRequest","NodeReadCausalRequest","NodeReadCausalResponse","PayloadAvailabilityRequest","PayloadAvailabilityResponse","PrimaryMessage","PrimaryToPrimary","PrimaryToPrimaryClient","PrimaryToPrimaryServer","PrimaryToWorker","PrimaryToWorkerClient","PrimaryToWorkerServer","PrimaryWorkerMessage","Proposer","ProposerClient","ProposerServer","PublicKeyProto","ReadCausalRequest","ReadCausalResponse","RemoveCollectionsRequest","RequestBatch","RetrievalResult","Round","RoundsRequest","RoundsResponse","SequenceNumber","SerializedBatchMessage","StorageFailure","StoreResult","Synchronize","Timeout","Transaction","TransactionProto","Transactions","TransactionsClient","TransactionsServer","UninitializedField","ValidationError","Validator","ValidatorClient","ValidatorData","ValidatorServer","Vote","Vote","VoteDigest","WorkerMessage","WorkerToPrimary","WorkerToPrimaryClient","WorkerToPrimaryServer","WorkerToWorker","WorkerToWorkerClient","WorkerToWorkerServer","accept_gzip","accept_gzip","accept_gzip","accept_gzip","accept_gzip","accept_gzip","accept_gzip","accept_gzip","address","address","arbitrary_with","author","author","author","bail","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","bytes","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","client_batch_request","client_batch_request","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","collection_id","collection_ids","collection_ids","collection_ids","collection_ids","compressible","connect","connect","connect","connect","connect","connect","connect","connect","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","digest","digest","digest","digest","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","ensure","epoch_number","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","error","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arc","from_arc","from_arc","from_arc","from_arc","from_arc","from_arc","from_arc","from_i32","genesis","get_collections","get_collections","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","header","id","id","id","id","id","id","id","ids","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_valid","merge","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_network_info","new_network_info","newest_round","node_read_causal","node_read_causal","oldest_round","origin","origin","parents","parents","parents","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload","payload","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","public_key","public_key","public_key","read_causal","read_causal","read_last_committed","read_last_consensus_index","read_sequenced_certificates","remove_collections","remove_collections","result","retrieval_result","round","round","round","round","round","rounds","rounds","send_gzip","send_gzip","send_gzip","send_gzip","send_gzip","send_gzip","send_gzip","send_gzip","send_message","send_message","send_message","send_message","send_message","send_message","send_message","send_message","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialized_batch_digest","set_error","signature","signature","signature","stake_weight","submit_transaction","submit_transaction","submit_transaction_stream","submit_transaction_stream","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction","transaction","transactions","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validators","verify","verify","verify","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_interceptor","with_payload_batch","write_consensus_state","0","0","0","0","0","0","0","1","certificate_ids","certificate_ids","certificates","from","from","payload_availability","requestor","requestor","0","0","0","0","1","0","0","0","0","1","AuthorityReuse","CertificateRequiresQuorum","DagError","DagResult","HeaderRequiresQuorum","InvalidHeaderId","InvalidSignature","MalformedHeader","SerializationError","StoreError","TooOld","UnexpectedVote","UnknownAuthority","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","1"],"q":["typestypes::DigestError","types::HeaderBuilderError","","types::PrimaryMessage","","","","","","","","","","","","","types::PrimaryWorkerMessage","","","","","types::RetrievalResult","","types::WorkerMessage","","","types::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","types::error::DagError","","","","","","","","",""],"d":["","","","","","Used by workers to send a new batch or to reply to a batch …","","","","","","","Used by workers to request batches.","","A bincode encoded payload. This is intended to be used in …","","","","","","","","","","","","","","","The primary indicates a round update.","","Server streaming response type for the ClientBatchRequest …","","","","","","","Generated trait containing gRPC methods that should be …","","","The persistent storage of the sequencer.","Delete the batches, dictated from the provided vector of …","","Empty message for when we don’t have anything to return","","","","","","","Builder for <code>Header</code>.","Error type for HeaderBuilder","","","","","","","","","","Generated trait containing gRPC methods that should be …","The primary-to-primary interface","The primary-to-primary interface","Generated trait containing gRPC methods that should be …","The primary-to-worker interface","The primary-to-worker interface","The messages sent by the primary to its workers.","Generated trait containing gRPC methods that should be …","","","","","","","The primary requests a batch from the worker","","The round number.","","","A global sequence number assigned to every certificate.","Indicates a serialized <code>WorkerMessage::Batch</code> message.","","Convenience type to propagate store errors.","The primary indicates that the worker need to sync the …","","","","Generated trait containing gRPC methods that should be …","","","Uninitialized field","Custom validation error","Generated trait containing gRPC methods that should be …","The consensus to mempool interface for validator actions.","","The consensus to mempool interface for validator actions.","","","","The message exchanged between workers.","Generated trait containing gRPC methods that should be …","The worker-to-primary interface","The worker-to-primary interface","Generated trait containing gRPC methods that should be …","The worker-to-worker interface","The worker-to-worker interface","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</code>.","Enable decompressing responses with <code>gzip</coderequests a number of batches that the service then streams …","requests a number of batches that the service then streams …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collection for which a sequence of related collections …","List of collections to be retreived.","List of collections to be removed.","Resulting sequence of collections from DAG walk.","Resulting sequence of collections from DAG walk.","","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …","Attempt to create a new client by connecting to a given …eturns the enum value of <code>error</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Converts an <code>i32</code> to a <code>CollectionErrorType</code>, or <code>None</code> if <code>value</code> …","","Returns collection contents for each requested collection.","Returns collection contents for each requested collection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>CollectionErrorType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new consensus store structure by using already …","","","","","","","","","","","","","","","","","","","","","Signals a change in networking info","Signals a change in networking info","","Returns the read_causal obtained by starting the DAG walk …","Returns the read_causal obtained by starting the DAG walk …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns collections along a DAG walk with a well-defined …","Returns collections along a DAG walk with a well-defined …","Load the last committed round of each validator.","Load the last (ie. the highest) consensus index associated …","Load the certificate digests sequenced at a specific …","Expunges collections from the mempool.","Expunges collections from the mempool.","TODO: Revisit this for spec compliance. List of retrieval …","","","","","","","","","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Compress requests with <code>gzip</code>.","Sends a message","Sends a message","Sends a worker message","Sends a message","Sends a message","Sends a worker message","Sends a message","Sends a message","","","","","","","","","","","","","Hashes a serialized batch message without deserializing it …","Sets <code>error</code> to the provided enum value.","","","","","Submit a Transactions","Submit a Transactions","Submit a Transactions","Submit a Transactionsersist the consensus state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[1,2,3,0,4,5,0,0,6,0,0,0,5,6,0,0,0,6,0,0,0,0,0,7,0,0,7,7,7,8,0,9,0,10,0,10,0,10,0,0,0,0,8,0,0,4,11,0,0,0,7,0,0,0,12,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,11,0,8,11,0,0,0,0,0,13,13,0,0,0,0,0,7,0,0,0,0,0,0,0,0,14,15,16,17,18,19,20,21,22,23,1,24,25,26,0,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,24,41,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,35,36,37,38,39,40,22,41,23,42,43,44,45,46,47,48,49,50,51,52,53,54,9,18,1,2,25,28,26,29,30,31,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,1,2,25,28,26,29,30,31,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,2,28,29,31,10,46,43,45,47,51,30,14,15,16,17,18,19,20,21,1,2,24,25,28,29,30,31,32,35,36,37,38,39,40,22,41,23,42,43,44,45,46,47,48,49,50,51,52,53,54,10,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,1,2,25,28,26,29,30,31,7,8,53,5,3,1,25,26,30,35,36,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,4,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,0,52,1,2,25,28,26,29,30,31,32,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,1,2,28,29,31,10,0,39,33,34,39,1,2,2,13,13,25,25,28,28,26,29,29,30,31,31,7,8,32,33,11,6,6,34,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,12,27,63,1,1,2,2,24,13,13,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,35,36,36,37,37,38,38,39,39,40,40,22,41,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,53,54,10,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,55,56,57,58,59,60,61,62,10,30,64,14,2,28,29,31,10,2,28,29,31,10,30,24,25,26,32,34,39,40,33,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,10,4,1,2,28,29,31,32,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,27,2,25,26,31,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,65,16,49,66,15,49,30,26,24,30,25,2,28,29,31,10,24,25,53,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,23,48,50,64,14,27,27,27,64,14,44,42,24,30,25,26,50,66,15,14,15,16,17,18,19,20,21,67,68,9,69,17,18,19,20,1,2,25,28,26,29,30,31,7,8,5,3,0,39,24,25,26,23,70,21,70,21,1,2,25,28,26,29,30,31,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,2,13,25,28,29,31,6,34,12,37,38,32,40,27,1,2,24,13,25,28,26,29,30,31,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,52,25,26,30,30,27,1,2,24,13,25,28,26,29,30,31,7,8,32,33,11,6,34,35,36,37,38,39,40,22,41,23,42,4,43,44,45,46,47,48,49,50,51,52,53,54,10,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,5,3,12,14,15,16,17,18,19,20,21,55,56,57,58,59,60,61,62,24,27,71,72,73,74,75,76,77,77,78,79,80,80,81,81,78,79,82,83,84,85,82,86,87,88,89,89,90,90,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,92,93,94,95,96,97,98,99,99],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["validatorclient",3]],["validatorclient",3]],[[["proposerclient",3]],["proposerclient",3]],[[["configurationclient",3]],["configurationclient",3]],[[["primarytoprimaryclient",3]],["primarytoprimaryclient",3]],[[["workertoworkerclient",3]],["workertoworkerclient",3]],[[["workertoprimaryclient",3]],["workertoprimaryclient",3]],[[["primarytoworkerclient",3]],["primarytoworkerclient",3]],[[["transactionsclient",3]],["transactionsclient",3]],null,null,[[]],[[["headerbuilder",3,[["verifyingkey",8]]],["verifyingkey",8]],["headerbuilder",3,[["verifyingkey",8]]]],null,null,nullheaderbuilder",3,[["verifyingkey",8]]],["",0]],["result",4,[["header",3,[["verifyingkey",8]]],["error",3]]]],null,[[["validatorserver",3],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["proposerserver",3],["request",3]]],[[["",0],["request",3]]],[[["configurationserver",3],["request",3]]],[[["primarytoprimaryserver",3],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["workertoworkerserver",3],["request",3]]],[[["workertoprimaryserver",3],["request",3]]],[[["",0],["request",3]]],[[["",0],["request",3]]],[[["primarytoworkerserver",3],["request",3]]],[[["transactionsserver",3],["request",3]]],[[["",0],["request",3]]],[[["certificatedigest",3]]],[[["batchdigest",3]]],[[["batch",3]]],[[["transaction",3]]],[[["collectionerror",3]]],[[["batchmessage",3]]],[[["multiaddr",3]]],[[["publickey",3]]],[[["validatordata",3]]],[[["collectionretrievalresult",3]]],[[["getcollectionsrequest",3]]],[[["getcollectionsresponse",3]]],[[["removecollectionsrequest",3]]],[[["readcausalrequest",3]]],[[["readcausalresponse",3]]],[[["roundsrequest",3]]],[[["roundsresponse",3]]],[[["nodereadcausalrequest",3]]],[[["nodereadcausalresponse",3]]],[[["newnetworkinforequest",3]]],[[["bincodeencodedpayload",3]]],[[["empty",3]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["workertoworkerclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["batch",3]],["batch",3]],[[["batchdigest",3]],["batchdigest",3]],[[["header",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],["header",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["headerdigest",3]],["headerdigest",3]],[[["vote",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],["vote",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["votedigest",3]],["votedigest",3]],[[["certificate",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],["certificate",3,[["",26,[["clone",8],["verifyingkey",8]]]]]],[[["certificatedigest",3]],["certificatedigest",3]],[[["batchmessage",3]],["batchmessage",3]],[[["blockremovererror",3]],["blockremovererror",3]],[[["blockremovererrorkind",4]],["blockremovererrorkind",4]],[[["blockerrorkind",4]],["blockerrorkind",4]],[[["blockerror",3]],["blockerror",3]],[[["certificatedigest",3]],["certificatedigest",3]],[[["batchdigest",3]],["batchdigest",3]],[[["batch",3]],["batch",3]],[[["transaction",3]],["transaction",3]],[[["collectionerror",3]],["collectionerror",3]],[[["batchmessage",3]],["batchmessage",3]],[[["multiaddr",3]],["multiaddr",3]],[[["publickey",3]],["publickey",3]],[[["validatordata",3]],["validatordata",3]],[[["collectionretrievalresult",3]],["collectionretrievalresult",3]],[[["retrievalresult",4]],["retrievalresult",4]],[[["getcollectionsrequest",3]],["getcollectionsrequest",3]],[[["getcollectionsresponse",3]],["getcollectionsresponse",3]],[[["removecollectionsrequest",3]],["removecollectionsrequest",3]],[[["readcausalrequest",3]],["readcausalrequest",3]],[[["readcausalresponse",3]],["readcausalresponse",3]],[[["roundsrequest",3]],["roundsrequest",3]],[[["roundsresponse",3]],["roundsresponse",3]],[[["nodereadcausalrequest",3]],["nodereadcausalrequest",3]],[[["nodereadcausalresponse",3]],["nodereadcausalresponse",3]],[[["newnetworkinforequest",3]],["newnetworkinforequest",3]],[[["bincodeencodedpayload",3]],["bincodeencodedpayload",3]],[[["empty",3]],["empty",3]],[[["collectionerrortype",4]],["collectionerrortype",4]],[[["validatorclient",3,[["clone",8]]]],["validatorclient",3,[["clone",8]]]],[[["proposerclient",3,[["clone",8]]]],["proposerclient",3,[["clone",8]]]],[[["configurationclient",3,[["clone",8]]]],["configurationclient",3,[["clone",8]]]],[[["primarytoprimaryclient",3,[["clone",8]]]],["primarytoprimaryclient",3,[["clone",8]]]],[[["workertoworkerclient",3,[["clone",8]]]],["workertoworkerclient",3,[["clone",8]]]],[[["workertoprimaryclient",3,[["clone",8]]]],["workertoprimaryclient",3,[["clone",8]]]],[[["primarytoworkerclient",3,[["clone",8]]]],["primarytoworkerclient",3,[["clone",8]]]],[[["transactionsclient",3,[["clone",8]]]],["transactionsclient",3,[["clone",8]]]],[[["validatorserver",3,[["validator",8]]]],["validatorserver",3,[["validator",8]]]],[[["proposerserver",3,[["proposer",8]]]],["proposerserver",3,[["proposer",8]]]],[[["configurationserver",3,[["configuration",8]]]],["configurationserver",3,[["configuration",8]]]],[[["primarytoprimaryserver",3,[["primarytoprimary",8]]]],["primarytoprimaryserver",3,[["primarytoprimary",8]]]],[[["workertoworkerserver",3,[["workertoworker",8]]]],["workertoworkerserver",3,[["workertoworker",8]]]],[[["workertoprimaryserver",3,[["workertoprimary",8]]]],["workertoprimaryserver",3,[["workertoprimary",8]]]],[[["primarytoworkerserver",3,[["primarytoworker",8]]]],["primarytoworkerserver",3,[["primarytoworker",8]]]],[[["transactionsserver",3,[["transactions",8]]]],["transactionsserver",3,[["transactions",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["batchdigest",3],["batchdigest",3]],["ordering",4]],[[["headerdigest",3],["headerdigest",3]],["ordering",4]],[[["votedigest",3],["votedigest",3]],["ordering",4]],[[["certificatedigest",3],["certificatedigest",3]],["ordering",4]],[[["collectionerrortype",4],["collectionerrortype",4]],["ordering",4]],null,null,null,null,null,[[["certificate",3,[["verifyingkey",8]]]],["bool",0]],[[],["future",8]],[[],["future",8]],[[],["future",8]],[[],["future",8]],[[],["future",8]],[[],["future",8]],[[],["future",8]],[[],["future",8]],[[],["batch",3]],[[],["batchdigest",3]],[[],["headerbuilder",3,[["verifyingkey",8]]]],[[],["header",3,[["",26,[["default",8],["verifyingkey",8]]]]]],[[],["headerdigest",3]],[[],["votedigest",3]],[[],["certificate",3,[["",26,[["default",8],["verifyingkey",8]]]]]],[[],["certificatedigest",3]],[[],["batchmessage",3]],[[],["certificatedigest",3]],[[],["batchdigest",3]],[[],["batch",3]],[[],["transaction",3]],[[],["collectionerror",3]],[[],["batchmessage",3]],[[],["multiaddr",3]],[[],["publickey",3]],[[],["validatordata",3]],[[],["collectionretrievalresult",3]],[[],["getcollectionsrequest",3]],[[],["getcollectionsresponse",3]],[[],["removecollectionsrequest",3]],[[],["readcausalrequest",3]],[[],["readcausalresponse",3]],[[],["roundsrequest",3]],[[],["roundsresponse",3]],[[],["nodereadcausalrequest",3]],[[],["nodereadcausalresponse",3]],[[],["newnetworkinforequest",3]],[[],["bincodeencodedpayload",3]],[[],["empty",3]],[[],["collectionerrortype",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["batch",3]]]],[[],["result",4,[["batchdigest",3]]]],[[],["result",4,[["header",3,[["verifyingkey",8]]]]]],[[],["result",4,[["headerdigest",3]]]],[[],["result",4,[["vote",3,[["verifyingkey",8]]]]]],[[],["result",4,[["votedigest",3]]]],[[],["result",4,[["certificate",3,[["verifyingkey",8]]]]]],[[],["result",4,[["certificatedigest",3]]]],[[],["result",4,[["primarymessage",4,[["verifyingkey",8]]]]]],[[],["result",4,[["primaryworkermessage",4]]]],[[["bincodeencodedpayload",3]],["result",4,[["deserializeowned",8],["error",6]]]],[[],["result",4,[["workermessage",4,[["verifyingkey",8]]]]]],[[],["result",4,[["clientbatchrequest",3]]]],[[["batch",3]]],[[["header",3,[["verifyingkey",8]]]],["headerdigest",3]],[[["vote",3,[["verifyingkey",8]]]],["votedigest",3]],[[["certificate",3,[["verifyingkey",8]]]],["certificatedigest",3]],null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["retrievalresult",4],["",0]]],[[["certificatedigest",3]],["usize",0]],[[["batchdigest",3]],["usize",0]],[[["batch",3]],["usize",0]],[[["transaction",3]],["usize",0]],[[["collectionerror",3]],["usize",0]],[[["batchmessage",3]],["usize",0]],[[["multiaddr",3]],["usize",0]],[[["publickey",3]],["usize",0]],[[["validatordata",3]],["usize",0]],[[["collectionretrievalresult",3]],["usize",0]],[[["retrievalresult",4]],["usize",0]],[[["getcollectionsrequest",3]],["usize",0]],[[["getcollectionsresponse",3]],["usize",0]],[[["removecollectionsrequest",3]],["usize",0]],[[["readcausalrequest",3]],["usize",0]],[[["readcausalresponse",3]],["usize",0]],[[["roundsrequest",3]],["usize",0]],[[["roundsresponse",3]],["usize",0]],[[["nodereadcausalrequest",3]],["usize",0]],[[["nodereadcausalresponse",3]],["usize",0]],[[["newnetworkinforequest",3]],["usize",0]],[[["bincodeencodedpayload",3]],["usize",0]],[[["empty",3]],["usize",0]],null,null,[[["batch",3],["batch",3]],["bool",0]],[[["batchdigest",3],["batchdigest",3]],["bool",0]],[[["header",3,[["verifyingkey",8]]],["header",3,[["verifyingkey",8]]]],["bool",0]],[[["headerdigest",3],["headerdigest",3]],["bool",0]],[[["vote",3,[["verifyingkey",8]]],["vote",3,[["verifyingkey",8]]]],["bool",0]],[[["votedigest",3],["votedigest",3]],["bool",0]],[[["certificate",3,[["verifyingkey",8]]],["certificate",3,[["verifyingkey",8]]]],["bool",0]],[[["certificatedigest",3],["certificatedigest",3]],["bool",0]],[[["batchmessage",3],["batchmessage",3]],["bool",0]],[[["blockremovererrorkind",4],["blockremovererrorkind",4]],["bool",0]],[[["blockerrorkind",4],["blockerrorkind",4]],["bool",0]],[[["blockerror",3],["blockerror",3]],["bool",0]],[[["certificatedigest",3],["certificatedigest",3]],["bool",0]],[[["batchdigest",3],["batchdigest",3]],["bool",0]],[[["batch",3],["batch",3]],["bool",0]],[[["transaction",3],["transaction",3]],["bool",0]],[[["collectionerror",3],["collectionerror",3]],["bool",0]],[[["batchmessage",3],["batchmessage",3]],["bool",0]],[[["multiaddr",3],["multiaddr",3]],["bool",0]],[[["publickey",3],["publickey",3]],["bool",0]],[[["validatordata",3],["validatordata",3]],["bool",0]],[[["collectionretrievalresult",3],["collectionretrievalresult",3]],["bool",0]],[[["retrievalresult",4],["retrievalresult",4]],["bool",0]],[[["getcollectionsrequest",3],["getcollectionsrequest",3]],["bool",0]],[[["getcollectionsresponse",3],["getcollectionsresponse",3]],["bool",0]],[[["removecollectionsrequest",3],["removecollectionsrequest",3]],["bool",0]],[[["readcausalrequest",3],["readcausalrequest",3]],["bool",0]],[[["readcausalresponse",3],["readcausalresponse",3]],["bool",0]],[[["roundsrequest",3],["roundsrequest",3]],["bool",0]],[[["roundsresponse",3],["roundsresponse",3]],["bool",0]],[[["nodereadcausalrequest",3],["nodereadcausalrequest",3]],["bool",0]],[[["nodereadcausalresponse",3],["nodereadcausalresponse",3]],["bool",0]],[[["newnetworkinforequest",3],["newnetworkinforequest",3]],["bool",0]],[[["bincodeencodedpayload",3],["bincodeencodedpayload",3]],["bool",0]],[[["empty",3],["empty",3]],["bool",0]],[[["collectionerrortype",4],["collectionerrortype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["collectionerror",3]],["collectionerrortype",4]],null,null,null,[[["batch",3],["formatter",3]],["result",6]],[[["batchdigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["batchdigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["headerbuildererror",4],["formatter",3]],["result",6]],[[["headerbuildererror",4],["formatter",3]],["result",6]],[[["header",3,[["verifyingkey",8]]],["formatter",3]],["result",4,[["error",3]]]],[[["header",3,[["verifyingkey",8]]],["formatter",3]],["result",4,[["error",3]]]],[[["headerdigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["headerdigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["vote",3,[["verifyingkey",8]]],["formatter",3]],["result",4,[["error",3]]]],[[["votedigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["votedigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["certificate",3,[["verifyingkey",8]]],["formatter",3]],["result",4,[["error",3]]]],[[["certificatedigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["certificatedigest",3],["formatter",3]],["result",4,[["error",3]]]],[[["primarymessage",4,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["primaryworkermessage",4,[["debug",8]]],["formatter",3]],["result",6]],[[["batchmessage",3],["formatter",3]],["result",6]],[[["blockremovererror",3],["formatter",3]],["result",6]],[[["blockremovererrorkind",4],["formatter",3]],["result",6]],[[["blockerrorkind",4],["formatter",3]],["result",6]],[[["blockerrorkind",4],["formatter",3]],["result",6]],[[["blockerror",3],["formatter",3]],["result",6]],[[["blockerror",3],["formatter",3]],["result",6]],[[["certificatedigest",3],["formatter",3]],["result",6]],[[["batchdigest",3],["formatter",3]],["result",6]],[[["batch",3],["formatter",3]],["result",6]],[[["transaction",3],["formatter",3]],["result",6]],[[["collectionerror",3],["formatter",3]],["result",6]],[[["batchmessage",3],["formatter",3]],["result",6]],[[["multiaddr",3],["formatter",3]],["result",6]],[[["publickey",3],["formatter",3]],["result",6]],[[["validatordata",3],["formatter",3]],["result",6]],[[["collectionretrievalresult",3],["formatter",3]],["result",6]],[[["retrievalresult",4],["formatter",3]],["result",6]],[[["getcollectionsrequest",3],["formatter",3]],["result",6]],[[["getcollectionsresponse",3],["formatter",3]],["result",6]],[[["removecollectionsrequest",3],["formatter",3]],["result",6]],[[["readcausalrequest",3],["formatter",3]],["result",6]],[[["readcausalresponse",3],["formatter",3]],["result",6]],[[["roundsrequest",3],["formatter",3]],["result",6]],[[["roundsresponse",3],["formatter",3]],["result",6]],[[["nodereadcausalrequest",3],["formatter",3]],["result",6]],[[["nodereadcausalresponse",3],["formatter",3]],["result",6]],[[["newnetworkinforequest",3],["formatter",3]],["result",6]],[[["bincodeencodedpayload",3],["formatter",3]],["result",6]],[[["empty",3],["formatter",3]],["result",6]],[[["collectionerrortype",4],["formatter",3]],["result",6]],[[["validatorclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["proposerclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["configurationclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["primarytoprimaryclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["workertoworkerclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["workertoprimaryclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["primarytoworkerclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["transactionsclient",3,[["debug",8]]],["formatter",3]],["result",6]],[[["validatorserver",3,[["",26,[["debug",8],["validator",8]]]]],["formatter",3]],["result",6]],[[["proposerserver",3,[["",26,[["debug",8],["proposer",8]]]]],["formatter",3]],["result",6]],[[["configurationserver",3,[["",26,[["debug",8],["configuration",8]]]]],["formatter",3]],["result",6]],[[["primarytoprimaryserver",3,[["",26,[["debug",8],["primarytoprimary",8]]]]],["formatter",3]],["result",6]],[[["workertoworkerserver",3,[["",26,[["debug",8],["workertoworker",8]]]]],["formatter",3]],["result",6]],[[["workertoprimaryserver",3,[["",26,[["debug",8],["workertoprimary",8]]]]],["formatter",3]],["result",6]],[[["primarytoworkerserver",3,[["",26,[["debug",8],["primarytoworker",8]]]]],["formatter",3]],["result",6]],[[["transactionsserver",3,[["",26,[["debug",8],["transactions",8]]]]],["formatter",3]],["result",6]],[[["workermessage",4,[["",26,[["debug",8],["verifyingkey",8]]]]],["formatter",3]],["result",6]],[[["clientbatchrequest",3],["formatter",3]],["result",6]],[[["digesterror",4],["formatter",3]],["result",6]],[[["digesterror",4],["formatter",3]],["result",6]],[[]],[[["blockerror",3]],["blockresult",6]],[[["batchproto",3]],["batch",3]],[[]],[[]],[[["batchdigestproto",3]],["batchdigest",3]],[[]],[[["string",3]],["headerbuildererror",4]],[[["uninitializedfielderror",3]],["headerbuildererror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["certificatedigest",3]],["certificatedigestproto",3]],[[]],[[["batchdigest",3]],["batchdigestproto",3]],[[["batch",3]],["batchproto",3]],[[]],[[["transaction",6]],["transactionproto",3]],[[]],[[["blockerror",3]],["collectionerror",3]],[[]],[[["batchmessage",3]],["batchmessageproto",3]],[[]],[[]],[[]],[[["verifyingkey",8]],["publickeyproto",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bytes",3]],["bincodeencodedpayload",3]],[[]],[[]],[[["blockerrorkind",4]],["collectionerrortype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3,[["validator",8]]]],["validatorserver",3,[["validator",8]]]],[[["arc",3,[["proposer",8]]]],["proposerserver",3,[["proposer",8]]]],[[["arc",3,[["configuration",8]]]],["configurationserver",3,[["configuration",8]]]],[[["arc",3,[["primarytoprimary",8]]]],["primarytoprimaryserver",3,[["primarytoprimary",8]]]],[[["arc",3,[["workertoworker",8]]]],["workertoworkerserver",3,[["workertoworker",8]]]],[[["arc",3,[["workertoprimary",8]]]],["workertoprimaryserver",3,[["workertoprimary",8]]]],[[["arc",3,[["primarytoworker",8]]]],["primarytoworkerserver",3,[["primarytoworker",8]]]],[[["arc",3,[["transactions",8]]]],["transactionsserver",3,[["transactions",8]]]],[[["i32",0]],["option",4,[["collectionerrortype",4]]]],[[["committee",3]],["vec",3,[["certificate",3,[["verifyingkey",8]]]]]],[[["",0],["request",3,[["getcollectionsrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["validatorclient",3],["intorequest",8,[["getcollectionsrequest",3]]]],["future",8]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["batchdigest",3],["",0]]],[[["headerdigest",3],["",0]]],[[["votedigest",3],["",0]]],[[["certificatedigest",3],["",0]]],[[["collectionerrortype",4],["",0]]],null,[[["headerbuilder",3,[["verifyingkey",8]]],["headerdigest",3]],["headerbuilder",3,[["verifyingkey",8]]]],null,null,null,null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["i32",0]],["bool",0]],[[["option",4],["u32",0],["wiretype",4],["",0],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["batch",3],["batch",3]],["bool",0]],[[["batchdigest",3],["batchdigest",3]],["bool",0]],[[["headerdigest",3],["headerdigest",3]],["bool",0]],[[["votedigest",3],["votedigest",3]],["bool",0]],[[["certificatedigest",3],["certificatedigest",3]],["bool",0]],[[["batchmessage",3],["batchmessage",3]],["bool",0]],[[["blockerror",3],["blockerror",3]],["bool",0]],[[["certificatedigest",3],["certificatedigest",3]],["bool",0]],[[["batchdigest",3],["batchdigest",3]],["bool",0]],[[["batch",3],["batch",3]],["bool",0]],[[["transaction",3],["transaction",3]],["bool",0]],[[["collectionerror",3],["collectionerror",3]],["bool",0]],[[["batchmessage",3],["batchmessage",3]],["bool",0]],[[["multiaddr",3],["multiaddr",3]],["bool",0]],[[["publickey",3],["publickey",3]],["bool",0]],[[["validatordata",3],["validatordata",3]],["bool",0]],[[["collectionretrievalresult",3],["collectionretrievalresult",3]],["bool",0]],[[["retrievalresult",4],["retrievalresult",4]],["bool",0]],[[["getcollectionsrequest",3],["getcollectionsrequest",3]],["bool",0]],[[["getcollectionsresponse",3],["getcollectionsresponse",3]],["bool",0]],[[["removecollectionsrequest",3],["removecollectionsrequest",3]],["bool",0]],[[["readcausalrequest",3],["readcausalrequest",3]],["bool",0]],[[["readcausalresponse",3],["readcausalresponse",3]],["bool",0]],[[["roundsrequest",3],["roundsrequest",3]],["bool",0]],[[["roundsresponse",3],["roundsresponse",3]],["bool",0]],[[["nodereadcausalrequest",3],["nodereadcausalrequest",3]],["bool",0]],[[["nodereadcausalresponse",3],["nodereadcausalresponse",3]],["bool",0]],[[["newnetworkinforequest",3],["newnetworkinforequest",3]],["bool",0]],[[["bincodeencodedpayload",3],["bincodeencodedpayload",3]],["bool",0]],[[["dbmap",3,[["verifyingkey",8],["round",6]]],["dbmap",3,[["sequencenumber",6],["certificatedigest",3]]]],["consensusstore",3,[["verifyingkey",8]]]],[[],["batchdigest",3]],[[["verifyingkey",8],["round",6],["btreemap",3,[["batchdigest",3],["workerid",6]]],["btreeset",3,[["certificatedigest",3]]],["signatureservice",3]],["future",8]],[[["header",3],["",0],["signatureservice",3]],["future",8]],[[],["certificatedigest",3]],[[],["validatorclient",3]],[[],["proposerclient",3]],[[],["configurationclient",3]],[[],["primarytoprimaryclient",3]],[[],["workertoworkerclient",3]],[[],["workertoprimaryclient",3]],[[],["primarytoworkerclient",3]],[[],["transactionsclient",3]],[[["validator",8]],["validatorserver",3,[["validator",8]]]],[[["proposer",8]],["proposerserver",3,[["proposer",8]]]],[[["configuration",8]],["configurationserver",3,[["configuration",8]]]],[[["primarytoprimary",8]],["primarytoprimaryserver",3,[["primarytoprimary",8]]]],[[["workertoworker",8]],["workertoworkerserver",3,[["workertoworker",8]]]],[[["workertoprimary",8]],["workertoprimaryserver",3,[["workertoprimary",8]]]],[[["primarytoworker",8]],["primarytoworkerserver",3,[["primarytoworker",8]]]],[[["transactions",8]],["transactionsserver",3,[["transactions",8]]]],[[["",0],["request",3,[["newnetworkinforequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["configurationclient",3],["intorequest",8,[["newnetworkinforequest",3]]]],["future",8]],null,[[["",0],["request",3,[["nodereadcausalrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["proposerclient",3],["intorequest",8,[["nodereadcausalrequest",3]]]],["future",8]],null,[[["certificate",3,[["verifyingkey",8]]]],["verifyingkey",8]],null,[[["headerbuilder",3,[["verifyingkey",8]]],["btreeset",3,[["certificatedigest",3]]]],["headerbuilder",3,[["verifyingkey",8]]]],[[["certificate",3,[["verifyingkey",8]]]],["vec",3]],null,[[["batchdigest",3],["batchdigest",3]],["option",4,[["ordering",4]]]],[[["headerdigest",3],["headerdigest",3]],["option",4,[["ordering",4]]]],[[["votedigest",3],["votedigest",3]],["option",4,[["ordering",4]]]],[[["certificatedigest",3],["certificatedigest",3]],["option",4,[["ordering",4]]]],[[["collectionerrortype",4],["collectionerrortype",4]],["option",4,[["ordering",4]]]],[[["headerbuilder",3,[["verifyingkey",8]]],["btreemap",3,[["batchdigest",3],["workerid",6]]]],["headerbuilder",3,[["verifyingkey",8]]]],null,null,[[["validatorserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["proposerserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["configurationserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["primarytoprimaryserver",3],["context",3]],["poll",4,[["result",4]]]],[[["workertoworkerserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["workertoprimaryserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["primarytoworkerserver",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["context",3]],["poll",4,[["result",4]]]],[[["transactionsserver",3],["context",3]],["poll",4,[["result",4]]]],null,null,null,[[["",0],["request",3,[["readcausalrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["validatorclient",3],["intorequest",8,[["readcausalrequest",3]]]],["future",8]],[[["consensusstore",3,[["verifyingkey",8]]]],["hashmap",3,[["verifyingkey",8],["round",6]]]],[[["consensusstore",3,[["verifyingkey",8]]]],["storeresult",6,[["sequencenumber",6]]]],[[["consensusstore",3,[["verifyingkey",8]]],["rangeinclusive",3]],["storeresult",6,[["vec",3,[["option",4,[["certificatedigest",3]]]]]]]],[[["",0],["request",3,[["removecollectionsrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["validatorclient",3],["intorequest",8,[["removecollectionsrequest",3]]]],["future",8]],null,null,[[["headerbuilder",3,[["verifyingkey",8]]],["round",6]],["headerbuilder",3,[["verifyingkey",8]]]],[[["certificate",3,[["verifyingkey",8]]]],["round",6]],null,null,null,[[["",0],["request",3,[["roundsrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["proposerclient",3],["intorequest",8,[["roundsrequest",3]]]],["future",8]],[[["validatorclient",3]],["validatorclient",3]],[[["proposerclient",3]],["proposerclient",3]],[[["configurationclient",3]],["configurationclient",3]],[[["primarytoprimaryclient",3]],["primarytoprimaryclient",3]],[[["workertoworkerclient",3]],["workertoworkerclient",3]],[[["workertoprimaryclient",3]],["workertoprimaryclient",3]],[[["primarytoworkerclient",3]],["primarytoworkerclient",3]],[[["transactionsclient",3]],["transactionsclient",3]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["request",3,[["bincodeencodedpayload",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["primarytoprimaryclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["workertoworkerclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["workertoprimaryclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["primarytoworkerclient",3],["intorequest",8,[["bincodeencodedpayload",3]]]],["future",8]],[[["batch",3]],["result",4]],[[["batchdigest",3]],["result",4]],[[["header",3,[["verifyingkey",8]]]],["result",4]],[[["headerdigest",3]],["result",4]],[[["vote",3,[["verifyingkey",8]]]],["result",4]],[[["votedigest",3]],["result",4]],[[["certificate",3,[["verifyingkey",8]]]],["result",4]],[[["certificatedigest",3]],["result",4]],[[["primarymessage",4,[["verifyingkey",8]]]],["result",4]],[[["primaryworkermessage",4]],["result",4]],[[["workermessage",4,[["verifyingkey",8]]]],["result",4]],[[["clientbatchrequest",3]],["result",4]],[[["asref",8]],["result",4,[["batchdigest",3],["digesterror",4]]]],[[["collectionerror",3],["collectionerrortype",4]]],[[["headerbuilder",3,[["verifyingkey",8]]]],["headerbuilder",3,[["verifyingkey",8]]]],null,null,null,[[["",0],["request",3,[["transaction",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["transactionsclient",3],["intorequest",8,[["transaction",3]]]],["future",8]],[[["",0],["request",3,[["streaming",3,[["transaction",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["transactionsclient",3],["intostreamingrequest",8]],["futurestring",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["certificatedigestproto",3]],["result",4,[["certificatedigest",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["bincodeencodedpayload",3],["error",6]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["header",3,[["verifyingkey",8]]],["committee",3]],["dagresult",6]],[[["vote",3,[["verifyingkey",8]]],["committee",3]],["dagresult",6]],[[["certificate",3,[["verifyingkey",8]]],["committee",3]],["dagresult",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["validatorclient",3,[["interceptedservice",3]]]],[[],["proposerclient",3,[["interceptedservice",3]]]],[[],["configurationclient",3,[["interceptedservice",3]]]],[[],["primarytoprimaryclient",3,[["interceptedservice",3]]]],[[],["workertoworkerclient",3,[["interceptedservice",3]]]],[[],["workertoprimaryclient",3,[["interceptedservice",3]]]],[[],["primarytoworkerclient",3,[["interceptedservice",3]]]],[[],["transactionsclient",3,[["interceptedservice",3]]]],[[["validator",8]],["interceptedservice",3,[["validatorserver",3,[["validator",8]]]]]],[[["proposer",8]],["interceptedservice",3,[["proposerserver",3,[["proposer",8]]]]]],[[["configuration",8]],["interceptedservice",3,[["configurationserver",3,[["configuration",8]]]]]],[[["primarytoprimary",8]],["interceptedservice",3,[["primarytoprimaryserver",3,[["primarytoprimary",8]]]]]],[[["workertoworker",8]],["interceptedservice",3,[["workertoworkerserver",3,[["workertoworker",8]]]]]],[[["workertoprimary",8]],["interceptedservice",3,[["workertoprimaryserver",3,[["workertoprimary",8]]]]]],[[["primarytoworker",8]],["interceptedservice",3,[["primarytoworkerserver",3,[["primarytoworker",8]]]]]],[[["transactions",8]],["interceptedservice",3,[["transactionsserver",3,[["transactions",8]]]]]],[[["headerbuilder",3,[["verifyingkey",8]]],["batch",3],["workerid",6]],["headerbuilder",3,[["verifyingkey",8]]]],[[["consensusstore",3,[["verifyingkey",8]]],["hashmap",3],["sequencenumber",6],["certificatedigest",3]],["result",4,[["typedstoreerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["dagerror",4],["formatter",3]],["result",6]],[[["dagerror",4],["formatter",3]],["result",6]],[[["cryptoerror",6]],["dagerror",4]],[[["box",3,[["errorkind",4]]]],["dagerror",4]],[[["storeerror",6]],["dagerror",4]],[[]],[[],["usize",0]],[[]],[[],["request",3]],[[["dagerror",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null],"p":[[3,"Batch"],[3,"BatchDigest"],[3,"ClientBatchRequest"],[4,"RetrievalResult"],[4,"WorkerMessage"],[4,"BlockErrorKind"],[4,"PrimaryMessage"],[4,"PrimaryWorkerMessage"],[8,"WorkerToWorker"],[4,"CollectionErrorType"],[4,"BlockRemoverErrorKind"],[4,"DigestError"],[4,"HeaderBuilderError"],[3,"ValidatorClient"],[3,"ProposerClient"],[3,"ConfigurationClient"],[3,"PrimaryToPrimaryClient"],[3,"WorkerToWorkerClient"],[3,"WorkerToPrimaryClient"],[3,"PrimaryToWorkerClient"],[3,"TransactionsClient"],[3,"MultiAddrProto"],[3,"ValidatorData"],[3,"HeaderBuilder"],[3,"Header"],[3,"Vote"],[3,"ConsensusStore"],[3,"HeaderDigest"],[3,"VoteDigest"],[3,"Certificate"],[3,"CertificateDigest"],[3,"BatchMessage"],[3,"BlockRemoverError"],[3,"BlockError"],[3,"CertificateDigestProto"],[3,"BatchDigestProto"],[3,"BatchProto"],[3,"TransactionProto"],[3,"CollectionError"],[3,"BatchMessageProto"],[3,"PublicKeyProto"],[3,"CollectionRetrievalResult"],[3,"GetCollectionsRequest"],[3,"GetCollectionsResponse"],[3,"RemoveCollectionsRequest"],[3,"ReadCausalRequest"],[3,"ReadCausalResponse"],[3,"RoundsRequest"],[3,"RoundsResponse"],[3,"NodeReadCausalRequest"],[3,"NodeReadCausalResponse"],[3,"NewNetworkInfoRequest"],[3,"BincodeEncodedPayload"],[3,"Empty"],[3,"ValidatorServer"],[3,"ProposerServer"],[3,"ConfigurationServer"],[3,"PrimaryToPrimaryServer"],[3,"WorkerToWorkerServer"],[3,"WorkerToPrimaryServer"],[3,"PrimaryToWorkerServer"],[3,"TransactionsServer"],[6,"BlockResult"],[8,"Validator"],[8,"Configuration"],[8,"Proposer"],[8,"PrimaryToWorker"],[8,"WorkerToPrimary"],[8,"PrimaryToPrimary"],[8,"Transactions"],[13,"InvalidArgumentError"],[13,"UninitializedField"],[13,"ValidationError"],[13,"Header"],[13,"Vote"],[13,"Certificate"],[13,"CertificatesRequest"],[13,"CertificatesBatchRequest"],[13,"PayloadAvailabilityRequest"],[13,"CertificatesBatchResponse"],[13,"PayloadAvailabilityResponse"],[13,"Synchronize"],[13,"Cleanup"],[13,"RequestBatch"],[13,"DeleteBatches"],[13,"Batch"],[13,"Error"],[13,"Batch"],[13,"BatchRequest"],[4,"DagError"],[13,"InvalidSignature"],[13,"StoreError"],[13,"SerializationError"],[13,"MalformedHeader"],[13,"UnknownAuthority"],[13,"AuthorityReuse"],[13,"UnexpectedVote"],[13,"HeaderRequiresQuorum"],[13,"TooOld"]]},\
"worker":{"doc":"","t":[13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Batch","BatchRequest","Worker","WorkerMessage","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","from","from","init","init","into","into","into_request","into_request","serialize","spawn","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","1"],"q":["worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","worker::WorkerMessage","",""],"d":["Used by workers to send a new batch or to reply to a batch …","Used by workers to request batches.","","The message exchanged between workers.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[1,1,0,0,2,1,2,1,2,1,2,1,1,2,1,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2,1,2,1,3,4,4],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["workermessage",4]]]],[[["usize",0]]],[[["usize",0]]],[[["workermessage",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["workermessage",4]],["result",4]],[[["verifyingkey",8],["workerid",6],["sharedcommittee",6,[["verifyingkey",8]]],["parameters",3],["store",3,[["batchdigest",3],["serializedbatchmessage",6]]]],["joinhandle",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null],"p":[[4,"WorkerMessage"],[3,"Worker"],[13,"Batch"],[13,"BatchRequest"]]},\
"workspace_hack":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
